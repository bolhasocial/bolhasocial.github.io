{"version":3,"sources":["webpack:///component---src-layouts-index-jsx-b5fa068d63beef03de12.js","webpack:///./.cache/json/layout-index.json?2af0","webpack:///./.cache/layouts/index.js","webpack:///./~/eve/eve.js","webpack:///./~/performance-now/lib/performance-now.js","webpack:///./~/raf/index.js","webpack:///./~/react-burger-menu/lib/BurgerIcon.js","webpack:///./~/react-burger-menu/lib/BurgerMenu.js","webpack:///./~/react-burger-menu/lib/CrossIcon.js","webpack:///./~/react-burger-menu/lib/baseStyles.js","webpack:///./~/react-burger-menu/lib/menuFactory.js","webpack:///./~/react-burger-menu/lib/menus/bubble.js","webpack:///./~/react-burger-menu/lib/menus/elastic.js","webpack:///./~/react-burger-menu/lib/menus/fallDown.js","webpack:///./~/react-burger-menu/lib/menus/push.js","webpack:///./~/react-burger-menu/lib/menus/pushRotate.js","webpack:///./~/react-burger-menu/lib/menus/reveal.js","webpack:///./~/react-burger-menu/lib/menus/scaleDown.js","webpack:///./~/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./~/react-burger-menu/lib/menus/slide.js","webpack:///./~/react-burger-menu/lib/menus/stack.js","webpack:///./~/react-burger-menu/lib/snapsvgImporter.js","webpack:///./~/react-headroom/dist/index.js","webpack:///./~/react-headroom/dist/shouldUpdate.js","webpack:///./~/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./src/assets/images/logo.png","webpack:///./src/components/Navigation/Navigation.jsx","webpack:///./src/components/Navigation/Navigation.module.scss","webpack:///./src/components/NavigationResults/NavigationResults.jsx","webpack:///./src/components/NavigationResults/NavigationResults.module.scss","webpack:///./src/components/SEO/SEO.jsx?f7bd","webpack:///./src/layouts/apple-touch-icon.png","webpack:///./src/layouts/favicon.png","webpack:///./src/layouts/index.jsx"],"names":["webpackJsonp","145","module","exports","layoutContext","308","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","_react2","_index","_index2","_layoutIndex","_layoutIndex2","props","createElement","423","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","version","has","separator","comaseparator","wildcard","numsort","a","b","events","n","firstDefined","ii","this","lastDefined","objtos","toString","Str","String","isArray","Array","ar","eve","name","scope","l","oldstop","args","slice","listeners","z","indexed","queue","out","ce","push","zIndex","sort","apply","_events","item","items","k","j","jj","nes","names","split","e","es","concat","f","sep","replace","RegExp","on","exist","event","attrs","nt","subname","cur","join","test","nts","off","unbind","splice","inodes","unshift","funcs","prune","once","f2","undefined","window","624","process","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","hr","uptime","Date","getTime","627","global","root","vendors","suffix","raf","caf","last","id","frameDuration","callback","_now","next","Math","max","setTimeout","cp","cancelled","round","handle","fn","cancel","polyfill","object","requestAnimationFrame","cancelAnimationFrame","628","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_get","_x","_x2","_x3","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_propTypes","_propTypes2","BurgerIcon","_Component","state","hover","index","position","height","left","right","top","opacity","_this","icon","buttonStyle","width","margin","padding","border","fontSize","cursor","customIcon","extraProps","className","style","styles","bmIcon","cloneElement","map","bar","barClassName","trim","getLineStyle","bmBurgerBars","bmBurgerButton","onClick","onMouseOver","setState","onMouseOut","Component","propTypes","string","element","defaultProps","629","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","630","CrossIcon","type","transform","buttonWrapperStyle","textIndent","background","outline","bmCross","crossClassName","getCrossStyle","bmCrossButton","631","overlay","isOpen","MozTransform","MsTransform","OTransform","WebkitTransform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","19","_x4","_x5","_reactDom","_reactDom2","_baseStyles","_baseStyles2","_BurgerIcon","_BurgerIcon2","_CrossIcon","_CrossIcon2","Menu","options","noStateChange","newState","applyWrapperStyles","onStateChange","timeoutId","clearTimeout","set","bodyClassName","body","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","wrapperStyles","html","wrapper","getElementById","console","error","builtStyles","getStyle","prop","forEach","el","inline","propName","charAt","toUpperCase","output","formattedWidth","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","_this2","svg","morphShape","findDOMNode","path","lib","select","animate","attr","pathInitial","nextProps","_this3","noOverlay","overlayClassName","shouldDisableOverlayClick","getStyles","morphShapeClassName","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","children","itemClassName","filter","customCrossIcon","crossButtonClassName","customBurgerIcon","burgerButtonClassName","burgerBarClassName","oneOfType","oneOf","func","bool","isRequired","number","632","_snapsvgImporter","_snapsvgImporter2","_menuFactory","_menuFactory2","pathOpen","pos","steps","stepsTotal","mina","nextStep","easein","nthChild","closeButton","633","easeinout","whiteSpace","634","perspective","perspectiveOrigin","635","636","transformOrigin","transformStyle","637","visibility","burgerIcon","638","639","640","641","244","Snap","642","_objectWithoutProperties","keys","indexOf","_possibleConstructorReturn","self","ReferenceError","_shallowequal","_shallowequal2","_raf","_raf2","_shouldUpdate2","_shouldUpdate3","noop","Headroom","setRef","ref","inner","setHeightOffset","offsetHeight","resizeTicking","getScrollY","pageYOffset","scrollTop","documentElement","parentNode","getViewportHeight","innerHeight","clientHeight","getDocumentHeight","scrollHeight","getElementPhysicalHeight","elm","getElementHeight","getScrollerPhysicalHeight","getScrollerHeight","isOutOfBound","currentScrollY","pastTop","scrollerPhysicalHeight","scrollerHeight","pastBottom","handleScroll","scrollTicking","update","handleResize","unpin","onUnpin","translateY","pin","onPin","unfix","onUnfix","_shouldUpdate","lastKnownScrollY","action","disable","addEventListener","calcHeightOnResize","removeEventListener","nextState","prevProps","_props","userClassName","divProps","disableInlineStyles","upTolerance","downTolerance","pinStart","wrapperStyle","rest","innerStyle","WebkitTransition","MozTransition","OTransition","wrapperClassName","any","643","scrollDirection","distanceScrolled","abs","673","requestID","animations","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","idgen","idprefix","ID","timer","sta","val","s","ds","dur","B","speed","spd","duration","stopit","pause","pdif","resume","frame","res","start","end","easing","timeStamp","len","A","anim","linear","status","time","getById","easeout","pow","q","Q","sqrt","x","X","y","Y","t","backin","backout","sin","PI","bounce","p","w","h","nodeType","wrap","is","Element","doc","Paper","$","createTextNode","text","createComment","substring","getAttributeNS","xlink","xmlns","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","objectToString","clone","repush","array","cacher","postprocessor","newf","arg","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","math","atan2","rad","deg","svgTransform2string","tstr","all","params","tan","transform2matrix","bbox","tdata","parseTransformString","m","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","getSomeDefs","node","ownerSVGElement","pdefs","defs","make","getSomeSVG","unit2px","getW","E","mgr","getBBox","getH","nam","class","fill","appendChild","removeChild","add2group","list","childNodes","snap","hub","paper","tagName","nodeName","anims","_","g","mask","pattern","symbol","method","Fragment","frag","proto","ownerDocument","getElementsByTagName","dom","contentDocument","jsonFiller","win","toFloat","parseFloat","toInt","parseInt","mmax","mmin","min","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","url","format","tokenRegex","objNotationRegex","replacer","quote","quotedName","isFunc","str","cos","asin","num","acos","atan","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","hex","rgbtoString","toHex","red","green","blue","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","S","V","L","M","parsePathString","pathString","pth","arr","paramCounts","c","u","data","TString","rgTransform","_unit2px","contains","compareDocumentPosition","adown","bup","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","lastIndexOf","css","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","pageXOffset","scrollLeft","getElementByPoint","canvas","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","extractTransform","doReturn","matrix","fixids","urltest","it","uses","linktest","els","ids","oldid","old","fs","chld","elproto","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","propString","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","fillStroke","URL","grad","gradient","setFontSize","textExtract","chi","getFontSize","reURLValue","deurl","clipIt","gradrg","seed","step","stops","tokens","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","getNumber","getUnit","unit","operators","+","-","/","*","reUnit","reAddon","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","stopOffset","GgetBBox","GsetStops","addStop","gradientLinear","gradientRadial","gradientUnits","setStops","fx","fy","clear","paths","ps","sleep","r1","r2","r0","rectPath","p2s","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","point","sp","subpaths","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpathsAtLength","getPath","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","equaliseTransform","tt1","tt2","maxlength","path2array","getViewBox","getColour","isNumeric","arrayEqual","arr1","arr2","equal","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","init","origTransform","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","mui","flat","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","251","620","313","_gatsbyLink","_gatsbyLink2","_reactHeadroom","_reactHeadroom2","_reactBurgerMenu","_SiteConfig","_SiteConfig2","_NavigationModule","_NavigationModule2","_logo","_logo2","Navigation","menuOpen","handleStateChange","closeMenu","render","header","logo","alt","siteTitle","navigation","activeClassName","mobileNav","mobileNavName","428","socialMedia","314","_NavigationResultsModule","_NavigationResultsModule2","NavigationResults","429","114","_reactHelmet","_reactHelmet2","SEO","postNode","postPath","postSEO","title","description","postURL","realPrefix","pathPrefix","postMeta","frontmatter","excerpt","cover","childImageSharp","resize","siteUrl","siteTitleAlt","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","@id","headline","lang","siteLanguage","charSet","httpEquiv","content","JSON","stringify","ogLanguage","ogSiteName","siteFBAppID","userTwitter","687","688","320","_Navigation","_Navigation2","_NavigationResults","_NavigationResults2","_SEO","_SEO2","_favicon","_favicon2","_appleTouchIcon","_appleTouchIcon2","MainLayout","isResults","location","pathname","componentDidMount","onhashchange","621"],"mappings":"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","file":"component---src-layouts-index-jsx-b5fa068d63beef03de12.js","sourcesContent":["webpackJsonp([79611799117203,60335399758886],{\n\n/***/ 145:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"layoutContext\":{}}\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(320);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _layoutIndex = __webpack_require__(145);\n\t\n\tvar _layoutIndex2 = _interopRequireDefault(_layoutIndex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\t\n\t(function (glob) {\n\t    var version = \"0.5.4\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        objtos = Object.prototype.toString,\n\t        Str = String,\n\t        isArray = Array.isArray || function (ar) {\n\t            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n\t        },\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\t\n\t     * Fires event with given `name`, given scope and other parameters.\n\t\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\t\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            var oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event;\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t    // Undocumented. Debug only.\n\t    eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\t\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\t\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\t\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = isArray(name) ? name : name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    /*\\\n\t     * eve.separator\n\t     [ method ]\n\t\n\t     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n\t     * here. Be aware that if you pass a string longer than one character it will be treated as\n\t     * a list of characters.\n\t\n\t     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n\t    \\*/\n\t    eve.separator = function (sep) {\n\t        if (sep) {\n\t            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n\t            sep = \"[\" + sep + \"]\";\n\t            separator = new RegExp(sep);\n\t        } else {\n\t            separator = /[\\.\\/]/;\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     - name (array) if you don’t want to use separators, you can use array of strings\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = isArray(name) ? name : Str(name).split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n\t        }\n\t        return cur;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return isArray(current_event) ? current_event : current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = isArray(name) ? name : Str(name).split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events],\n\t            inodes = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                        inodes.unshift({\n\t                            n: e,\n\t                            name: names[i]\n\t                        });\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                        inodes.unshift({\n\t                            n: e,\n\t                            name: key\n\t                        });\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t        // prune inner nodes in path\n\t        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n\t            e = inodes[i];\n\t            for (key in e.n[e.name].f) {\n\t                // not empty (has listeners)\n\t                continue prune;\n\t            }\n\t            for (key in e.n[e.name].n) {\n\t                // not empty (has children)\n\t                continue prune;\n\t            }\n\t            // is empty\n\t            delete e.n[e.name];\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.off(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    glob.eve = eve;\n\t    typeof module != \"undefined\" && module.exports ? module.exports = eve :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : glob.eve = eve;\n\t})(typeof window != \"undefined\" ? window : this);\n\n\n/***/ }),\n\n/***/ 624:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2\n\t(function() {\n\t  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\t\n\t  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n\t    module.exports = function() {\n\t      return performance.now();\n\t    };\n\t  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n\t    module.exports = function() {\n\t      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n\t    };\n\t    hrtime = process.hrtime;\n\t    getNanoSeconds = function() {\n\t      var hr;\n\t      hr = hrtime();\n\t      return hr[0] * 1e9 + hr[1];\n\t    };\n\t    moduleLoadTime = getNanoSeconds();\n\t    upTime = process.uptime() * 1e9;\n\t    nodeLoadTime = moduleLoadTime - upTime;\n\t  } else if (Date.now) {\n\t    module.exports = function() {\n\t      return Date.now() - loadTime;\n\t    };\n\t    loadTime = Date.now();\n\t  } else {\n\t    module.exports = function() {\n\t      return new Date().getTime() - loadTime;\n\t    };\n\t    loadTime = new Date().getTime();\n\t  }\n\t\n\t}).call(this);\n\t\n\t//# sourceMappingURL=performance-now.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n\n/***/ 627:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(624)\n\t  , root = typeof window === 'undefined' ? global : window\n\t  , vendors = ['moz', 'webkit']\n\t  , suffix = 'AnimationFrame'\n\t  , raf = root['request' + suffix]\n\t  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\t\n\tfor(var i = 0; !raf && i < vendors.length; i++) {\n\t  raf = root[vendors[i] + 'Request' + suffix]\n\t  caf = root[vendors[i] + 'Cancel' + suffix]\n\t      || root[vendors[i] + 'CancelRequest' + suffix]\n\t}\n\t\n\t// Some versions of FF have rAF but not cAF\n\tif(!raf || !caf) {\n\t  var last = 0\n\t    , id = 0\n\t    , queue = []\n\t    , frameDuration = 1000 / 60\n\t\n\t  raf = function(callback) {\n\t    if(queue.length === 0) {\n\t      var _now = now()\n\t        , next = Math.max(0, frameDuration - (_now - last))\n\t      last = next + _now\n\t      setTimeout(function() {\n\t        var cp = queue.slice(0)\n\t        // Clear queue here to prevent\n\t        // callbacks from appending listeners\n\t        // to the current frame's queue\n\t        queue.length = 0\n\t        for(var i = 0; i < cp.length; i++) {\n\t          if(!cp[i].cancelled) {\n\t            try{\n\t              cp[i].callback(last)\n\t            } catch(e) {\n\t              setTimeout(function() { throw e }, 0)\n\t            }\n\t          }\n\t        }\n\t      }, Math.round(next))\n\t    }\n\t    queue.push({\n\t      handle: ++id,\n\t      callback: callback,\n\t      cancelled: false\n\t    })\n\t    return id\n\t  }\n\t\n\t  caf = function(handle) {\n\t    for(var i = 0; i < queue.length; i++) {\n\t      if(queue[i].handle === handle) {\n\t        queue[i].cancelled = true\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = function(fn) {\n\t  // Wrap in a new function to prevent\n\t  // `cancel` potentially being assigned\n\t  // to the native rAF function\n\t  return raf.call(root, fn)\n\t}\n\tmodule.exports.cancel = function() {\n\t  caf.apply(root, arguments)\n\t}\n\tmodule.exports.polyfill = function(object) {\n\t  if (!object) {\n\t    object = root;\n\t  }\n\t  object.requestAnimationFrame = raf\n\t  object.cancelAnimationFrame = caf\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 628:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar BurgerIcon = (function (_Component) {\n\t  _inherits(BurgerIcon, _Component);\n\t\n\t  function BurgerIcon(props) {\n\t    _classCallCheck(this, BurgerIcon);\n\t\n\t    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\t    this.state = {\n\t      hover: false\n\t    };\n\t  }\n\t\n\t  _createClass(BurgerIcon, [{\n\t    key: 'getLineStyle',\n\t    value: function getLineStyle(index) {\n\t      return {\n\t        position: 'absolute',\n\t        height: '20%',\n\t        left: 0,\n\t        right: 0,\n\t        top: 20 * (index * 2) + '%',\n\t        opacity: this.state.hover ? 0.6 : 1\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon = undefined;\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        opacity: 0,\n\t        fontSize: 8,\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-icon',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          null,\n\t          [0, 1, 2].map(function (bar) {\n\t            return _react2['default'].createElement('span', {\n\t              key: bar,\n\t              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n\t              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: ('bm-burger-button ' + this.props.className).trim(),\n\t          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          {\n\t            onClick: this.props.onClick,\n\t            onMouseOver: function () {\n\t              return _this.setState({ hover: true });\n\t            },\n\t            onMouseOut: function () {\n\t              return _this.setState({ hover: false });\n\t            },\n\t            style: buttonStyle\n\t          },\n\t          'Open Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BurgerIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = BurgerIcon;\n\t\n\tBurgerIcon.propTypes = {\n\t  barClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tBurgerIcon.defaultProps = {\n\t  barClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 629:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = {\n\t  slide: __webpack_require__(640),\n\t  stack: __webpack_require__(641),\n\t  elastic: __webpack_require__(633),\n\t  bubble: __webpack_require__(632),\n\t  push: __webpack_require__(635),\n\t  pushRotate: __webpack_require__(636),\n\t  scaleDown: __webpack_require__(638),\n\t  scaleRotate: __webpack_require__(639),\n\t  fallDown: __webpack_require__(634),\n\t  reveal: __webpack_require__(637)\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 630:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar CrossIcon = (function (_Component) {\n\t  _inherits(CrossIcon, _Component);\n\t\n\t  function CrossIcon() {\n\t    _classCallCheck(this, CrossIcon);\n\t\n\t    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(CrossIcon, [{\n\t    key: 'getCrossStyle',\n\t    value: function getCrossStyle(type) {\n\t      return {\n\t        position: 'absolute',\n\t        width: 3,\n\t        height: 14,\n\t        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon;\n\t      var buttonWrapperStyle = {\n\t        position: 'absolute',\n\t        width: 24,\n\t        height: 24,\n\t        right: 8,\n\t        top: 8\n\t      };\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        textIndent: -9999,\n\t        background: 'transparent',\n\t        outline: 'none',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-cross',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          { style: { position: 'absolute', top: '6px', right: '14px' } },\n\t          ['before', 'after'].map(function (type, i) {\n\t            return _react2['default'].createElement('span', {\n\t              key: i,\n\t              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n\t              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: ('bm-cross-button ' + this.props.className).trim(),\n\t          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          { onClick: this.props.onClick, style: buttonStyle },\n\t          'Close Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CrossIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = CrossIcon;\n\t\n\tCrossIcon.propTypes = {\n\t  crossClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tCrossIcon.defaultProps = {\n\t  crossClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 631:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar styles = {\n\t  overlay: function overlay(isOpen) {\n\t    return {\n\t      position: 'fixed',\n\t      zIndex: 1000,\n\t      width: '100%',\n\t      height: '100%',\n\t      background: 'rgba(0, 0, 0, 0.3)',\n\t      opacity: isOpen ? 1 : 0,\n\t      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      zIndex: 1100,\n\t      width: width,\n\t      height: '100%',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  menu: function menu() {\n\t    return {\n\t      height: '100%',\n\t      boxSizing: 'border-box',\n\t      overflow: 'auto'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList() {\n\t    return {\n\t      height: '100%'\n\t    };\n\t  },\n\t\n\t  item: function item() {\n\t    return {\n\t      display: 'block',\n\t      outline: 'none'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = styles;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(141);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _baseStyles = __webpack_require__(631);\n\t\n\tvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\t\n\tvar _BurgerIcon = __webpack_require__(628);\n\t\n\tvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\t\n\tvar _CrossIcon = __webpack_require__(630);\n\t\n\tvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\t\n\texports['default'] = function (styles) {\n\t  var Menu = (function (_Component) {\n\t    _inherits(Menu, _Component);\n\t\n\t    function Menu(props) {\n\t      _classCallCheck(this, Menu);\n\t\n\t      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\t      this.state = {\n\t        isOpen: false\n\t      };\n\t    }\n\t\n\t    _createClass(Menu, [{\n\t      key: 'toggleMenu',\n\t      value: function toggleMenu() {\n\t        var _this = this;\n\t\n\t        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t        var isOpen = options.isOpen;\n\t        var noStateChange = options.noStateChange;\n\t\n\t        var newState = {\n\t          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n\t        };\n\t\n\t        this.applyWrapperStyles();\n\t\n\t        this.setState(newState, function () {\n\t          !noStateChange && _this.props.onStateChange(newState);\n\t\n\t          // Timeout ensures wrappers are cleared after animation finishes.\n\t          _this.timeoutId && clearTimeout(_this.timeoutId);\n\t          _this.timeoutId = setTimeout(function () {\n\t            _this.timeoutId = null;\n\t            if (!newState.isOpen) {\n\t              _this.applyWrapperStyles(false);\n\t            }\n\t          }, 500);\n\t        });\n\t      }\n\t\n\t      // Applies component-specific styles to external wrapper elements.\n\t    }, {\n\t      key: 'applyWrapperStyles',\n\t      value: function applyWrapperStyles() {\n\t        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t        if (this.props.bodyClassName) {\n\t          var body = document.querySelector('body');\n\t          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n\t        }\n\t\n\t        if (styles.pageWrap && this.props.pageWrapId) {\n\t          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n\t        }\n\t\n\t        if (styles.outerContainer && this.props.outerContainerId) {\n\t          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n\t        }\n\t      }\n\t\n\t      // Sets or unsets styles on DOM elements outside the menu component.\n\t      // This is necessary for correct page interaction with some of the menus.\n\t      // Throws and returns if the required external elements don't exist,\n\t      // which means any external page animations won't be applied.\n\t    }, {\n\t      key: 'handleExternalWrapper',\n\t      value: function handleExternalWrapper(id, wrapperStyles, set) {\n\t        var html = document.querySelector('html');\n\t        var body = document.querySelector('body');\n\t        var wrapper = document.getElementById(id);\n\t\n\t        if (!wrapper) {\n\t          console.error(\"Element with ID '\" + id + \"' not found\");\n\t          return;\n\t        }\n\t\n\t        var builtStyles = this.getStyle(wrapperStyles);\n\t\n\t        for (var prop in builtStyles) {\n\t          if (builtStyles.hasOwnProperty(prop)) {\n\t            wrapper.style[prop] = set ? builtStyles[prop] : '';\n\t          }\n\t        }\n\t\n\t        // Prevent any horizontal scroll.\n\t        [html, body].forEach(function (element) {\n\t          element.style['overflow-x'] = set ? 'hidden' : '';\n\t        });\n\t      }\n\t\n\t      // Builds styles incrementally for a given element.\n\t    }, {\n\t      key: 'getStyles',\n\t      value: function getStyles(el, index, inline) {\n\t        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\t\n\t        // Set base styles.\n\t        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\t\n\t        // Add animation-specific styles.\n\t        if (styles[el]) {\n\t          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n\t        }\n\t\n\t        // Add custom styles.\n\t        if (this.props.styles[propName]) {\n\t          output = _extends({}, output, this.props.styles[propName]);\n\t        }\n\t\n\t        // Add element inline styles.\n\t        if (inline) {\n\t          output = _extends({}, output, inline);\n\t        }\n\t\n\t        return output;\n\t      }\n\t    }, {\n\t      key: 'getStyle',\n\t      value: function getStyle(style, index) {\n\t        var width = this.props.width;\n\t\n\t        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n\t        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n\t      }\n\t    }, {\n\t      key: 'listenForClose',\n\t      value: function listenForClose(e) {\n\t        e = e || window.event;\n\t\n\t        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'shouldDisableOverlayClick',\n\t      value: function shouldDisableOverlayClick() {\n\t        if (typeof this.props.disableOverlayClick === 'function') {\n\t          return this.props.disableOverlayClick();\n\t        } else {\n\t          return this.props.disableOverlayClick;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillMount',\n\t      value: function componentWillMount() {\n\t        if (!styles) {\n\t          throw new Error('No styles supplied');\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentDidMount',\n\t      value: function componentDidMount() {\n\t        // Bind ESC key handler (unless disabled or custom function supplied).\n\t        if (this.props.customOnKeyDown) {\n\t          window.onkeydown = this.props.customOnKeyDown;\n\t        } else if (!this.props.disableCloseOnEsc) {\n\t          window.onkeydown = this.listenForClose.bind(this);\n\t        }\n\t\n\t        // Allow initial open state to be set by props.\n\t        if (this.props.isOpen) {\n\t          this.toggleMenu({ isOpen: true, noStateChange: true });\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        window.onkeydown = null;\n\t\n\t        this.applyWrapperStyles(false);\n\t      }\n\t    }, {\n\t      key: 'componentDidUpdate',\n\t      value: function componentDidUpdate() {\n\t        var _this2 = this;\n\t\n\t        if (styles.svg) {\n\t          (function () {\n\t            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\t            var path = styles.svg.lib(morphShape).select('path');\n\t\n\t            if (_this2.state.isOpen) {\n\t              // Animate SVG path.\n\t              styles.svg.animate(path);\n\t            } else {\n\t              // Reset path (timeout ensures animation happens off screen).\n\t              setTimeout(function () {\n\t                path.attr('d', styles.svg.pathInitial);\n\t              }, 300);\n\t            }\n\t          })();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillReceiveProps',\n\t      value: function componentWillReceiveProps(nextProps) {\n\t        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'render',\n\t      value: function render() {\n\t        var _this3 = this;\n\t\n\t        return _react2['default'].createElement(\n\t          'div',\n\t          null,\n\t          !this.props.noOverlay && _react2['default'].createElement('div', {\n\t            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n\t            onClick: function () {\n\t              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n\t            },\n\t            style: this.getStyles('overlay')\n\t          }),\n\t          _react2['default'].createElement(\n\t            'div',\n\t            {\n\t              id: this.props.id,\n\t              className: ('bm-menu-wrap ' + this.props.className).trim(),\n\t              style: this.getStyles('menuWrap')\n\t            },\n\t            styles.svg && _react2['default'].createElement(\n\t              'div',\n\t              {\n\t                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n\t                style: this.getStyles('morphShape')\n\t              },\n\t              _react2['default'].createElement(\n\t                'svg',\n\t                {\n\t                  width: '100%',\n\t                  height: '100%',\n\t                  viewBox: '0 0 100 800',\n\t                  preserveAspectRatio: 'none'\n\t                },\n\t                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n\t              )\n\t            ),\n\t            _react2['default'].createElement(\n\t              'div',\n\t              {\n\t                className: ('bm-menu ' + this.props.menuClassName).trim(),\n\t                style: this.getStyles('menu')\n\t              },\n\t              _react2['default'].createElement(\n\t                'nav',\n\t                {\n\t                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n\t                  style: this.getStyles('itemList')\n\t                },\n\t                _react2['default'].Children.map(this.props.children, function (item, index) {\n\t                  if (item) {\n\t                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n\t                      return !!className;\n\t                    }).join(' ');\n\t                    var extraProps = {\n\t                      key: index,\n\t                      className: classList,\n\t                      style: _this3.getStyles('item', index, item.props.style)\n\t                    };\n\t                    return _react2['default'].cloneElement(item, extraProps);\n\t                  }\n\t                })\n\t              )\n\t            ),\n\t            this.props.customCrossIcon !== false && _react2['default'].createElement(\n\t              'div',\n\t              { style: this.getStyles('closeButton') },\n\t              _react2['default'].createElement(_CrossIcon2['default'], {\n\t                onClick: function () {\n\t                  return _this3.toggleMenu();\n\t                },\n\t                styles: this.props.styles,\n\t                customIcon: this.props.customCrossIcon,\n\t                className: this.props.crossButtonClassName,\n\t                crossClassName: this.props.crossClassName\n\t              })\n\t            )\n\t          ),\n\t          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n\t            'div',\n\t            { style: this.getStyles('burgerIcon') },\n\t            _react2['default'].createElement(_BurgerIcon2['default'], {\n\t              onClick: function () {\n\t                return _this3.toggleMenu();\n\t              },\n\t              styles: this.props.styles,\n\t              customIcon: this.props.customBurgerIcon,\n\t              className: this.props.burgerButtonClassName,\n\t              barClassName: this.props.burgerBarClassName\n\t            })\n\t          )\n\t        );\n\t      }\n\t    }]);\n\t\n\t    return Menu;\n\t  })(_react.Component);\n\t\n\t  Menu.propTypes = {\n\t    bodyClassName: _propTypes2['default'].string,\n\t    burgerBarClassName: _propTypes2['default'].string,\n\t    burgerButtonClassName: _propTypes2['default'].string,\n\t    crossButtonClassName: _propTypes2['default'].string,\n\t    crossClassName: _propTypes2['default'].string,\n\t    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    customOnKeyDown: _propTypes2['default'].func,\n\t    disableCloseOnEsc: _propTypes2['default'].bool,\n\t    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n\t    id: _propTypes2['default'].string,\n\t    isOpen: _propTypes2['default'].bool,\n\t    itemClassName: _propTypes2['default'].string,\n\t    itemListClassName: _propTypes2['default'].string,\n\t    menuClassName: _propTypes2['default'].string,\n\t    morphShapeClassName: _propTypes2['default'].string,\n\t    noOverlay: _propTypes2['default'].bool,\n\t    onStateChange: _propTypes2['default'].func,\n\t    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    overlayClassName: _propTypes2['default'].string,\n\t    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    right: _propTypes2['default'].bool,\n\t    styles: _propTypes2['default'].object,\n\t    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n\t  };\n\t\n\t  Menu.defaultProps = {\n\t    bodyClassName: '',\n\t    burgerBarClassName: '',\n\t    burgerButtonClassName: '',\n\t    className: '',\n\t    crossButtonClassName: '',\n\t    crossClassName: '',\n\t    disableCloseOnEsc: false,\n\t    id: '',\n\t    itemClassName: '',\n\t    itemListClassName: '',\n\t    menuClassName: '',\n\t    morphShapeClassName: '',\n\t    noOverlay: false,\n\t    onStateChange: function onStateChange() {},\n\t    outerContainerId: '',\n\t    overlayClassName: '',\n\t    pageWrapId: '',\n\t    styles: {},\n\t    width: 300\n\t  };\n\t\n\t  return Menu;\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 632:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(244);\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n\t    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n\t    animate: function animate(path) {\n\t      var pos = 0;\n\t      var steps = this.pathOpen.split(';');\n\t      var stepsTotal = steps.length;\n\t      var mina = window.mina;\n\t\n\t      var nextStep = function nextStep() {\n\t        if (pos > stepsTotal - 1) return;\n\t\n\t        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n\t          nextStep();\n\t        });\n\t\n\t        pos++;\n\t      };\n\t\n\t      nextStep();\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: '100%',\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      position: 'fixed',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  closeButton: function closeButton(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(244);\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n\t    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n\t    animate: function animate(path) {\n\t      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: 120,\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : '',\n\t      MsTransform: right ? 'rotateY(180deg)' : '',\n\t      OTransform: right ? 'rotateY(180deg)' : '',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : '',\n\t      transform: right ? 'rotateY(180deg)' : ''\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.3s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      width: 180,\n\t      whiteSpace: 'nowrap',\n\t      boxSizing: 'border-box',\n\t      overflow: 'visible'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList(isOpen, width, right) {\n\t    if (right) {\n\t      return {\n\t        position: 'relative',\n\t        left: '-110px',\n\t        width: '170%',\n\t        overflow: 'auto'\n\t      };\n\t    }\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 634:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transition: 'all 0.5s ease-in-out'\n\t    };\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      perspectiveOrigin: '0% 50%',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 635:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 636:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transformOrigin: right ? '100% 50%' : '0% 50%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      visibility: isOpen ? 'visible' : 'hidden',\n\t      MozTransform: 'translate3d(0, 0, 0)',\n\t      MsTransform: 'translate3d(0, 0, 0)',\n\t      OTransform: 'translate3d(0, 0, 0)',\n\t      WebkitTransform: 'translate3d(0, 0, 0)',\n\t      transform: 'translate3d(0, 0, 0)',\n\t      zIndex: 1000\n\t    };\n\t  },\n\t\n\t  overlay: function overlay(isOpen, width, right) {\n\t    return {\n\t      zIndex: 1400,\n\t      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transition: 'all 0.5s',\n\t      visibility: isOpen ? 'visible' : 'hidden'\n\t    };\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s',\n\t      zIndex: 1200,\n\t      position: 'relative'\n\t    };\n\t  },\n\t\n\t  burgerIcon: function burgerIcon(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transition: 'all 0.1s',\n\t      position: 'relative',\n\t      zIndex: 1300\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 638:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transformOrigin: '100%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer() {\n\t    return {\n\t      perspective: '1500px'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 639:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(19);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 244:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function () {\n\t  var Snap = undefined;\n\t  try {\n\t    Snap = __webpack_require__(673);\n\t  } finally {\n\t    return Snap;\n\t  }\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _shallowequal = __webpack_require__(249);\n\t\n\tvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\t\n\tvar _raf = __webpack_require__(627);\n\t\n\tvar _raf2 = _interopRequireDefault(_raf);\n\t\n\tvar _shouldUpdate2 = __webpack_require__(643);\n\t\n\tvar _shouldUpdate3 = _interopRequireDefault(_shouldUpdate2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line import/no-unresolved\n\t\n\t\n\tvar noop = function noop() {};\n\t\n\tvar Headroom = function (_Component) {\n\t  _inherits(Headroom, _Component);\n\t\n\t  function Headroom(props) {\n\t    _classCallCheck(this, Headroom);\n\t\n\t    // Class variables.\n\t    var _this = _possibleConstructorReturn(this, (Headroom.__proto__ || Object.getPrototypeOf(Headroom)).call(this, props));\n\t\n\t    _this.setRef = function (ref) {\n\t      return _this.inner = ref;\n\t    };\n\t\n\t    _this.setHeightOffset = function () {\n\t      _this.setState({\n\t        height: _this.inner.offsetHeight\n\t      });\n\t      _this.resizeTicking = false;\n\t    };\n\t\n\t    _this.getScrollY = function () {\n\t      if (_this.props.parent().pageYOffset !== void 0) {\n\t        return _this.props.parent().pageYOffset;\n\t      } else if (_this.props.parent().scrollTop !== void 0) {\n\t        return _this.props.parent().scrollTop;\n\t      } else {\n\t        return (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t      }\n\t    };\n\t\n\t    _this.getViewportHeight = function () {\n\t      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\t    };\n\t\n\t    _this.getDocumentHeight = function () {\n\t      var body = document.body;\n\t      var documentElement = document.documentElement;\n\t\n\t      return Math.max(body.scrollHeight, documentElement.scrollHeight, body.offsetHeight, documentElement.offsetHeight, body.clientHeight, documentElement.clientHeight);\n\t    };\n\t\n\t    _this.getElementPhysicalHeight = function (elm) {\n\t      return Math.max(elm.offsetHeight, elm.clientHeight);\n\t    };\n\t\n\t    _this.getElementHeight = function (elm) {\n\t      return Math.max(elm.scrollHeight, elm.offsetHeight, elm.clientHeight);\n\t    };\n\t\n\t    _this.getScrollerPhysicalHeight = function () {\n\t      var parent = _this.props.parent();\n\t\n\t      return parent === window || parent === document.body ? _this.getViewportHeight() : _this.getElementPhysicalHeight(parent);\n\t    };\n\t\n\t    _this.getScrollerHeight = function () {\n\t      var parent = _this.props.parent();\n\t\n\t      return parent === window || parent === document.body ? _this.getDocumentHeight() : _this.getElementHeight(parent);\n\t    };\n\t\n\t    _this.isOutOfBound = function (currentScrollY) {\n\t      var pastTop = currentScrollY < 0;\n\t\n\t      var scrollerPhysicalHeight = _this.getScrollerPhysicalHeight();\n\t      var scrollerHeight = _this.getScrollerHeight();\n\t\n\t      var pastBottom = currentScrollY + scrollerPhysicalHeight > scrollerHeight;\n\t\n\t      return pastTop || pastBottom;\n\t    };\n\t\n\t    _this.handleScroll = function () {\n\t      if (!_this.scrollTicking) {\n\t        _this.scrollTicking = true;\n\t        (0, _raf2.default)(_this.update);\n\t      }\n\t    };\n\t\n\t    _this.handleResize = function () {\n\t      if (!_this.resizeTicking) {\n\t        _this.resizeTicking = true;\n\t        (0, _raf2.default)(_this.setHeightOffset);\n\t      }\n\t    };\n\t\n\t    _this.unpin = function () {\n\t      _this.props.onUnpin();\n\t\n\t      _this.setState({\n\t        translateY: '-100%',\n\t        className: 'headroom headroom--unpinned'\n\t      }, function () {\n\t        setTimeout(function () {\n\t          _this.setState({ state: 'unpinned' });\n\t        }, 0);\n\t      });\n\t    };\n\t\n\t    _this.pin = function () {\n\t      _this.props.onPin();\n\t\n\t      _this.setState({\n\t        translateY: 0,\n\t        className: 'headroom headroom--pinned',\n\t        state: 'pinned'\n\t      });\n\t    };\n\t\n\t    _this.unfix = function () {\n\t      _this.props.onUnfix();\n\t\n\t      _this.setState({\n\t        translateY: 0,\n\t        className: 'headroom headroom--unfixed',\n\t        state: 'unfixed'\n\t      });\n\t    };\n\t\n\t    _this.update = function () {\n\t      _this.currentScrollY = _this.getScrollY();\n\t\n\t      if (!_this.isOutOfBound(_this.currentScrollY)) {\n\t        var _shouldUpdate = (0, _shouldUpdate3.default)(_this.lastKnownScrollY, _this.currentScrollY, _this.props, _this.state),\n\t            action = _shouldUpdate.action;\n\t\n\t        if (action === 'pin') {\n\t          _this.pin();\n\t        } else if (action === 'unpin') {\n\t          _this.unpin();\n\t        } else if (action === 'unfix') {\n\t          _this.unfix();\n\t        }\n\t      }\n\t\n\t      _this.lastKnownScrollY = _this.currentScrollY;\n\t      _this.scrollTicking = false;\n\t    };\n\t\n\t    _this.currentScrollY = 0;\n\t    _this.lastKnownScrollY = 0;\n\t    _this.scrollTicking = false;\n\t    _this.resizeTicking = false;\n\t    _this.state = {\n\t      state: 'unfixed',\n\t      translateY: 0,\n\t      className: 'headroom headroom--unfixed'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Headroom, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.setHeightOffset();\n\t      if (!this.props.disable) {\n\t        this.props.parent().addEventListener('scroll', this.handleScroll);\n\t\n\t        if (this.props.calcHeightOnResize) {\n\t          this.props.parent().addEventListener('resize', this.handleResize);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      if (nextProps.disable && !this.props.disable) {\n\t        this.unfix();\n\t        this.props.parent().removeEventListener('scroll', this.handleScroll);\n\t        this.props.parent().removeEventListener('resize', this.handleResize);\n\t      } else if (!nextProps.disable && this.props.disable) {\n\t        this.props.parent().addEventListener('scroll', this.handleScroll);\n\t\n\t        if (this.props.calcHeightOnResize) {\n\t          this.props.parent().addEventListener('resize', this.handleResize);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return !(0, _shallowequal2.default)(this.props, nextProps) || !(0, _shallowequal2.default)(this.state, nextState);\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate(prevProps) {\n\t      // If children have changed, remeasure height.\n\t      if (prevProps.children !== this.props.children) {\n\t        this.setHeightOffset();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.props.parent().removeEventListener('scroll', this.handleScroll);\n\t      window.removeEventListener('scroll', this.handleScroll);\n\t      this.props.parent().removeEventListener('resize', this.handleResize);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          userClassName = _props.className,\n\t          divProps = _objectWithoutProperties(_props, ['className']);\n\t\n\t      delete divProps.onUnpin;\n\t      delete divProps.onPin;\n\t      delete divProps.onUnfix;\n\t      delete divProps.disableInlineStyles;\n\t      delete divProps.disable;\n\t      delete divProps.parent;\n\t      delete divProps.children;\n\t      delete divProps.upTolerance;\n\t      delete divProps.downTolerance;\n\t      delete divProps.pinStart;\n\t      delete divProps.calcHeightOnResize;\n\t\n\t      var style = divProps.style,\n\t          wrapperStyle = divProps.wrapperStyle,\n\t          rest = _objectWithoutProperties(divProps, ['style', 'wrapperStyle']);\n\t\n\t      var innerStyle = {\n\t        position: this.props.disable || this.state.state === 'unfixed' ? 'relative' : 'fixed',\n\t        top: 0,\n\t        left: 0,\n\t        right: 0,\n\t        zIndex: 1,\n\t        WebkitTransform: 'translateY(' + this.state.translateY + ')',\n\t        MsTransform: 'translateY(' + this.state.translateY + ')',\n\t        transform: 'translateY(' + this.state.translateY + ')'\n\t      };\n\t\n\t      var className = this.state.className;\n\t\n\t      // Don't add css transitions until after we've done the initial\n\t      // negative transform when transitioning from 'unfixed' to 'unpinned'.\n\t      // If we don't do this, the header will flash into view temporarily\n\t      // while it transitions from 0 — -100%.\n\t      if (this.state.state !== 'unfixed') {\n\t        innerStyle = _extends({}, innerStyle, {\n\t          WebkitTransition: 'all .2s ease-in-out',\n\t          MozTransition: 'all .2s ease-in-out',\n\t          OTransition: 'all .2s ease-in-out',\n\t          transition: 'all .2s ease-in-out'\n\t        });\n\t        className += ' headroom--scrolled';\n\t      }\n\t\n\t      if (!this.props.disableInlineStyles) {\n\t        innerStyle = _extends({}, innerStyle, style);\n\t      } else {\n\t        innerStyle = style;\n\t      }\n\t\n\t      var wrapperStyles = _extends({}, wrapperStyle, {\n\t        height: this.state.height ? this.state.height : null\n\t      });\n\t\n\t      var wrapperClassName = userClassName ? userClassName + ' headroom-wrapper' : 'headroom-wrapper';\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { style: wrapperStyles, className: wrapperClassName },\n\t        _react2.default.createElement(\n\t          'div',\n\t          _extends({\n\t            ref: this.setRef\n\t          }, rest, {\n\t            style: innerStyle,\n\t            className: className\n\t          }),\n\t          this.props.children\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Headroom;\n\t}(_react.Component);\n\t\n\tHeadroom.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  parent: _propTypes2.default.func,\n\t  children: _propTypes2.default.any.isRequired,\n\t  disableInlineStyles: _propTypes2.default.bool,\n\t  disable: _propTypes2.default.bool,\n\t  upTolerance: _propTypes2.default.number,\n\t  downTolerance: _propTypes2.default.number,\n\t  onPin: _propTypes2.default.func,\n\t  onUnpin: _propTypes2.default.func,\n\t  onUnfix: _propTypes2.default.func,\n\t  wrapperStyle: _propTypes2.default.object,\n\t  pinStart: _propTypes2.default.number,\n\t  style: _propTypes2.default.object,\n\t  calcHeightOnResize: _propTypes2.default.bool\n\t};\n\tHeadroom.defaultProps = {\n\t  parent: function parent() {\n\t    return window;\n\t  },\n\t  disableInlineStyles: false,\n\t  disable: false,\n\t  upTolerance: 5,\n\t  downTolerance: 0,\n\t  onPin: noop,\n\t  onUnpin: noop,\n\t  onUnfix: noop,\n\t  wrapperStyle: {},\n\t  pinStart: 0,\n\t  calcHeightOnResize: true\n\t};\n\texports.default = Headroom;\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function () {\n\t  var lastKnownScrollY = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;\n\t  var currentScrollY = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n\t  var props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n\t  var state = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n\t\n\t  var scrollDirection = currentScrollY >= lastKnownScrollY ? 'down' : 'up';\n\t  var distanceScrolled = Math.abs(currentScrollY - lastKnownScrollY);\n\t\n\t  // We're disabled\n\t  if (props.disable) {\n\t    return {\n\t      action: 'none',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t    // We're at the top and not fixed yet.\n\t  } else if (currentScrollY <= props.pinStart && state.state !== 'unfixed') {\n\t    return {\n\t      action: 'unfix',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t    // We're unfixed and headed down. Carry on.\n\t  } else if (currentScrollY <= state.height && scrollDirection === 'down' && state.state === 'unfixed') {\n\t    return {\n\t      action: 'none',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t    // We're past the header and scrolling down.\n\t    // We transition to \"unpinned\" if necessary.\n\t  } else if (scrollDirection === 'down' && ['pinned', 'unfixed'].indexOf(state.state) >= 0 && currentScrollY > state.height + props.pinStart && distanceScrolled > props.downTolerance) {\n\t    return {\n\t      action: 'unpin',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t    // We're scrolling up, we transition to \"pinned\"\n\t  } else if (scrollDirection === 'up' && distanceScrolled > props.upTolerance && ['pinned', 'unfixed'].indexOf(state.state) < 0) {\n\t    return {\n\t      action: 'pin',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t    // We're scrolling up, and inside the header.\n\t    // We transition to pin regardless of upTolerance\n\t  } else if (scrollDirection === 'up' && currentScrollY <= state.height && ['pinned', 'unfixed'].indexOf(state.state) < 0) {\n\t    return {\n\t      action: 'pin',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t  } else {\n\t    return {\n\t      action: 'none',\n\t      scrollDirection: scrollDirection,\n\t      distanceScrolled: distanceScrolled\n\t    };\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 673:\n/***/ (function(module, exports, __webpack_require__) {\n\n\twindow.eve = __webpack_require__(423)\n\t\n\t// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tvar mina = (function (eve) {\n\t    var animations = {},\n\t    requestAnimFrame = window.requestAnimationFrame       ||\n\t                       window.webkitRequestAnimationFrame ||\n\t                       window.mozRequestAnimationFrame    ||\n\t                       window.oRequestAnimationFrame      ||\n\t                       window.msRequestAnimationFrame     ||\n\t                       function (callback) {\n\t                           setTimeout(callback, 16, new Date().getTime());\n\t                           return true;\n\t                       },\n\t    requestID,\n\t    isArray = Array.isArray || function (a) {\n\t        return a instanceof Array ||\n\t            Object.prototype.toString.call(a) == \"[object Array]\";\n\t    },\n\t    idgen = 0,\n\t    idprefix = \"M\" + (+new Date).toString(36),\n\t    ID = function () {\n\t        return idprefix + (idgen++).toString(36);\n\t    },\n\t    diff = function (a, b, A, B) {\n\t        if (isArray(a)) {\n\t            res = [];\n\t            for (var i = 0, ii = a.length; i < ii; i++) {\n\t                res[i] = diff(a[i], b, A[i], B);\n\t            }\n\t            return res;\n\t        }\n\t        var dif = (A - a) / (B - b);\n\t        return function (bb) {\n\t            return a + dif * (bb - b);\n\t        };\n\t    },\n\t    timer = Date.now || function () {\n\t        return +new Date;\n\t    },\n\t    sta = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.s;\n\t        }\n\t        var ds = a.s - val;\n\t        a.b += a.dur * ds;\n\t        a.B += a.dur * ds;\n\t        a.s = val;\n\t    },\n\t    speed = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.spd;\n\t        }\n\t        a.spd = val;\n\t    },\n\t    duration = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.dur;\n\t        }\n\t        a.s = a.s * val / a.dur;\n\t        a.dur = val;\n\t    },\n\t    stopit = function () {\n\t        var a = this;\n\t        delete animations[a.id];\n\t        a.update();\n\t        eve(\"mina.stop.\" + a.id, a);\n\t    },\n\t    pause = function () {\n\t        var a = this;\n\t        if (a.pdif) {\n\t            return;\n\t        }\n\t        delete animations[a.id];\n\t        a.update();\n\t        a.pdif = a.get() - a.b;\n\t    },\n\t    resume = function () {\n\t        var a = this;\n\t        if (!a.pdif) {\n\t            return;\n\t        }\n\t        a.b = a.get() - a.pdif;\n\t        delete a.pdif;\n\t        animations[a.id] = a;\n\t        frame();\n\t    },\n\t    update = function () {\n\t        var a = this,\n\t            res;\n\t        if (isArray(a.start)) {\n\t            res = [];\n\t            for (var j = 0, jj = a.start.length; j < jj; j++) {\n\t                res[j] = +a.start[j] +\n\t                    (a.end[j] - a.start[j]) * a.easing(a.s);\n\t            }\n\t        } else {\n\t            res = +a.start + (a.end - a.start) * a.easing(a.s);\n\t        }\n\t        a.set(res);\n\t    },\n\t    frame = function (timeStamp) {\n\t        // Manual invokation?\n\t        if (!timeStamp) {\n\t            // Frame loop stopped?\n\t            if (!requestID) {\n\t                // Start frame loop...\n\t                requestID = requestAnimFrame(frame);\n\t            }\n\t            return;\n\t        }\n\t        var len = 0;\n\t        for (var i in animations) if (animations.hasOwnProperty(i)) {\n\t            var a = animations[i],\n\t                b = a.get(),\n\t                res;\n\t            len++;\n\t            a.s = (b - a.b) / (a.dur / a.spd);\n\t            if (a.s >= 1) {\n\t                delete animations[i];\n\t                a.s = 1;\n\t                len--;\n\t                (function (a) {\n\t                    setTimeout(function () {\n\t                        eve(\"mina.finish.\" + a.id, a);\n\t                    });\n\t                }(a));\n\t            }\n\t            a.update();\n\t        }\n\t        requestID = len ? requestAnimFrame(frame) : false;\n\t    },\n\t    /*\\\n\t     * mina\n\t     [ method ]\n\t     **\n\t     * Generic animation of numbers\n\t     **\n\t     - a (number) start _slave_ number\n\t     - A (number) end _slave_ number\n\t     - b (number) start _master_ number (start time in general case)\n\t     - B (number) end _master_ number (end time in general case)\n\t     - get (function) getter of _master_ number (see @mina.time)\n\t     - set (function) setter of _slave_ number\n\t     - easing (function) #optional easing function, default is @mina.linear\n\t     = (object) animation descriptor\n\t     o {\n\t     o         id (string) animation id,\n\t     o         start (number) start _slave_ number,\n\t     o         end (number) end _slave_ number,\n\t     o         b (number) start _master_ number,\n\t     o         s (number) animation status (0..1),\n\t     o         dur (number) animation duration,\n\t     o         spd (number) animation speed,\n\t     o         get (function) getter of _master_ number (see @mina.time),\n\t     o         set (function) setter of _slave_ number,\n\t     o         easing (function) easing function, default is @mina.linear,\n\t     o         status (function) status getter/setter,\n\t     o         speed (function) speed getter/setter,\n\t     o         duration (function) duration getter/setter,\n\t     o         stop (function) animation stopper\n\t     o         pause (function) pauses the animation\n\t     o         resume (function) resumes the animation\n\t     o         update (function) calles setter with the right value of the animation\n\t     o }\n\t    \\*/\n\t    mina = function (a, A, b, B, get, set, easing) {\n\t        var anim = {\n\t            id: ID(),\n\t            start: a,\n\t            end: A,\n\t            b: b,\n\t            s: 0,\n\t            dur: B - b,\n\t            spd: 1,\n\t            get: get,\n\t            set: set,\n\t            easing: easing || mina.linear,\n\t            status: sta,\n\t            speed: speed,\n\t            duration: duration,\n\t            stop: stopit,\n\t            pause: pause,\n\t            resume: resume,\n\t            update: update\n\t        };\n\t        animations[anim.id] = anim;\n\t        var len = 0, i;\n\t        for (i in animations) if (animations.hasOwnProperty(i)) {\n\t            len++;\n\t            if (len == 2) {\n\t                break;\n\t            }\n\t        }\n\t        len == 1 && frame();\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * mina.time\n\t     [ method ]\n\t     **\n\t     * Returns the current time. Equivalent to:\n\t     | function () {\n\t     |     return (new Date).getTime();\n\t     | }\n\t    \\*/\n\t    mina.time = timer;\n\t    /*\\\n\t     * mina.getById\n\t     [ method ]\n\t     **\n\t     * Returns an animation by its id\n\t     - id (string) animation's id\n\t     = (object) See @mina\n\t    \\*/\n\t    mina.getById = function (id) {\n\t        return animations[id] || null;\n\t    };\n\t\n\t    /*\\\n\t     * mina.linear\n\t     [ method ]\n\t     **\n\t     * Default linear easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.linear = function (n) {\n\t        return n;\n\t    };\n\t    /*\\\n\t     * mina.easeout\n\t     [ method ]\n\t     **\n\t     * Easeout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeout = function (n) {\n\t        return Math.pow(n, 1.7);\n\t    };\n\t    /*\\\n\t     * mina.easein\n\t     [ method ]\n\t     **\n\t     * Easein easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easein = function (n) {\n\t        return Math.pow(n, .48);\n\t    };\n\t    /*\\\n\t     * mina.easeinout\n\t     [ method ]\n\t     **\n\t     * Easeinout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeinout = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        var q = .48 - n / 1.04,\n\t            Q = Math.sqrt(.1734 + q * q),\n\t            x = Q - q,\n\t            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t            y = -Q - q,\n\t            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t            t = X + Y + .5;\n\t        return (1 - t) * 3 * t * t + t * t * t;\n\t    };\n\t    /*\\\n\t     * mina.backin\n\t     [ method ]\n\t     **\n\t     * Backin easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backin = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n - s);\n\t    };\n\t    /*\\\n\t     * mina.backout\n\t     [ method ]\n\t     **\n\t     * Backout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backout = function (n) {\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        n = n - 1;\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n + s) + 1;\n\t    };\n\t    /*\\\n\t     * mina.elastic\n\t     [ method ]\n\t     **\n\t     * Elastic easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.elastic = function (n) {\n\t        if (n == !!n) {\n\t            return n;\n\t        }\n\t        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n\t            (2 * Math.PI) / .3) + 1;\n\t    };\n\t    /*\\\n\t     * mina.bounce\n\t     [ method ]\n\t     **\n\t     * Bounce easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.bounce = function (n) {\n\t        var s = 7.5625,\n\t            p = 2.75,\n\t            l;\n\t        if (n < 1 / p) {\n\t            l = s * n * n;\n\t        } else {\n\t            if (n < 2 / p) {\n\t                n -= 1.5 / p;\n\t                l = s * n * n + .75;\n\t            } else {\n\t                if (n < 2.5 / p) {\n\t                    n -= 2.25 / p;\n\t                    l = s * n * n + .9375;\n\t                } else {\n\t                    n -= 2.625 / p;\n\t                    l = s * n * n + .984375;\n\t                }\n\t            }\n\t        }\n\t        return l;\n\t    };\n\t    window.mina = mina;\n\t    return mina;\n\t})(typeof eve == \"undefined\" ? function () {} : eve);\n\t\n\t// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t\n\tvar Snap = (function(root) {\n\tSnap.version = \"0.5.1\";\n\t/*\\\n\t * Snap\n\t [ method ]\n\t **\n\t * Creates a drawing surface or wraps existing SVG element.\n\t **\n\t - width (number|string) width of surface\n\t - height (number|string) height of surface\n\t * or\n\t - DOM (SVGElement) element to be wrapped into Snap structure\n\t * or\n\t - array (array) array of elements (will return set of elements)\n\t * or\n\t - query (string) CSS query selector\n\t = (object) @Element\n\t\\*/\n\tfunction Snap(w, h) {\n\t    if (w) {\n\t        if (w.nodeType) {\n\t            return wrap(w);\n\t        }\n\t        if (is(w, \"array\") && Snap.set) {\n\t            return Snap.set.apply(Snap, w);\n\t        }\n\t        if (w instanceof Element) {\n\t            return w;\n\t        }\n\t        if (h == null) {\n\t            try {\n\t                w = glob.doc.querySelector(String(w));\n\t                return wrap(w);\n\t            } catch (e) {\n\t                return null;\n\t            }\n\t        }\n\t    }\n\t    w = w == null ? \"100%\" : w;\n\t    h = h == null ? \"100%\" : h;\n\t    return new Paper(w, h);\n\t}\n\tSnap.toString = function () {\n\t    return \"Snap v\" + this.version;\n\t};\n\tSnap._ = {};\n\tvar glob = {\n\t    win: root.window,\n\t    doc: root.window.document\n\t};\n\tSnap._.glob = glob;\n\tvar has = \"hasOwnProperty\",\n\t    Str = String,\n\t    toFloat = parseFloat,\n\t    toInt = parseInt,\n\t    math = Math,\n\t    mmax = math.max,\n\t    mmin = math.min,\n\t    abs = math.abs,\n\t    pow = math.pow,\n\t    PI = math.PI,\n\t    round = math.round,\n\t    E = \"\",\n\t    S = \" \",\n\t    objectToString = Object.prototype.toString,\n\t    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n\t    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n\t    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t    separator = Snap._.separator = /[,\\s]+/,\n\t    whitespace = /[\\s]/g,\n\t    commaSpaces = /[\\s]*,[\\s]*/,\n\t    hsrg = {hs: 1, rg: 1},\n\t    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n\t    idgen = 0,\n\t    idprefix = \"S\" + (+new Date).toString(36),\n\t    ID = function (el) {\n\t        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n\t    },\n\t    xlink = \"http://www.w3.org/1999/xlink\",\n\t    xmlns = \"http://www.w3.org/2000/svg\",\n\t    hub = {},\n\t    /*\\\n\t     * Snap.url\n\t     [ method ]\n\t     **\n\t     * Wraps path into `\"url('<path>')\"`.\n\t     - value (string) path\n\t     = (string) wrapped path\n\t    \\*/\n\t    URL = Snap.url = function (url) {\n\t        return \"url('#\" + url + \"')\";\n\t    };\n\t\n\tfunction $(el, attr) {\n\t    if (attr) {\n\t        if (el == \"#text\") {\n\t            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (el == \"#comment\") {\n\t            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (typeof el == \"string\") {\n\t            el = $(el);\n\t        }\n\t        if (typeof attr == \"string\") {\n\t            if (el.nodeType == 1) {\n\t                if (attr.substring(0, 6) == \"xlink:\") {\n\t                    return el.getAttributeNS(xlink, attr.substring(6));\n\t                }\n\t                if (attr.substring(0, 4) == \"xml:\") {\n\t                    return el.getAttributeNS(xmlns, attr.substring(4));\n\t                }\n\t                return el.getAttribute(attr);\n\t            } else if (attr == \"text\") {\n\t                return el.nodeValue;\n\t            } else {\n\t                return null;\n\t            }\n\t        }\n\t        if (el.nodeType == 1) {\n\t            for (var key in attr) if (attr[has](key)) {\n\t                var val = Str(attr[key]);\n\t                if (val) {\n\t                    if (key.substring(0, 6) == \"xlink:\") {\n\t                        el.setAttributeNS(xlink, key.substring(6), val);\n\t                    } else if (key.substring(0, 4) == \"xml:\") {\n\t                        el.setAttributeNS(xmlns, key.substring(4), val);\n\t                    } else {\n\t                        el.setAttribute(key, val);\n\t                    }\n\t                } else {\n\t                    el.removeAttribute(key);\n\t                }\n\t            }\n\t        } else if (\"text\" in attr) {\n\t            el.nodeValue = attr.text;\n\t        }\n\t    } else {\n\t        el = glob.doc.createElementNS(xmlns, el);\n\t    }\n\t    return el;\n\t}\n\tSnap._.$ = $;\n\tSnap._.id = ID;\n\tfunction getAttrs(el) {\n\t    var attrs = el.attributes,\n\t        name,\n\t        out = {};\n\t    for (var i = 0; i < attrs.length; i++) {\n\t        if (attrs[i].namespaceURI == xlink) {\n\t            name = \"xlink:\";\n\t        } else {\n\t            name = \"\";\n\t        }\n\t        name += attrs[i].name;\n\t        out[name] = attrs[i].textContent;\n\t    }\n\t    return out;\n\t}\n\tfunction is(o, type) {\n\t    type = Str.prototype.toLowerCase.call(type);\n\t    if (type == \"finite\") {\n\t        return isFinite(o);\n\t    }\n\t    if (type == \"array\" &&\n\t        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n\t        return true;\n\t    }\n\t    return  type == \"null\" && o === null ||\n\t            type == typeof o && o !== null ||\n\t            type == \"object\" && o === Object(o) ||\n\t            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t}\n\t/*\\\n\t * Snap.format\n\t [ method ]\n\t **\n\t * Replaces construction of type `{<name>}` to the corresponding argument\n\t **\n\t - token (string) string to format\n\t - json (object) object which properties are used as a replacement\n\t = (string) formatted string\n\t > Usage\n\t | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t |     x: 10,\n\t |     y: 20,\n\t |     dim: {\n\t |         width: 40,\n\t |         height: 50,\n\t |         \"negative width\": -40\n\t |     }\n\t | }));\n\t\\*/\n\tSnap.format = (function () {\n\t    var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t        replacer = function (all, key, obj) {\n\t            var res = obj;\n\t            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                name = name || quotedName;\n\t                if (res) {\n\t                    if (name in res) {\n\t                        res = res[name];\n\t                    }\n\t                    typeof res == \"function\" && isFunc && (res = res());\n\t                }\n\t            });\n\t            res = (res == null || res == obj ? all : res) + \"\";\n\t            return res;\n\t        };\n\t    return function (str, obj) {\n\t        return Str(str).replace(tokenRegex, function (all, key) {\n\t            return replacer(all, key, obj);\n\t        });\n\t    };\n\t})();\n\tfunction clone(obj) {\n\t    if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t        return obj;\n\t    }\n\t    var res = new obj.constructor;\n\t    for (var key in obj) if (obj[has](key)) {\n\t        res[key] = clone(obj[key]);\n\t    }\n\t    return res;\n\t}\n\tSnap._.clone = clone;\n\tfunction repush(array, item) {\n\t    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t        return array.push(array.splice(i, 1)[0]);\n\t    }\n\t}\n\tfunction cacher(f, scope, postprocessor) {\n\t    function newf() {\n\t        var arg = Array.prototype.slice.call(arguments, 0),\n\t            args = arg.join(\"\\u2400\"),\n\t            cache = newf.cache = newf.cache || {},\n\t            count = newf.count = newf.count || [];\n\t        if (cache[has](args)) {\n\t            repush(count, args);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        count.length >= 1e3 && delete cache[count.shift()];\n\t        count.push(args);\n\t        cache[args] = f.apply(scope, arg);\n\t        return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t    }\n\t    return newf;\n\t}\n\tSnap._.cacher = cacher;\n\tfunction angle(x1, y1, x2, y2, x3, y3) {\n\t    if (x3 == null) {\n\t        var x = x1 - x2,\n\t            y = y1 - y2;\n\t        if (!x && !y) {\n\t            return 0;\n\t        }\n\t        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t    } else {\n\t        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n\t    }\n\t}\n\tfunction rad(deg) {\n\t    return deg % 360 * PI / 180;\n\t}\n\tfunction deg(rad) {\n\t    return rad * 180 / PI % 360;\n\t}\n\tfunction x_y() {\n\t    return this.x + S + this.y;\n\t}\n\tfunction x_y_w_h() {\n\t    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t}\n\t\n\t/*\\\n\t * Snap.rad\n\t [ method ]\n\t **\n\t * Transform angle to radians\n\t - deg (number) angle in degrees\n\t = (number) angle in radians\n\t\\*/\n\tSnap.rad = rad;\n\t/*\\\n\t * Snap.deg\n\t [ method ]\n\t **\n\t * Transform angle to degrees\n\t - rad (number) angle in radians\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.deg = deg;\n\t/*\\\n\t * Snap.sin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.sin()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) sin\n\t\\*/\n\tSnap.sin = function (angle) {\n\t    return math.sin(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.tan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.tan()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) tan\n\t\\*/\n\tSnap.tan = function (angle) {\n\t    return math.tan(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.cos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.cos()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) cos\n\t\\*/\n\tSnap.cos = function (angle) {\n\t    return math.cos(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.asin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.asin()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) asin in degrees\n\t\\*/\n\tSnap.asin = function (num) {\n\t    return Snap.deg(math.asin(num));\n\t};\n\t/*\\\n\t * Snap.acos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.acos()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) acos in degrees\n\t\\*/\n\tSnap.acos = function (num) {\n\t    return Snap.deg(math.acos(num));\n\t};\n\t/*\\\n\t * Snap.atan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan in degrees\n\t\\*/\n\tSnap.atan = function (num) {\n\t    return Snap.deg(math.atan(num));\n\t};\n\t/*\\\n\t * Snap.atan2\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan2()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan2 in degrees\n\t\\*/\n\tSnap.atan2 = function (num) {\n\t    return Snap.deg(math.atan2(num));\n\t};\n\t/*\\\n\t * Snap.angle\n\t [ method ]\n\t **\n\t * Returns an angle between two or three points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t - x3 (number) #optional x coord of third point\n\t - y3 (number) #optional y coord of third point\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.angle = angle;\n\t/*\\\n\t * Snap.len\n\t [ method ]\n\t **\n\t * Returns distance between two points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len = function (x1, y1, x2, y2) {\n\t    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n\t};\n\t/*\\\n\t * Snap.len2\n\t [ method ]\n\t **\n\t * Returns squared distance between two points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len2 = function (x1, y1, x2, y2) {\n\t    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\t};\n\t/*\\\n\t * Snap.closestPoint\n\t [ method ]\n\t **\n\t * Returns closest point to a given one on a given path.\n\t - path (Element) path element\n\t - x (number) x coord of a point\n\t - y (number) y coord of a point\n\t = (object) in format\n\t {\n\t    x (number) x coord of the point on the path\n\t    y (number) y coord of the point on the path\n\t    length (number) length of the path to the point\n\t    distance (number) distance from the given point to the path\n\t }\n\t\\*/\n\t// Copied from http://bl.ocks.org/mbostock/8027637\n\tSnap.closestPoint = function (path, x, y) {\n\t    function distance2(p) {\n\t        var dx = p.x - x,\n\t            dy = p.y - y;\n\t        return dx * dx + dy * dy;\n\t    }\n\t    var pathNode = path.node,\n\t        pathLength = pathNode.getTotalLength(),\n\t        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n\t        best,\n\t        bestLength,\n\t        bestDistance = Infinity;\n\t\n\t    // linear scan for coarse approximation\n\t    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n\t        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n\t            best = scan;\n\t            bestLength = scanLength;\n\t            bestDistance = scanDistance;\n\t        }\n\t    }\n\t\n\t    // binary search for precise estimate\n\t    precision *= .5;\n\t    while (precision > .5) {\n\t        var before,\n\t            after,\n\t            beforeLength,\n\t            afterLength,\n\t            beforeDistance,\n\t            afterDistance;\n\t        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n\t            best = before;\n\t            bestLength = beforeLength;\n\t            bestDistance = beforeDistance;\n\t        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n\t            best = after;\n\t            bestLength = afterLength;\n\t            bestDistance = afterDistance;\n\t        } else {\n\t            precision *= .5;\n\t        }\n\t    }\n\t\n\t    best = {\n\t        x: best.x,\n\t        y: best.y,\n\t        length: bestLength,\n\t        distance: Math.sqrt(bestDistance)\n\t    };\n\t    return best;\n\t}\n\t/*\\\n\t * Snap.is\n\t [ method ]\n\t **\n\t * Handy replacement for the `typeof` operator\n\t - o (…) any object or primitive\n\t - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n\t = (boolean) `true` if given value is of given type\n\t\\*/\n\tSnap.is = is;\n\t/*\\\n\t * Snap.snapTo\n\t [ method ]\n\t **\n\t * Snaps given value to given grid\n\t - values (array|number) given array of values or step of the grid\n\t - value (number) value to adjust\n\t - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n\t = (number) adjusted value\n\t\\*/\n\tSnap.snapTo = function (values, value, tolerance) {\n\t    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\t    if (is(values, \"array\")) {\n\t        var i = values.length;\n\t        while (i--) if (abs(values[i] - value) <= tolerance) {\n\t            return values[i];\n\t        }\n\t    } else {\n\t        values = +values;\n\t        var rem = value % values;\n\t        if (rem < tolerance) {\n\t            return value - rem;\n\t        }\n\t        if (rem > values - tolerance) {\n\t            return value - rem + values;\n\t        }\n\t    }\n\t    return value;\n\t};\n\t// Colour\n\t/*\\\n\t * Snap.getRGB\n\t [ method ]\n\t **\n\t * Parses color string as RGB object\n\t - color (string) color string in one of the following formats:\n\t # <ul>\n\t #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n\t #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n\t #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n\t #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n\t #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n\t #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n\t #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n\t #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t # </ul>\n\t * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) true if string can't be parsed\n\t o }\n\t\\*/\n\tSnap.getRGB = cacher(function (colour) {\n\t    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    if (colour == \"none\") {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n\t    }\n\t    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t    if (!colour) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    var res,\n\t        red,\n\t        green,\n\t        blue,\n\t        opacity,\n\t        t,\n\t        values,\n\t        rgb = colour.match(colourRegExp);\n\t    if (rgb) {\n\t        if (rgb[2]) {\n\t            blue = toInt(rgb[2].substring(5), 16);\n\t            green = toInt(rgb[2].substring(3, 5), 16);\n\t            red = toInt(rgb[2].substring(1, 3), 16);\n\t        }\n\t        if (rgb[3]) {\n\t            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t        }\n\t        if (rgb[4]) {\n\t            values = rgb[4].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t        }\n\t        if (rgb[5]) {\n\t            values = rgb[5].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsb2rgb(red, green, blue, opacity);\n\t        }\n\t        if (rgb[6]) {\n\t            values = rgb[6].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsl2rgb(red, green, blue, opacity);\n\t        }\n\t        red = mmin(math.round(red), 255);\n\t        green = mmin(math.round(green), 255);\n\t        blue = mmin(math.round(blue), 255);\n\t        opacity = mmin(mmax(opacity, 0), 1);\n\t        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n\t        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n\t        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n\t        return rgb;\n\t    }\n\t    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t}, Snap);\n\t/*\\\n\t * Snap.hsb\n\t [ method ]\n\t **\n\t * Converts HSB values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - b (number) value or brightness\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsb = cacher(function (h, s, b) {\n\t    return Snap.hsb2rgb(h, s, b).hex;\n\t});\n\t/*\\\n\t * Snap.hsl\n\t [ method ]\n\t **\n\t * Converts HSL values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsl = cacher(function (h, s, l) {\n\t    return Snap.hsl2rgb(h, s, l).hex;\n\t});\n\t/*\\\n\t * Snap.rgb\n\t [ method ]\n\t **\n\t * Converts RGB values to a hex representation of the color\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.rgb = cacher(function (r, g, b, o) {\n\t    if (is(o, \"finite\")) {\n\t        var round = math.round;\n\t        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n\t    }\n\t    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n\t});\n\tvar toHex = function (color) {\n\t    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n\t        red = \"rgb(255, 0, 0)\";\n\t    toHex = cacher(function (color) {\n\t        if (color.toLowerCase() == \"red\") {\n\t            return red;\n\t        }\n\t        i.style.color = red;\n\t        i.style.color = color;\n\t        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t        return out == red ? null : out;\n\t    });\n\t    return toHex(color);\n\t},\n\thsbtoString = function () {\n\t    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t},\n\thsltoString = function () {\n\t    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t},\n\trgbtoString = function () {\n\t    return this.opacity == 1 || this.opacity == null ?\n\t            this.hex :\n\t            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n\t},\n\tprepareRGB = function (r, g, b) {\n\t    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t        b = r.b;\n\t        g = r.g;\n\t        r = r.r;\n\t    }\n\t    if (g == null && is(r, string)) {\n\t        var clr = Snap.getRGB(r);\n\t        r = clr.r;\n\t        g = clr.g;\n\t        b = clr.b;\n\t    }\n\t    if (r > 1 || g > 1 || b > 1) {\n\t        r /= 255;\n\t        g /= 255;\n\t        b /= 255;\n\t    }\n\t\n\t    return [r, g, b];\n\t},\n\tpackageRGB = function (r, g, b, o) {\n\t    r = math.round(r * 255);\n\t    g = math.round(g * 255);\n\t    b = math.round(b * 255);\n\t    var rgb = {\n\t        r: r,\n\t        g: g,\n\t        b: b,\n\t        opacity: is(o, \"finite\") ? o : 1,\n\t        hex: Snap.rgb(r, g, b),\n\t        toString: rgbtoString\n\t    };\n\t    is(o, \"finite\") && (rgb.opacity = o);\n\t    return rgb;\n\t};\n\t/*\\\n\t * Snap.color\n\t [ method ]\n\t **\n\t * Parses the color string and returns an object featuring the color's component values\n\t - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n\t = (object) Combined RGB/HSB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) `true` if string can't be parsed,\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     v (number) value (brightness),\n\t o     l (number) lightness\n\t o }\n\t\\*/\n\tSnap.color = function (clr) {\n\t    var rgb;\n\t    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t        rgb = Snap.hsb2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t        rgb = Snap.hsl2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else {\n\t        if (is(clr, \"string\")) {\n\t            clr = Snap.getRGB(clr);\n\t        }\n\t        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n\t            rgb = Snap.rgb2hsl(clr);\n\t            clr.h = rgb.h;\n\t            clr.s = rgb.s;\n\t            clr.l = rgb.l;\n\t            rgb = Snap.rgb2hsb(clr);\n\t            clr.v = rgb.b;\n\t        } else {\n\t            clr = {hex: \"none\"};\n\t            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            clr.error = 1;\n\t        }\n\t    }\n\t    clr.toString = rgbtoString;\n\t    return clr;\n\t};\n\t/*\\\n\t * Snap.hsb2rgb\n\t [ method ]\n\t **\n\t * Converts HSB values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - v (number) value or brightness\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsb2rgb = function (h, s, v, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t        v = h.b;\n\t        s = h.s;\n\t        o = h.o;\n\t        h = h.h;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = h % 360 / 60;\n\t    C = v * s;\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = v - C;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.hsl2rgb\n\t [ method ]\n\t **\n\t * Converts HSL values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsl2rgb = function (h, s, l, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t    }\n\t    if (h > 1 || s > 1 || l > 1) {\n\t        h /= 360;\n\t        s /= 100;\n\t        l /= 100;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = h % 360 / 60;\n\t    C = 2 * s * (l < .5 ? l : 1 - l);\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = l - C / 2;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.rgb2hsb\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSB object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSB object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     b (number) brightness\n\t o }\n\t\\*/\n\tSnap.rgb2hsb = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, V, C;\n\t    V = mmax(r, g, b);\n\t    C = V - mmin(r, g, b);\n\t    H = C == 0 ? null :\n\t        V == r ? (g - b) / C :\n\t        V == g ? (b - r) / C + 2 :\n\t                 (r - g) / C + 4;\n\t    H = (H + 360) % 6 * 60 / 360;\n\t    S = C == 0 ? 0 : C / V;\n\t    return {h: H, s: S, b: V, toString: hsbtoString};\n\t};\n\t/*\\\n\t * Snap.rgb2hsl\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSL object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSL object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     l (number) luminosity\n\t o }\n\t\\*/\n\tSnap.rgb2hsl = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, L, M, m, C;\n\t    M = mmax(r, g, b);\n\t    m = mmin(r, g, b);\n\t    C = M - m;\n\t    H = C == 0 ? null :\n\t        M == r ? (g - b) / C :\n\t        M == g ? (b - r) / C + 2 :\n\t                 (r - g) / C + 4;\n\t    H = (H + 360) % 6 * 60 / 360;\n\t    L = (M + m) / 2;\n\t    S = C == 0 ? 0 :\n\t         L < .5 ? C / (2 * L) :\n\t                  C / (2 - 2 * L);\n\t    return {h: H, s: S, l: L, toString: hsltoString};\n\t};\n\t\n\t// Transformations\n\t/*\\\n\t * Snap.parsePathString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given path string into an array of arrays of path segments\n\t - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n\t = (array) array of segments\n\t\\*/\n\tSnap.parsePathString = function (pathString) {\n\t    if (!pathString) {\n\t        return null;\n\t    }\n\t    var pth = Snap.path(pathString);\n\t    if (pth.arr) {\n\t        return Snap.path.clone(pth.arr);\n\t    }\n\t\n\t    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n\t        data = [];\n\t    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(pathString);\n\t    }\n\t    if (!data.length) {\n\t        Str(pathString).replace(pathCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            if (name == \"m\" && params.length > 2) {\n\t                data.push([b].concat(params.splice(0, 2)));\n\t                name = \"l\";\n\t                b = b == \"m\" ? \"l\" : \"L\";\n\t            }\n\t            if (name == \"o\" && params.length == 1) {\n\t                data.push([b, params[0]]);\n\t            }\n\t            if (name == \"r\") {\n\t                data.push([b].concat(params));\n\t            } else while (params.length >= paramCounts[name]) {\n\t                data.push([b].concat(params.splice(0, paramCounts[name])));\n\t                if (!paramCounts[name]) {\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    pth.arr = Snap.path.clone(data);\n\t    return data;\n\t};\n\t/*\\\n\t * Snap.parseTransformString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given transform string into an array of transformations\n\t - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n\t = (array) array of transformations\n\t\\*/\n\tvar parseTransformString = Snap.parseTransformString = function (TString) {\n\t    if (!TString) {\n\t        return null;\n\t    }\n\t    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t        data = [];\n\t    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(TString);\n\t    }\n\t    if (!data.length) {\n\t        Str(TString).replace(tCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            data.push([b].concat(params));\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    return data;\n\t};\n\tfunction svgTransform2string(tstr) {\n\t    var res = [];\n\t    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n\t        params = params.split(/\\s*,\\s*|\\s+/);\n\t        if (name == \"rotate\" && params.length == 1) {\n\t            params.push(0, 0);\n\t        }\n\t        if (name == \"scale\") {\n\t            if (params.length > 2) {\n\t                params = params.slice(0, 2);\n\t            } else if (params.length == 2) {\n\t                params.push(0, 0);\n\t            }\n\t            if (params.length == 1) {\n\t                params.push(params[0], 0, 0);\n\t            }\n\t        }\n\t        if (name == \"skewX\") {\n\t            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n\t        } else if (name == \"skewY\") {\n\t            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n\t        } else {\n\t            res.push([name.charAt(0)].concat(params));\n\t        }\n\t        return all;\n\t    });\n\t    return res;\n\t}\n\tSnap._.svgTransform2string = svgTransform2string;\n\tSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\tfunction transform2matrix(tstr, bbox) {\n\t    var tdata = parseTransformString(tstr),\n\t        m = new Snap.Matrix;\n\t    if (tdata) {\n\t        for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t            var t = tdata[i],\n\t                tlen = t.length,\n\t                command = Str(t[0]).toLowerCase(),\n\t                absolute = t[0] != command,\n\t                inver = absolute ? m.invert() : 0,\n\t                x1,\n\t                y1,\n\t                x2,\n\t                y2,\n\t                bb;\n\t            if (command == \"t\" && tlen == 2){\n\t                m.translate(t[1], 0);\n\t            } else if (command == \"t\" && tlen == 3) {\n\t                if (absolute) {\n\t                    x1 = inver.x(0, 0);\n\t                    y1 = inver.y(0, 0);\n\t                    x2 = inver.x(t[1], t[2]);\n\t                    y2 = inver.y(t[1], t[2]);\n\t                    m.translate(x2 - x1, y2 - y1);\n\t                } else {\n\t                    m.translate(t[1], t[2]);\n\t                }\n\t            } else if (command == \"r\") {\n\t                if (tlen == 2) {\n\t                    bb = bb || bbox;\n\t                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.rotate(t[1], x2, y2);\n\t                    } else {\n\t                        m.rotate(t[1], t[2], t[3]);\n\t                    }\n\t                }\n\t            } else if (command == \"s\") {\n\t                if (tlen == 2 || tlen == 3) {\n\t                    bb = bb || bbox;\n\t                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.scale(t[1], t[1], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[1], t[2], t[3]);\n\t                    }\n\t                } else if (tlen == 5) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[3], t[4]);\n\t                        y2 = inver.y(t[3], t[4]);\n\t                        m.scale(t[1], t[2], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[2], t[3], t[4]);\n\t                    }\n\t                }\n\t            } else if (command == \"m\" && tlen == 7) {\n\t                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t            }\n\t        }\n\t    }\n\t    return m;\n\t}\n\tSnap._.transform2matrix = transform2matrix;\n\tSnap._unit2px = unit2px;\n\tvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n\t    function (a, b) {\n\t        var adown = a.nodeType == 9 ? a.documentElement : a,\n\t            bup = b && b.parentNode;\n\t            return a == bup || !!(bup && bup.nodeType == 1 && (\n\t                adown.contains ?\n\t                    adown.contains(bup) :\n\t                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n\t            ));\n\t    } :\n\t    function (a, b) {\n\t        if (b) {\n\t            while (b) {\n\t                b = b.parentNode;\n\t                if (b == a) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    };\n\tfunction getSomeDefs(el) {\n\t    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n\t            el.node.parentNode && wrap(el.node.parentNode) ||\n\t            Snap.select(\"svg\") ||\n\t            Snap(0, 0),\n\t        pdefs = p.select(\"defs\"),\n\t        defs  = pdefs == null ? false : pdefs.node;\n\t    if (!defs) {\n\t        defs = make(\"defs\", p.node).node;\n\t    }\n\t    return defs;\n\t}\n\tfunction getSomeSVG(el) {\n\t    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n\t}\n\tSnap._.getSomeDefs = getSomeDefs;\n\tSnap._.getSomeSVG = getSomeSVG;\n\tfunction unit2px(el, name, value) {\n\t    var svg = getSomeSVG(el).node,\n\t        out = {},\n\t        mgr = svg.querySelector(\".svg---mgr\");\n\t    if (!mgr) {\n\t        mgr = $(\"rect\");\n\t        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n\t        svg.appendChild(mgr);\n\t    }\n\t    function getW(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {width: val});\n\t        try {\n\t            return mgr.getBBox().width;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function getH(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {height: val});\n\t        try {\n\t            return mgr.getBBox().height;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function set(nam, f) {\n\t        if (name == null) {\n\t            out[nam] = f(el.attr(nam) || 0);\n\t        } else if (nam == name) {\n\t            out = f(value == null ? el.attr(nam) || 0 : value);\n\t        }\n\t    }\n\t    switch (el.type) {\n\t        case \"rect\":\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        case \"image\":\n\t            set(\"width\", getW);\n\t            set(\"height\", getH);\n\t        case \"text\":\n\t            set(\"x\", getW);\n\t            set(\"y\", getH);\n\t        break;\n\t        case \"circle\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"r\", getW);\n\t        break;\n\t        case \"ellipse\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        break;\n\t        case \"line\":\n\t            set(\"x1\", getW);\n\t            set(\"x2\", getW);\n\t            set(\"y1\", getH);\n\t            set(\"y2\", getH);\n\t        break;\n\t        case \"marker\":\n\t            set(\"refX\", getW);\n\t            set(\"markerWidth\", getW);\n\t            set(\"refY\", getH);\n\t            set(\"markerHeight\", getH);\n\t        break;\n\t        case \"radialGradient\":\n\t            set(\"fx\", getW);\n\t            set(\"fy\", getH);\n\t        break;\n\t        case \"tspan\":\n\t            set(\"dx\", getW);\n\t            set(\"dy\", getH);\n\t        break;\n\t        default:\n\t            set(name, getW);\n\t    }\n\t    svg.removeChild(mgr);\n\t    return out;\n\t}\n\t/*\\\n\t * Snap.select\n\t [ method ]\n\t **\n\t * Wraps a DOM element specified by CSS selector as @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.select = function (query) {\n\t    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n\t    return wrap(glob.doc.querySelector(query));\n\t};\n\t/*\\\n\t * Snap.selectAll\n\t [ method ]\n\t **\n\t * Wraps DOM elements specified by CSS selector as set or array of @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.selectAll = function (query) {\n\t    var nodelist = glob.doc.querySelectorAll(query),\n\t        set = (Snap.set || Array)();\n\t    for (var i = 0; i < nodelist.length; i++) {\n\t        set.push(wrap(nodelist[i]));\n\t    }\n\t    return set;\n\t};\n\t\n\tfunction add2group(list) {\n\t    if (!is(list, \"array\")) {\n\t        list = Array.prototype.slice.call(arguments, 0);\n\t    }\n\t    var i = 0,\n\t        j = 0,\n\t        node = this.node;\n\t    while (this[i]) delete this[i++];\n\t    for (i = 0; i < list.length; i++) {\n\t        if (list[i].type == \"set\") {\n\t            list[i].forEach(function (el) {\n\t                node.appendChild(el.node);\n\t            });\n\t        } else {\n\t            node.appendChild(list[i].node);\n\t        }\n\t    }\n\t    var children = node.childNodes;\n\t    for (i = 0; i < children.length; i++) {\n\t        this[j++] = wrap(children[i]);\n\t    }\n\t    return this;\n\t}\n\t// Hub garbage collector every 10s\n\tsetInterval(function () {\n\t    for (var key in hub) if (hub[has](key)) {\n\t        var el = hub[key],\n\t            node = el.node;\n\t        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n\t            delete hub[key];\n\t        }\n\t    }\n\t}, 1e4);\n\tfunction Element(el) {\n\t    if (el.snap in hub) {\n\t        return hub[el.snap];\n\t    }\n\t    var svg;\n\t    try {\n\t        svg = el.ownerSVGElement;\n\t    } catch(e) {}\n\t    /*\\\n\t     * Element.node\n\t     [ property (object) ]\n\t     **\n\t     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t     > Usage\n\t     | // draw a circle at coordinate 10,10 with radius of 10\n\t     | var c = paper.circle(10, 10, 10);\n\t     | c.node.onclick = function () {\n\t     |     c.attr(\"fill\", \"red\");\n\t     | };\n\t    \\*/\n\t    this.node = el;\n\t    if (svg) {\n\t        this.paper = new Paper(svg);\n\t    }\n\t    /*\\\n\t     * Element.type\n\t     [ property (string) ]\n\t     **\n\t     * SVG tag name of the given element.\n\t    \\*/\n\t    this.type = el.tagName || el.nodeName;\n\t    var id = this.id = ID(this);\n\t    this.anims = {};\n\t    this._ = {\n\t        transform: []\n\t    };\n\t    el.snap = id;\n\t    hub[id] = this;\n\t    if (this.type == \"g\") {\n\t        this.add = add2group;\n\t    }\n\t    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n\t        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n\t            this[method] = Paper.prototype[method];\n\t        }\n\t    }\n\t}\n\t   /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Gets or sets given attributes of the element.\n\t     **\n\t     - params (object) contains key-value pairs of attributes you want to set\n\t     * or\n\t     - param (string) name of the attribute\n\t     = (Element) the current element\n\t     * or\n\t     = (string) value of attribute\n\t     > Usage\n\t     | el.attr({\n\t     |     fill: \"#fc0\",\n\t     |     stroke: \"#000\",\n\t     |     strokeWidth: 2, // CamelCase...\n\t     |     \"fill-opacity\": 0.5, // or dash-separated names\n\t     |     width: \"*=2\" // prefixed values\n\t     | });\n\t     | console.log(el.attr(\"fill\")); // #fc0\n\t     * Prefixed values in format `\"+=10\"` supported. All four operations\n\t     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n\t     * and `-`: `\"+=2em\"`.\n\t    \\*/\n\t    Element.prototype.attr = function (params, value) {\n\t        var el = this,\n\t            node = el.node;\n\t        if (!params) {\n\t            if (node.nodeType != 1) {\n\t                return {\n\t                    text: node.nodeValue\n\t                };\n\t            }\n\t            var attr = node.attributes,\n\t                out = {};\n\t            for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                out[attr[i].nodeName] = attr[i].nodeValue;\n\t            }\n\t            return out;\n\t        }\n\t        if (is(params, \"string\")) {\n\t            if (arguments.length > 1) {\n\t                var json = {};\n\t                json[params] = value;\n\t                params = json;\n\t            } else {\n\t                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n\t            }\n\t        }\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                eve(\"snap.util.attr.\" + att, el, params[att]);\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t/*\\\n\t * Snap.parse\n\t [ method ]\n\t **\n\t * Parses SVG fragment and converts it into a @Fragment\n\t **\n\t - svg (string) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.parse = function (svg) {\n\t    var f = glob.doc.createDocumentFragment(),\n\t        full = true,\n\t        div = glob.doc.createElement(\"div\");\n\t    svg = Str(svg);\n\t    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n\t        svg = \"<svg>\" + svg + \"</svg>\";\n\t        full = false;\n\t    }\n\t    div.innerHTML = svg;\n\t    svg = div.getElementsByTagName(\"svg\")[0];\n\t    if (svg) {\n\t        if (full) {\n\t            f = svg;\n\t        } else {\n\t            while (svg.firstChild) {\n\t                f.appendChild(svg.firstChild);\n\t            }\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\tfunction Fragment(frag) {\n\t    this.node = frag;\n\t}\n\t/*\\\n\t * Snap.fragment\n\t [ method ]\n\t **\n\t * Creates a DOM fragment from a given list of elements or strings\n\t **\n\t - varargs (…) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.fragment = function () {\n\t    var args = Array.prototype.slice.call(arguments, 0),\n\t        f = glob.doc.createDocumentFragment();\n\t    for (var i = 0, ii = args.length; i < ii; i++) {\n\t        var item = args[i];\n\t        if (item.node && item.node.nodeType) {\n\t            f.appendChild(item.node);\n\t        }\n\t        if (item.nodeType) {\n\t            f.appendChild(item);\n\t        }\n\t        if (typeof item == \"string\") {\n\t            f.appendChild(Snap.parse(item).node);\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\t\n\tfunction make(name, parent) {\n\t    var res = $(name);\n\t    parent.appendChild(res);\n\t    var el = wrap(res);\n\t    return el;\n\t}\n\tfunction Paper(w, h) {\n\t    var res,\n\t        desc,\n\t        defs,\n\t        proto = Paper.prototype;\n\t    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n\t        if (w.snap in hub) {\n\t            return hub[w.snap];\n\t        }\n\t        var doc = w.ownerDocument;\n\t        res = new Element(w);\n\t        desc = w.getElementsByTagName(\"desc\")[0];\n\t        defs = w.getElementsByTagName(\"defs\")[0];\n\t        if (!desc) {\n\t            desc = $(\"desc\");\n\t            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n\t            res.node.appendChild(desc);\n\t        }\n\t        if (!defs) {\n\t            defs = $(\"defs\");\n\t            res.node.appendChild(defs);\n\t        }\n\t        res.defs = defs;\n\t        for (var key in proto) if (proto[has](key)) {\n\t            res[key] = proto[key];\n\t        }\n\t        res.paper = res.root = res;\n\t    } else {\n\t        res = make(\"svg\", glob.doc.body);\n\t        $(res.node, {\n\t            height: h,\n\t            version: 1.1,\n\t            width: w,\n\t            xmlns: xmlns\n\t        });\n\t    }\n\t    return res;\n\t}\n\tfunction wrap(dom) {\n\t    if (!dom) {\n\t        return dom;\n\t    }\n\t    if (dom instanceof Element || dom instanceof Fragment) {\n\t        return dom;\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n\t        return new Paper(dom);\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n\t        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n\t    }\n\t    return new Element(dom);\n\t}\n\t\n\tSnap._.make = make;\n\tSnap._.wrap = wrap;\n\t/*\\\n\t * Paper.el\n\t [ method ]\n\t **\n\t * Creates an element on paper with a given name and no attributes\n\t **\n\t - name (string) tag name\n\t - attr (object) attributes\n\t = (Element) the current element\n\t > Usage\n\t | var c = paper.circle(10, 10, 10); // is the same as...\n\t | var c = paper.el(\"circle\").attr({\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t | // and the same as\n\t | var c = paper.el(\"circle\", {\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t\\*/\n\tPaper.prototype.el = function (name, attr) {\n\t    var el = make(name, this.node);\n\t    attr && el.attr(attr);\n\t    return el;\n\t};\n\t/*\\\n\t * Element.children\n\t [ method ]\n\t **\n\t * Returns array of all the children of the element.\n\t = (array) array of Elements\n\t\\*/\n\tElement.prototype.children = function () {\n\t    var out = [],\n\t        ch = this.node.childNodes;\n\t    for (var i = 0, ii = ch.length; i < ii; i++) {\n\t        out[i] = Snap(ch[i]);\n\t    }\n\t    return out;\n\t};\n\tfunction jsonFiller(root, o) {\n\t    for (var i = 0, ii = root.length; i < ii; i++) {\n\t        var item = {\n\t                type: root[i].type,\n\t                attr: root[i].attr()\n\t            },\n\t            children = root[i].children();\n\t        o.push(item);\n\t        if (children.length) {\n\t            jsonFiller(children, item.childNodes = []);\n\t        }\n\t    }\n\t}\n\t/*\\\n\t * Element.toJSON\n\t [ method ]\n\t **\n\t * Returns object representation of the given element and all its children.\n\t = (object) in format\n\t o {\n\t o     type (string) this.type,\n\t o     attr (object) attributes map,\n\t o     childNodes (array) optional array of children in the same format\n\t o }\n\t\\*/\n\tElement.prototype.toJSON = function () {\n\t    var out = [];\n\t    jsonFiller([this], out);\n\t    return out[0];\n\t};\n\t// default\n\teve.on(\"snap.util.getattr\", function () {\n\t    var att = eve.nt();\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    var css = att.replace(/[A-Z]/g, function (letter) {\n\t        return \"-\" + letter.toLowerCase();\n\t    });\n\t    if (cssAttr[has](css)) {\n\t        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n\t    } else {\n\t        return $(this.node, att);\n\t    }\n\t});\n\tvar cssAttr = {\n\t    \"alignment-baseline\": 0,\n\t    \"baseline-shift\": 0,\n\t    \"clip\": 0,\n\t    \"clip-path\": 0,\n\t    \"clip-rule\": 0,\n\t    \"color\": 0,\n\t    \"color-interpolation\": 0,\n\t    \"color-interpolation-filters\": 0,\n\t    \"color-profile\": 0,\n\t    \"color-rendering\": 0,\n\t    \"cursor\": 0,\n\t    \"direction\": 0,\n\t    \"display\": 0,\n\t    \"dominant-baseline\": 0,\n\t    \"enable-background\": 0,\n\t    \"fill\": 0,\n\t    \"fill-opacity\": 0,\n\t    \"fill-rule\": 0,\n\t    \"filter\": 0,\n\t    \"flood-color\": 0,\n\t    \"flood-opacity\": 0,\n\t    \"font\": 0,\n\t    \"font-family\": 0,\n\t    \"font-size\": 0,\n\t    \"font-size-adjust\": 0,\n\t    \"font-stretch\": 0,\n\t    \"font-style\": 0,\n\t    \"font-variant\": 0,\n\t    \"font-weight\": 0,\n\t    \"glyph-orientation-horizontal\": 0,\n\t    \"glyph-orientation-vertical\": 0,\n\t    \"image-rendering\": 0,\n\t    \"kerning\": 0,\n\t    \"letter-spacing\": 0,\n\t    \"lighting-color\": 0,\n\t    \"marker\": 0,\n\t    \"marker-end\": 0,\n\t    \"marker-mid\": 0,\n\t    \"marker-start\": 0,\n\t    \"mask\": 0,\n\t    \"opacity\": 0,\n\t    \"overflow\": 0,\n\t    \"pointer-events\": 0,\n\t    \"shape-rendering\": 0,\n\t    \"stop-color\": 0,\n\t    \"stop-opacity\": 0,\n\t    \"stroke\": 0,\n\t    \"stroke-dasharray\": 0,\n\t    \"stroke-dashoffset\": 0,\n\t    \"stroke-linecap\": 0,\n\t    \"stroke-linejoin\": 0,\n\t    \"stroke-miterlimit\": 0,\n\t    \"stroke-opacity\": 0,\n\t    \"stroke-width\": 0,\n\t    \"text-anchor\": 0,\n\t    \"text-decoration\": 0,\n\t    \"text-rendering\": 0,\n\t    \"unicode-bidi\": 0,\n\t    \"visibility\": 0,\n\t    \"word-spacing\": 0,\n\t    \"writing-mode\": 0\n\t};\n\t\n\teve.on(\"snap.util.attr\", function (value) {\n\t    var att = eve.nt(),\n\t        attr = {};\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    attr[att] = value;\n\t    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n\t            return letter.toUpperCase();\n\t        }),\n\t        css = att.replace(/[A-Z]/g, function (letter) {\n\t            return \"-\" + letter.toLowerCase();\n\t        });\n\t    if (cssAttr[has](css)) {\n\t        this.node.style[style] = value == null ? E : value;\n\t    } else {\n\t        $(this.node, attr);\n\t    }\n\t});\n\t(function (proto) {}(Paper.prototype));\n\t\n\t// simple ajax\n\t/*\\\n\t * Snap.ajax\n\t [ method ]\n\t **\n\t * Simple implementation of Ajax\n\t **\n\t - url (string) URL\n\t - postData (object|string) data for post request\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t * or\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\t\\*/\n\tSnap.ajax = function (url, postData, callback, scope){\n\t    var req = new XMLHttpRequest,\n\t        id = ID();\n\t    if (req) {\n\t        if (is(postData, \"function\")) {\n\t            scope = callback;\n\t            callback = postData;\n\t            postData = null;\n\t        } else if (is(postData, \"object\")) {\n\t            var pd = [];\n\t            for (var key in postData) if (postData.hasOwnProperty(key)) {\n\t                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n\t            }\n\t            postData = pd.join(\"&\");\n\t        }\n\t        req.open(postData ? \"POST\" : \"GET\", url, true);\n\t        if (postData) {\n\t            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t        }\n\t        if (callback) {\n\t            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n\t        }\n\t        req.onreadystatechange = function() {\n\t            if (req.readyState != 4) return;\n\t            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n\t        };\n\t        if (req.readyState == 4) {\n\t            return req;\n\t        }\n\t        req.send(postData);\n\t        return req;\n\t    }\n\t};\n\t/*\\\n\t * Snap.load\n\t [ method ]\n\t **\n\t * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n\t **\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t\\*/\n\tSnap.load = function (url, callback, scope) {\n\t    Snap.ajax(url, function (req) {\n\t        var f = Snap.parse(req.responseText);\n\t        scope ? callback.call(scope, f) : callback(f);\n\t    });\n\t};\n\tvar getOffset = function (elem) {\n\t    var box = elem.getBoundingClientRect(),\n\t        doc = elem.ownerDocument,\n\t        body = doc.body,\n\t        docElem = doc.documentElement,\n\t        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t    return {\n\t        y: top,\n\t        x: left\n\t    };\n\t};\n\t/*\\\n\t * Snap.getElementByPoint\n\t [ method ]\n\t **\n\t * Returns you topmost element under given point.\n\t **\n\t = (object) Snap element object\n\t - x (number) x coordinate from the top left corner of the window\n\t - y (number) y coordinate from the top left corner of the window\n\t > Usage\n\t | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t\\*/\n\tSnap.getElementByPoint = function (x, y) {\n\t    var paper = this,\n\t        svg = paper.canvas,\n\t        target = glob.doc.elementFromPoint(x, y);\n\t    if (glob.win.opera && target.tagName == \"svg\") {\n\t        var so = getOffset(target),\n\t            sr = target.createSVGRect();\n\t        sr.x = x - so.x;\n\t        sr.y = y - so.y;\n\t        sr.width = sr.height = 1;\n\t        var hits = target.getIntersectionList(sr, null);\n\t        if (hits.length) {\n\t            target = hits[hits.length - 1];\n\t        }\n\t    }\n\t    if (!target) {\n\t        return null;\n\t    }\n\t    return wrap(target);\n\t};\n\t/*\\\n\t * Snap.plugin\n\t [ method ]\n\t **\n\t * Let you write plugins. You pass in a function with five arguments, like this:\n\t | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n\t |     Snap.newmethod = function () {};\n\t |     Element.prototype.newmethod = function () {};\n\t |     Paper.prototype.newmethod = function () {};\n\t | });\n\t * Inside the function you have access to all main objects (and their\n\t * prototypes). This allow you to extend anything you want.\n\t **\n\t - f (function) your plugin body\n\t\\*/\n\tSnap.plugin = function (f) {\n\t    f(Snap, Element, Paper, glob, Fragment);\n\t};\n\tglob.win.Snap = Snap;\n\treturn Snap;\n\t}(window || this));\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        Str = String,\n\t        unit2px = Snap._unit2px,\n\t        $ = Snap._.$,\n\t        make = Snap._.make,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        has = \"hasOwnProperty\",\n\t        wrap = Snap._.wrap;\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Returns the bounding box descriptor for the given element\n\t     **\n\t     = (object) bounding box descriptor:\n\t     o {\n\t     o     cx: (number) x of the center,\n\t     o     cy: (number) x of the center,\n\t     o     h: (number) height,\n\t     o     height: (number) height,\n\t     o     path: (string) path command for the box,\n\t     o     r0: (number) radius of a circle that fully encloses the box,\n\t     o     r1: (number) radius of the smallest circle that can be enclosed,\n\t     o     r2: (number) radius of the largest circle that can be enclosed,\n\t     o     vb: (string) box as a viewbox command,\n\t     o     w: (number) width,\n\t     o     width: (number) width,\n\t     o     x2: (number) x of the right side,\n\t     o     x: (number) x of the left side,\n\t     o     y2: (number) y of the bottom edge,\n\t     o     y: (number) y of the top edge\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (this.type == \"tspan\") {\n\t            return Snap._.box(this.node.getClientRects().item(0));\n\t        }\n\t        if (!Snap.Matrix || !Snap.path) {\n\t            return this.node.getBBox();\n\t        }\n\t        var el = this,\n\t            m = new Snap.Matrix;\n\t        if (el.removed) {\n\t            return Snap._.box();\n\t        }\n\t        while (el.type == \"use\") {\n\t            if (!isWithoutTransform) {\n\t                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n\t            }\n\t            if (el.original) {\n\t                el = el.original;\n\t            } else {\n\t                var href = el.attr(\"xlink:href\");\n\t                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n\t            }\n\t        }\n\t        var _ = el._,\n\t            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\t        try {\n\t            if (isWithoutTransform) {\n\t                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n\t                return Snap._.box(_.bboxwt);\n\t            } else {\n\t                el.realPath = pathfinder(el);\n\t                el.matrix = el.transform().localMatrix;\n\t                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n\t                return Snap._.box(_.bbox);\n\t            }\n\t        } catch (e) {\n\t            // Firefox doesn’t give you bbox of hidden element\n\t            return Snap._.box();\n\t        }\n\t    };\n\t    var propString = function () {\n\t        return this.string;\n\t    };\n\t    function extractTransform(el, tstr) {\n\t        if (tstr == null) {\n\t            var doReturn = true;\n\t            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n\t                tstr = el.node.getAttribute(\"gradientTransform\");\n\t            } else if (el.type == \"pattern\") {\n\t                tstr = el.node.getAttribute(\"patternTransform\");\n\t            } else {\n\t                tstr = el.node.getAttribute(\"transform\");\n\t            }\n\t            if (!tstr) {\n\t                return new Snap.Matrix;\n\t            }\n\t            tstr = Snap._.svgTransform2string(tstr);\n\t        } else {\n\t            if (!Snap._.rgTransform.test(tstr)) {\n\t                tstr = Snap._.svgTransform2string(tstr);\n\t            } else {\n\t                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n\t            }\n\t            if (is(tstr, \"array\")) {\n\t                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n\t            }\n\t            el._.transform = tstr;\n\t        }\n\t        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\t        if (doReturn) {\n\t            return m;\n\t        } else {\n\t            el.matrix = m;\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Gets or sets transformation of the element\n\t     **\n\t     - tstr (string) transform string in Snap or SVG format\n\t     = (Element) the current element\n\t     * or\n\t     = (object) transformation descriptor:\n\t     o {\n\t     o     string (string) transform string,\n\t     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n\t     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n\t     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n\t     o     global (string) global transformation as string,\n\t     o     local (string) local transformation as string,\n\t     o     toString (function) returns `string` property\n\t     o }\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            var papa = this,\n\t                global = new Snap.Matrix(this.node.getCTM()),\n\t                local = extractTransform(this),\n\t                ms = [local],\n\t                m = new Snap.Matrix,\n\t                i,\n\t                localString = local.toTransformString(),\n\t                string = Str(local) == Str(this.matrix) ?\n\t                            Str(_.transform) : localString;\n\t            while (papa.type != \"svg\" && (papa = papa.parent())) {\n\t                ms.push(extractTransform(papa));\n\t            }\n\t            i = ms.length;\n\t            while (i--) {\n\t                m.add(ms[i]);\n\t            }\n\t            return {\n\t                string: string,\n\t                globalMatrix: global,\n\t                totalMatrix: m,\n\t                localMatrix: local,\n\t                diffMatrix: global.clone().add(local.invert()),\n\t                global: global.toTransformString(),\n\t                total: m.toTransformString(),\n\t                local: localString,\n\t                toString: propString\n\t            };\n\t        }\n\t        if (tstr instanceof Snap.Matrix) {\n\t            this.matrix = tstr;\n\t            this._.transform = tstr.toTransformString();\n\t        } else {\n\t            extractTransform(this, tstr);\n\t        }\n\t\n\t        if (this.node) {\n\t            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n\t                $(this.node, {gradientTransform: this.matrix});\n\t            } else if (this.type == \"pattern\") {\n\t                $(this.node, {patternTransform: this.matrix});\n\t            } else {\n\t                $(this.node, {transform: this.matrix});\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.parent\n\t     [ method ]\n\t     **\n\t     * Returns the element's parent\n\t     **\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.parent = function () {\n\t        return wrap(this.node.parentNode);\n\t    };\n\t    /*\\\n\t     * Element.append\n\t     [ method ]\n\t     **\n\t     * Appends the given element to current one\n\t     **\n\t     - el (Element|Set) element to append\n\t     = (Element) the parent element\n\t    \\*/\n\t    /*\\\n\t     * Element.add\n\t     [ method ]\n\t     **\n\t     * See @Element.append\n\t    \\*/\n\t    elproto.append = elproto.add = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this;\n\t                el.forEach(function (el) {\n\t                    it.add(el);\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            this.node.appendChild(el.node);\n\t            el.paper = this.paper;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.appendTo\n\t     [ method ]\n\t     **\n\t     * Appends the current element to the given one\n\t     **\n\t     - el (Element) parent element to append to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.appendTo = function (el) {\n\t        if (el) {\n\t            el = wrap(el);\n\t            el.append(this);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prepend\n\t     [ method ]\n\t     **\n\t     * Prepends the given element to the current one\n\t     **\n\t     - el (Element) element to prepend\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.prepend = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this,\n\t                    first;\n\t                el.forEach(function (el) {\n\t                    if (first) {\n\t                        first.after(el);\n\t                    } else {\n\t                        it.prepend(el);\n\t                    }\n\t                    first = el;\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            var parent = el.parent();\n\t            this.node.insertBefore(el.node, this.node.firstChild);\n\t            this.add && this.add();\n\t            el.paper = this.paper;\n\t            this.parent() && this.parent().add();\n\t            parent && parent.add();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prependTo\n\t     [ method ]\n\t     **\n\t     * Prepends the current element to the given one\n\t     **\n\t     - el (Element) parent element to prepend to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.prependTo = function (el) {\n\t        el = wrap(el);\n\t        el.prepend(this);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.before\n\t     [ method ]\n\t     **\n\t     * Inserts given element before the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.before = function (el) {\n\t        if (el.type == \"set\") {\n\t            var it = this;\n\t            el.forEach(function (el) {\n\t                var parent = el.parent();\n\t                it.node.parentNode.insertBefore(el.node, it.node);\n\t                parent && parent.add();\n\t            });\n\t            this.parent().add();\n\t            return this;\n\t        }\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        this.node.parentNode.insertBefore(el.node, this.node);\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.after\n\t     [ method ]\n\t     **\n\t     * Inserts given element after the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.after = function (el) {\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        if (this.node.nextSibling) {\n\t            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n\t        } else {\n\t            this.node.parentNode.appendChild(el.node);\n\t        }\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertBefore = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertAfter = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the DOM\n\t     = (Element) the detached element\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var parent = this.parent();\n\t        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n\t        delete this.paper;\n\t        this.removed = true;\n\t        parent && parent.add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.select\n\t     [ method ]\n\t     **\n\t     * Gathers the nested @Element matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.select = function (query) {\n\t        return wrap(this.node.querySelector(query));\n\t    };\n\t    /*\\\n\t     * Element.selectAll\n\t     [ method ]\n\t     **\n\t     * Gathers nested @Element objects matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Set|array) result of query selection\n\t    \\*/\n\t    elproto.selectAll = function (query) {\n\t        var nodelist = this.node.querySelectorAll(query),\n\t            set = (Snap.set || Array)();\n\t        for (var i = 0; i < nodelist.length; i++) {\n\t            set.push(wrap(nodelist[i]));\n\t        }\n\t        return set;\n\t    };\n\t    /*\\\n\t     * Element.asPX\n\t     [ method ]\n\t     **\n\t     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n\t     **\n\t     - attr (string) attribute name\n\t     - value (string) #optional attribute value\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.asPX = function (attr, value) {\n\t        if (value == null) {\n\t            value = this.attr(attr);\n\t        }\n\t        return +unit2px(this, attr, value);\n\t    };\n\t    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\t    /*\\\n\t     * Element.use\n\t     [ method ]\n\t     **\n\t     * Creates a `<use>` element linked to the current element\n\t     **\n\t     = (Element) the `<use>` element\n\t    \\*/\n\t    elproto.use = function () {\n\t        var use,\n\t            id = this.node.id;\n\t        if (!id) {\n\t            id = this.id;\n\t            $(this.node, {\n\t                id: id\n\t            });\n\t        }\n\t        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n\t            this.type == \"pattern\") {\n\t            use = make(this.type, this.node.parentNode);\n\t        } else {\n\t            use = make(\"use\", this.node.parentNode);\n\t        }\n\t        $(use.node, {\n\t            \"xlink:href\": \"#\" + id\n\t        });\n\t        use.original = this;\n\t        return use;\n\t    };\n\t    function fixids(el) {\n\t        var els = el.selectAll(\"*\"),\n\t            it,\n\t            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n\t            ids = [],\n\t            uses = {};\n\t        function urltest(it, name) {\n\t            var val = $(it.node, name);\n\t            val = val && val.match(url);\n\t            val = val && val[2];\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    var attr = {};\n\t                    attr[name] = Snap.url(id);\n\t                    $(it.node, attr);\n\t                });\n\t            }\n\t        }\n\t        function linktest(it) {\n\t            var val = $(it.node, \"xlink:href\");\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    it.attr(\"xlink:href\", \"#\" + id);\n\t                });\n\t            }\n\t        }\n\t        for (var i = 0, ii = els.length; i < ii; i++) {\n\t            it = els[i];\n\t            urltest(it, \"fill\");\n\t            urltest(it, \"stroke\");\n\t            urltest(it, \"filter\");\n\t            urltest(it, \"mask\");\n\t            urltest(it, \"clip-path\");\n\t            linktest(it);\n\t            var oldid = $(it.node, \"id\");\n\t            if (oldid) {\n\t                $(it.node, {id: it.id});\n\t                ids.push({\n\t                    old: oldid,\n\t                    id: it.id\n\t                });\n\t            }\n\t        }\n\t        for (i = 0, ii = ids.length; i < ii; i++) {\n\t            var fs = uses[ids[i].old];\n\t            if (fs) {\n\t                for (var j = 0, jj = fs.length; j < jj; j++) {\n\t                    fs[j](ids[i].id);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     * Creates a clone of the element and inserts it after the element\n\t     **\n\t     = (Element) the clone\n\t    \\*/\n\t    elproto.clone = function () {\n\t        var clone = wrap(this.node.cloneNode(true));\n\t        if ($(clone.node, \"id\")) {\n\t            $(clone.node, {id: clone.id});\n\t        }\n\t        fixids(clone);\n\t        clone.insertAfter(this);\n\t        return clone;\n\t    };\n\t    /*\\\n\t     * Element.toDefs\n\t     [ method ]\n\t     **\n\t     * Moves element to the shared `<defs>` area\n\t     **\n\t     = (Element) the element\n\t    \\*/\n\t    elproto.toDefs = function () {\n\t        var defs = getSomeDefs(this);\n\t        defs.appendChild(this.node);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toPattern\n\t     [ method ]\n\t     **\n\t     * Creates a `<pattern>` element from the current element\n\t     **\n\t     * To create a pattern you have to specify the pattern rect:\n\t     - x (string|number)\n\t     - y (string|number)\n\t     - width (string|number)\n\t     - height (string|number)\n\t     = (Element) the `<pattern>` element\n\t     * You can use pattern later on as an argument for `fill` attribute:\n\t     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n\t     |         fill: \"none\",\n\t     |         stroke: \"#bada55\",\n\t     |         strokeWidth: 5\n\t     |     }).pattern(0, 0, 10, 10),\n\t     |     c = paper.circle(200, 200, 100);\n\t     | c.attr({\n\t     |     fill: p\n\t     | });\n\t    \\*/\n\t    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n\t        var p = make(\"pattern\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            height: height,\n\t            patternUnits: \"userSpaceOnUse\",\n\t            id: p.id,\n\t            viewBox: [x, y, width, height].join(\" \")\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n\t// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\t    /*\\\n\t     * Element.marker\n\t     [ method ]\n\t     **\n\t     * Creates a `<marker>` element from the current element\n\t     **\n\t     * To create a marker you have to specify the bounding rect and reference point:\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - refX (number)\n\t     - refY (number)\n\t     = (Element) the `<marker>` element\n\t     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n\t    \\*/\n\t    // TODO add usage for markers\n\t    elproto.marker = function (x, y, width, height, refX, refY) {\n\t        var p = make(\"marker\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            refX = x.refX || x.cx;\n\t            refY = x.refY || x.cy;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            viewBox: [x, y, width, height].join(\" \"),\n\t            markerWidth: width,\n\t            markerHeight: height,\n\t            orient: \"auto\",\n\t            refX: refX || 0,\n\t            refY: refY || 0,\n\t            id: p.id\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t    var eldata = {};\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key. (Don’t confuse\n\t     * with `data-` attributes)\n\t     *\n\t     * See also @Element.removeData\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0){\n\t            eve(\"snap.data.get.\" + this.id, this, data, null);\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (Snap.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"snap.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.outerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n\t     *\n\t     * See also @Element.innerSVG\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    /*\\\n\t     * Element.toString\n\t     [ method ]\n\t     **\n\t     * See @Element.outerSVG\n\t    \\*/\n\t    elproto.outerSVG = elproto.toString = toString(1);\n\t    /*\\\n\t     * Element.innerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    elproto.innerSVG = toString();\n\t    function toString(type) {\n\t        return function () {\n\t            var res = type ? \"<\" + this.type : \"\",\n\t                attr = this.node.attributes,\n\t                chld = this.node.childNodes;\n\t            if (type) {\n\t                for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                    res += \" \" + attr[i].name + '=\"' +\n\t                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n\t                }\n\t            }\n\t            if (chld.length) {\n\t                type && (res += \">\");\n\t                for (i = 0, ii = chld.length; i < ii; i++) {\n\t                    if (chld[i].nodeType == 3) {\n\t                        res += chld[i].nodeValue;\n\t                    } else if (chld[i].nodeType == 1) {\n\t                        res += wrap(chld[i]).toString();\n\t                    }\n\t                }\n\t                type && (res += \"</\" + this.type + \">\");\n\t            } else {\n\t                type && (res += \"/>\");\n\t            }\n\t            return res;\n\t        };\n\t    }\n\t    elproto.toDataURL = function () {\n\t        if (window && window.btoa) {\n\t            var bb = this.getBBox(),\n\t                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n\t                x: +bb.x.toFixed(3),\n\t                y: +bb.y.toFixed(3),\n\t                width: +bb.width.toFixed(3),\n\t                height: +bb.height.toFixed(3),\n\t                contents: this.outerSVG()\n\t            });\n\t            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n\t        }\n\t    };\n\t    /*\\\n\t     * Fragment.select\n\t     [ method ]\n\t     **\n\t     * See @Element.select\n\t    \\*/\n\t    Fragment.prototype.select = elproto.select;\n\t    /*\\\n\t     * Fragment.selectAll\n\t     [ method ]\n\t     **\n\t     * See @Element.selectAll\n\t    \\*/\n\t    Fragment.prototype.selectAll = elproto.selectAll;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var objectToString = Object.prototype.toString,\n\t        Str = String,\n\t        math = Math,\n\t        E = \"\";\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n\t            this.a = a.a;\n\t            this.b = a.b;\n\t            this.c = a.c;\n\t            this.d = a.d;\n\t            this.e = a.e;\n\t            this.f = a.f;\n\t            return;\n\t        }\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds the given matrix to existing one\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         * or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            if (a && a instanceof Matrix) {\n\t                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n\t            }\n\t            var aNew = a * this.a + b * this.c,\n\t                bNew = a * this.b + b * this.d;\n\t            this.e += e * this.a + f * this.c;\n\t            this.f += e * this.b + f * this.d;\n\t            this.c = c * this.a + d * this.c;\n\t            this.d = c * this.b + d * this.d;\n\t\n\t            this.a = aNew;\n\t            this.b = bNew;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.multLeft\n\t         [ method ]\n\t         **\n\t         * Multiplies a passed affine transform to the left: M * this.\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         * or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n\t            if (a && a instanceof Matrix) {\n\t                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n\t            }\n\t            var aNew = a * this.a + c * this.b,\n\t                cNew = a * this.c + c * this.d,\n\t                eNew = a * this.e + c * this.f + e;\n\t            this.b = b * this.a + d * this.b;\n\t            this.d = b * this.c + d * this.d;\n\t            this.f = b * this.e + d * this.f + f;\n\t\n\t            this.a = aNew;\n\t            this.c = cNew;\n\t            this.e = eNew;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns an inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns a copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         - x (number) horizontal offset distance\n\t         - y (number) vertical offset distance\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            this.e += x * this.a + y * this.c;\n\t            this.f += x * this.b + y * this.d;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         - x (number) amount to be scaled, with `1` resulting in no change\n\t         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n\t         - cx (number) #optional horizontal origin point from which to scale\n\t         - cy (number) #optional vertical origin point from which to scale\n\t         * Default cx, cy is the middle point of the element.\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.translate(cx, cy);\n\t            this.a *= x;\n\t            this.b *= x;\n\t            this.c *= y;\n\t            this.d *= y;\n\t            (cx || cy) && this.translate(-cx, -cy);\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         - a (number) angle of rotation, in degrees\n\t         - x (number) horizontal origin point from which to rotate\n\t         - y (number) vertical origin point from which to rotate\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = Snap.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            return this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.skewX\n\t         [ method ]\n\t         **\n\t         * Skews the matrix along the x-axis\n\t         - x (number) Angle to skew along the x-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skewX = function (x) {\n\t            return this.skew(x, 0);\n\t        };\n\t        /*\\\n\t         * Matrix.skewY\n\t         [ method ]\n\t         **\n\t         * Skews the matrix along the y-axis\n\t         - y (number) Angle to skew along the y-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skewY = function (y) {\n\t            return this.skew(0, y);\n\t        };\n\t        /*\\\n\t         * Matrix.skew\n\t         [ method ]\n\t         **\n\t         * Skews the matrix\n\t         - y (number) Angle to skew along the y-axis (in degrees).\n\t         - x (number) Angle to skew along the x-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skew = function (x, y) {\n\t            x = x || 0;\n\t            y = y || 0;\n\t            x = Snap.rad(x);\n\t            y = Snap.rad(y);\n\t            var c = math.tan(x).toFixed(9);\n\t            var b = math.tan(y).toFixed(9);\n\t            return this.add(1, b, c, 1, 0, 0);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.determinant\n\t         [ method ]\n\t         **\n\t         * Finds determinant of the given matrix.\n\t         = (number) determinant\n\t        \\*/\n\t        matrixproto.determinant = function () {\n\t            return this.a * this.d - this.b * this.c;\n\t        };\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\t\n\t            // scale and shear\n\t            var row = [[this.a, this.b], [this.c, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\t\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\t\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\t\n\t            if (this.determinant() < 0) {\n\t                out.scalex = -out.scalex;\n\t            }\n\t\n\t            // rotation\n\t            var sin = row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = Snap.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = Snap.deg(math.asin(sin));\n\t            }\n\t\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Returns transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this.split();\n\t            if (!+s.shear.toFixed(9)) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n\t                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\t    /*\\\n\t     * Snap.Matrix\n\t     [ method ]\n\t     **\n\t     * Matrix constructor, extend on your own risk.\n\t     * To create matrices use @Snap.matrix.\n\t    \\*/\n\t    Snap.Matrix = Matrix;\n\t    /*\\\n\t     * Snap.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns a matrix based on the given parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     * or\n\t     - svgMatrix (SVGMatrix)\n\t     = (object) @Matrix\n\t    \\*/\n\t    Snap.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var has = \"hasOwnProperty\",\n\t        make = Snap._.make,\n\t        wrap = Snap._.wrap,\n\t        is = Snap.is,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n\t        $ = Snap._.$,\n\t        URL = Snap.url,\n\t        Str = String,\n\t        separator = Snap._.separator,\n\t        E = \"\";\n\t    /*\\\n\t     * Snap.deurl\n\t     [ method ]\n\t     **\n\t     * Unwraps path from `\"url(<path>)\"`.\n\t     - value (string) url path\n\t     = (string) unwrapped path\n\t    \\*/\n\t    Snap.deurl = function (value) {\n\t        var res = String(value).match(reURLValue);\n\t        return res ? res[2] : value;\n\t    }\n\t    // Attributes event handlers\n\t    eve.on(\"snap.util.attr.mask\", function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value.type == \"mask\") {\n\t                var mask = value;\n\t            } else {\n\t                mask = make(\"mask\", getSomeDefs(this));\n\t                mask.node.appendChild(value.node);\n\t            }\n\t            !mask.node.id && $(mask.node, {\n\t                id: mask.id\n\t            });\n\t            $(this.node, {\n\t                mask: URL(mask.id)\n\t            });\n\t        }\n\t    });\n\t    (function (clipIt) {\n\t        eve.on(\"snap.util.attr.clip\", clipIt);\n\t        eve.on(\"snap.util.attr.clip-path\", clipIt);\n\t        eve.on(\"snap.util.attr.clipPath\", clipIt);\n\t    }(function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            var clip,\n\t                node = value.node;\n\t            while (node) {\n\t                if (node.nodeName === \"clipPath\") {\n\t                    clip = new Element(node);\n\t                    break;\n\t                }\n\t                if (node.nodeName === \"svg\") {\n\t                    clip = undefined;\n\t                    break;\n\t                }\n\t                node = node.parentNode;\n\t            }\n\t            if (!clip) {\n\t                clip = make(\"clipPath\", getSomeDefs(this));\n\t                clip.node.appendChild(value.node);\n\t                !clip.node.id && $(clip.node, {\n\t                    id: clip.id\n\t                });\n\t            }\n\t            $(this.node, {\n\t                \"clip-path\": URL(clip.node.id || clip.id)\n\t            });\n\t        }\n\t    }));\n\t    function fillStroke(name) {\n\t        return function (value) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n\t                (value.node.firstChild.tagName == \"radialGradient\" ||\n\t                value.node.firstChild.tagName == \"linearGradient\" ||\n\t                value.node.firstChild.tagName == \"pattern\")) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value instanceof Element) {\n\t                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n\t                   || value.type == \"pattern\") {\n\t                    if (!value.node.id) {\n\t                        $(value.node, {\n\t                            id: value.id\n\t                        });\n\t                    }\n\t                    var fill = URL(value.node.id);\n\t                } else {\n\t                    fill = value.attr(name);\n\t                }\n\t            } else {\n\t                fill = Snap.color(value);\n\t                if (fill.error) {\n\t                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\t                    if (grad) {\n\t                        if (!grad.node.id) {\n\t                            $(grad.node, {\n\t                                id: grad.id\n\t                            });\n\t                        }\n\t                        fill = URL(grad.node.id);\n\t                    } else {\n\t                        fill = value;\n\t                    }\n\t                } else {\n\t                    fill = Str(fill);\n\t                }\n\t            }\n\t            var attrs = {};\n\t            attrs[name] = fill;\n\t            $(this.node, attrs);\n\t            this.node.style[name] = E;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n\t    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n\t    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n\t    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n\t        string = Str(string);\n\t        var tokens = string.match(gradrg);\n\t        if (!tokens) {\n\t            return null;\n\t        }\n\t        var type = tokens[1],\n\t            params = tokens[2],\n\t            stops = tokens[3];\n\t        params = params.split(/\\s*,\\s*/).map(function (el) {\n\t            return +el == el ? +el : el;\n\t        });\n\t        if (params.length == 1 && params[0] == 0) {\n\t            params = [];\n\t        }\n\t        stops = stops.split(\"-\");\n\t        stops = stops.map(function (el) {\n\t            el = el.split(\":\");\n\t            var out = {\n\t                color: el[0]\n\t            };\n\t            if (el[1]) {\n\t                out.offset = parseFloat(el[1]);\n\t            }\n\t            return out;\n\t        });\n\t        var len = stops.length,\n\t            start = 0,\n\t            j = 0;\n\t        function seed(i, end) {\n\t            var step = (end - start) / (i - j);\n\t            for (var k = j; k < i; k++) {\n\t                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n\t            }\n\t            j = i;\n\t            start = end;\n\t        }\n\t        len--;\n\t        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n\t            seed(i, stops[i].offset);\n\t        }\n\t        stops[len].offset = stops[len].offset || 100;\n\t        seed(len, stops[len].offset);\n\t        return {\n\t            type: type,\n\t            params: params,\n\t            stops: stops\n\t        };\n\t    });\n\t\n\t    eve.on(\"snap.util.attr.d\", function (value) {\n\t        eve.stop();\n\t        if (is(value, \"array\") && is(value[0], \"array\")) {\n\t            value = Snap.path.toString.call(value);\n\t        }\n\t        value = Str(value);\n\t        if (value.match(/[ruo]/i)) {\n\t            value = Snap.path.toAbsolute(value);\n\t        }\n\t        $(this.node, {d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.#text\", function (value) {\n\t        eve.stop();\n\t        value = Str(value);\n\t        var txt = glob.doc.createTextNode(value);\n\t        while (this.node.firstChild) {\n\t            this.node.removeChild(this.node.firstChild);\n\t        }\n\t        this.node.appendChild(txt);\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.path\", function (value) {\n\t        eve.stop();\n\t        this.attr({d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.class\", function (value) {\n\t        eve.stop();\n\t        this.node.className.baseVal = value;\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.viewBox\", function (value) {\n\t        var vb;\n\t        if (is(value, \"object\") && \"x\" in value) {\n\t            vb = [value.x, value.y, value.width, value.height].join(\" \");\n\t        } else if (is(value, \"array\")) {\n\t            vb = value.join(\" \");\n\t        } else {\n\t            vb = value;\n\t        }\n\t        $(this.node, {\n\t            viewBox: vb\n\t        });\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.transform\", function (value) {\n\t        this.transform(value);\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.r\", function (value) {\n\t        if (this.type == \"rect\") {\n\t            eve.stop();\n\t            $(this.node, {\n\t                rx: value,\n\t                ry: value\n\t            });\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.textpath\", function (value) {\n\t        eve.stop();\n\t        if (this.type == \"text\") {\n\t            var id, tp, node;\n\t            if (!value && this.textPath) {\n\t                tp = this.textPath;\n\t                while (tp.node.firstChild) {\n\t                    this.node.appendChild(tp.node.firstChild);\n\t                }\n\t                tp.remove();\n\t                delete this.textPath;\n\t                return;\n\t            }\n\t            if (is(value, \"string\")) {\n\t                var defs = getSomeDefs(this),\n\t                    path = wrap(defs.parentNode).path(value);\n\t                defs.appendChild(path.node);\n\t                id = path.id;\n\t                path.attr({id: id});\n\t            } else {\n\t                value = wrap(value);\n\t                if (value instanceof Element) {\n\t                    id = value.attr(\"id\");\n\t                    if (!id) {\n\t                        id = value.id;\n\t                        value.attr({id: id});\n\t                    }\n\t                }\n\t            }\n\t            if (id) {\n\t                tp = this.textPath;\n\t                node = this.node;\n\t                if (tp) {\n\t                    tp.attr({\"xlink:href\": \"#\" + id});\n\t                } else {\n\t                    tp = $(\"textPath\", {\n\t                        \"xlink:href\": \"#\" + id\n\t                    });\n\t                    while (node.firstChild) {\n\t                        tp.appendChild(node.firstChild);\n\t                    }\n\t                    node.appendChild(tp);\n\t                    this.textPath = wrap(tp);\n\t                }\n\t            }\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.text\", function (value) {\n\t        if (this.type == \"text\") {\n\t            var i = 0,\n\t                node = this.node,\n\t                tuner = function (chunk) {\n\t                    var out = $(\"tspan\");\n\t                    if (is(chunk, \"array\")) {\n\t                        for (var i = 0; i < chunk.length; i++) {\n\t                            out.appendChild(tuner(chunk[i]));\n\t                        }\n\t                    } else {\n\t                        out.appendChild(glob.doc.createTextNode(chunk));\n\t                    }\n\t                    out.normalize && out.normalize();\n\t                    return out;\n\t                };\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var tuned = tuner(value);\n\t            while (tuned.firstChild) {\n\t                node.appendChild(tuned.firstChild);\n\t            }\n\t        }\n\t        eve.stop();\n\t    })(-1);\n\t    function setFontSize(value) {\n\t        eve.stop();\n\t        if (value == +value) {\n\t            value += \"px\";\n\t        }\n\t        this.node.style.fontSize = value;\n\t    }\n\t    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n\t    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\t\n\t\n\t    eve.on(\"snap.util.getattr.transform\", function () {\n\t        eve.stop();\n\t        return this.transform();\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.textpath\", function () {\n\t        eve.stop();\n\t        return this.textPath;\n\t    })(-1);\n\t    // Markers\n\t    (function () {\n\t        function getter(end) {\n\t            return function () {\n\t                eve.stop();\n\t                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\t                if (style == \"none\") {\n\t                    return style;\n\t                } else {\n\t                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n\t                }\n\t            };\n\t        }\n\t        function setter(end) {\n\t            return function (value) {\n\t                eve.stop();\n\t                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\t                if (value == \"\" || !value) {\n\t                    this.node.style[name] = \"none\";\n\t                    return;\n\t                }\n\t                if (value.type == \"marker\") {\n\t                    var id = value.node.id;\n\t                    if (!id) {\n\t                        $(value.node, {id: value.id});\n\t                    }\n\t                    this.node.style[name] = URL(id);\n\t                    return;\n\t                }\n\t            };\n\t        }\n\t        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n\t    }());\n\t    eve.on(\"snap.util.getattr.r\", function () {\n\t        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n\t            eve.stop();\n\t            return $(this.node, \"rx\");\n\t        }\n\t    })(-1);\n\t    function textExtract(node) {\n\t        var out = [];\n\t        var children = node.childNodes;\n\t        for (var i = 0, ii = children.length; i < ii; i++) {\n\t            var chi = children[i];\n\t            if (chi.nodeType == 3) {\n\t                out.push(chi.nodeValue);\n\t            }\n\t            if (chi.tagName == \"tspan\") {\n\t                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n\t                    out.push(chi.firstChild.nodeValue);\n\t                } else {\n\t                    out.push(textExtract(chi));\n\t                }\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    eve.on(\"snap.util.getattr.text\", function () {\n\t        if (this.type == \"text\" || this.type == \"tspan\") {\n\t            eve.stop();\n\t            var out = textExtract(this.node);\n\t            return out.length == 1 ? out[0] : out;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.#text\", function () {\n\t        return this.node.textContent;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.fill\", function (internal) {\n\t        if (internal) {\n\t            return;\n\t        }\n\t        eve.stop();\n\t        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n\t        return Snap(Snap.deurl(value)) || value;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n\t        if (internal) {\n\t            return;\n\t        }\n\t        eve.stop();\n\t        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n\t        return Snap(Snap.deurl(value)) || value;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.viewBox\", function () {\n\t        eve.stop();\n\t        var vb = $(this.node, \"viewBox\");\n\t        if (vb) {\n\t            vb = vb.split(separator);\n\t            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.points\", function () {\n\t        var p = $(this.node, \"points\");\n\t        eve.stop();\n\t        if (p) {\n\t            return p.split(separator);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.path\", function () {\n\t        var p = $(this.node, \"d\");\n\t        eve.stop();\n\t        return p;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.class\", function () {\n\t        return this.node.className.baseVal;\n\t    })(-1);\n\t    function getFontSize() {\n\t        eve.stop();\n\t        return this.node.style.fontSize;\n\t    }\n\t    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n\t    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var rgNotSpace = /\\S+/g,\n\t        rgBadSpace = /[\\t\\r\\n\\f]/g,\n\t        rgTrim = /(^\\s+|\\s+$)/g,\n\t        Str = String,\n\t        elproto = Element.prototype;\n\t    /*\\\n\t     * Element.addClass\n\t     [ method ]\n\t     **\n\t     * Adds given class name or list of class names to the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.addClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t\n\t        if (classes.length) {\n\t            j = 0;\n\t            while (clazz = classes[j++]) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (!~pos) {\n\t                    curClasses.push(clazz);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeClass\n\t     [ method ]\n\t     **\n\t     * Removes given class name or list of class names from the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.removeClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        if (curClasses.length) {\n\t            j = 0;\n\t            while (clazz = classes[j++]) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (~pos) {\n\t                    curClasses.splice(pos, 1);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hasClass\n\t     [ method ]\n\t     **\n\t     * Checks if the element has a given class name in the list of class names applied to it.\n\t     - value (string) class name\n\t     **\n\t     = (boolean) `true` if the element has given class\n\t    \\*/\n\t    elproto.hasClass = function (value) {\n\t        var elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [];\n\t        return !!~curClasses.indexOf(value);\n\t    };\n\t    /*\\\n\t     * Element.toggleClass\n\t     [ method ]\n\t     **\n\t     * Add or remove one or more classes from the element, depending on either\n\t     * the class’s presence or the value of the `flag` argument.\n\t     - value (string) class name or space separated list of class names\n\t     - flag (boolean) value to determine whether the class should be added or removed\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.toggleClass = function (value, flag) {\n\t        if (flag != null) {\n\t            if (flag) {\n\t                return this.addClass(value);\n\t            } else {\n\t                return this.removeClass(value);\n\t            }\n\t        }\n\t        var classes = (value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        j = 0;\n\t        while (clazz = classes[j++]) {\n\t            pos = curClasses.indexOf(clazz);\n\t            if (~pos) {\n\t                curClasses.splice(pos, 1);\n\t            } else {\n\t                curClasses.push(clazz);\n\t            }\n\t        }\n\t\n\t        finalValue = curClasses.join(\" \");\n\t        if (className != finalValue) {\n\t            elem.className.baseVal = finalValue;\n\t        }\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var operators = {\n\t            \"+\": function (x, y) {\n\t                    return x + y;\n\t                },\n\t            \"-\": function (x, y) {\n\t                    return x - y;\n\t                },\n\t            \"/\": function (x, y) {\n\t                    return x / y;\n\t                },\n\t            \"*\": function (x, y) {\n\t                    return x * y;\n\t                }\n\t        },\n\t        Str = String,\n\t        reUnit = /[a-z]+$/i,\n\t        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr\", function (val) {\n\t        var plus = Str(val).match(reAddon);\n\t        if (plus) {\n\t            var evnt = eve.nt(),\n\t                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n\t                a = this.attr(name),\n\t                atr = {};\n\t            eve.stop();\n\t            var unit = plus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[plus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                val = op(parseFloat(a), +plus[2]);\n\t            } else {\n\t                a = this.asPX(name);\n\t                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n\t            }\n\t            if (isNaN(a) || isNaN(val)) {\n\t                return;\n\t            }\n\t            atr[name] = val;\n\t            this.attr(atr);\n\t        }\n\t    })(-10);\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this,\n\t            bplus = Str(b).match(reAddon);\n\t        if (bplus) {\n\t            eve.stop();\n\t            var unit = bplus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[bplus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                return {\n\t                    from: parseFloat(a),\n\t                    to: op(parseFloat(a), +bplus[2]),\n\t                    f: getUnit(aUnit)\n\t                };\n\t            } else {\n\t                a = this.asPX(name);\n\t                return {\n\t                    from: a,\n\t                    to: op(a, this.asPX(name, bplus[2] + unit)),\n\t                    f: getNumber\n\t                };\n\t            }\n\t        }\n\t    })(-10);\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var proto = Paper.prototype,\n\t        is = Snap.is;\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - rx (number) #optional horizontal radius for rounded corners, default is 0\n\t     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n\t     = (object) the `rect` element\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    proto.rect = function (x, y, w, h, rx, ry) {\n\t        var attr;\n\t        if (ry == null) {\n\t            ry = rx;\n\t        }\n\t        if (is(x, \"object\") && x == \"[object Object]\") {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                width: w,\n\t                height: h\n\t            };\n\t            if (rx != null) {\n\t                attr.rx = rx;\n\t                attr.ry = ry;\n\t            }\n\t        }\n\t        return this.el(\"rect\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) the `circle` element\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    proto.circle = function (cx, cy, r) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr = {\n\t                cx: cx,\n\t                cy: cy,\n\t                r: r\n\t            };\n\t        }\n\t        return this.el(\"circle\", attr);\n\t    };\n\t\n\t    var preload = (function () {\n\t        function onerror() {\n\t            this.parentNode.removeChild(this);\n\t        }\n\t        return function (src, f) {\n\t            var img = glob.doc.createElement(\"img\"),\n\t                body = glob.doc.body;\n\t            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t            img.onload = function () {\n\t                f.call(img);\n\t                img.onload = img.onerror = null;\n\t                body.removeChild(img);\n\t            };\n\t            img.onerror = onerror;\n\t            body.appendChild(img);\n\t            img.src = src;\n\t        };\n\t    }());\n\t\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Places an image on the surface\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x offset position\n\t     - y (number) y offset position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) the `image` element\n\t     * or\n\t     = (object) Snap element object with type `image`\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    proto.image = function (src, x, y, width, height) {\n\t        var el = this.el(\"image\");\n\t        if (is(src, \"object\") && \"src\" in src) {\n\t            el.attr(src);\n\t        } else if (src != null) {\n\t            var set = {\n\t                \"xlink:href\": src,\n\t                preserveAspectRatio: \"none\"\n\t            };\n\t            if (x != null && y != null) {\n\t                set.x = x;\n\t                set.y = y;\n\t            }\n\t            if (width != null && height != null) {\n\t                set.width = width;\n\t                set.height = height;\n\t            } else {\n\t                preload(src, function () {\n\t                    Snap._.$(el.node, {\n\t                        width: this.offsetWidth,\n\t                        height: this.offsetHeight\n\t                    });\n\t                });\n\t            }\n\t            Snap._.$(el.node, set);\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) the `ellipse` element\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    proto.ellipse = function (cx, cy, rx, ry) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr ={\n\t                cx: cx,\n\t                cy: cy,\n\t                rx: rx,\n\t                ry: ry\n\t            };\n\t        }\n\t        return this.el(\"ellipse\", attr);\n\t    };\n\t    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a `<path>` element using the given string as the path's definition\n\t     - pathString (string) #optional path string in SVG format\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n\t     | \"M10,20L30,40\"\n\t     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n\t     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t    \\*/\n\t    proto.path = function (d) {\n\t        var attr;\n\t        if (is(d, \"object\") && !is(d, \"array\")) {\n\t            attr = d;\n\t        } else if (d) {\n\t            attr = {d: d};\n\t        }\n\t        return this.el(\"path\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.g\n\t     [ method ]\n\t     **\n\t     * Creates a group element\n\t     **\n\t     - varargs (…) #optional elements to nest within the group\n\t     = (object) the `g` element\n\t     **\n\t     > Usage\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g(c2, c1); // note that the order of elements is different\n\t     * or\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g();\n\t     | g.add(c2, c1);\n\t    \\*/\n\t    /*\\\n\t     * Paper.group\n\t     [ method ]\n\t     **\n\t     * See @Paper.g\n\t    \\*/\n\t    proto.group = proto.g = function (first) {\n\t        var attr,\n\t            el = this.el(\"g\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.svg\n\t     [ method ]\n\t     **\n\t     * Creates a nested SVG element.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `svg` element\n\t     **\n\t    \\*/\n\t    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n\t        var attrs = {};\n\t        if (is(x, \"object\") && y == null) {\n\t            attrs = x;\n\t        } else {\n\t            if (x != null) {\n\t                attrs.x = x;\n\t            }\n\t            if (y != null) {\n\t                attrs.y = y;\n\t            }\n\t            if (width != null) {\n\t                attrs.width = width;\n\t            }\n\t            if (height != null) {\n\t                attrs.height = height;\n\t            }\n\t            if (vbx != null && vby != null && vbw != null && vbh != null) {\n\t                attrs.viewBox = [vbx, vby, vbw, vbh];\n\t            }\n\t        }\n\t        return this.el(\"svg\", attrs);\n\t    };\n\t    /*\\\n\t     * Paper.mask\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n\t     **\n\t     = (object) the `mask` element\n\t     **\n\t    \\*/\n\t    proto.mask = function (first) {\n\t        var attr,\n\t            el = this.el(\"mask\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ptrn\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `pattern` element\n\t     **\n\t    \\*/\n\t    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n\t        if (is(x, \"object\")) {\n\t            var attr = x;\n\t        } else {\n\t            attr = {patternUnits: \"userSpaceOnUse\"};\n\t            if (x) {\n\t                attr.x = x;\n\t            }\n\t            if (y) {\n\t                attr.y = y;\n\t            }\n\t            if (width != null) {\n\t                attr.width = width;\n\t            }\n\t            if (height != null) {\n\t                attr.height = height;\n\t            }\n\t            if (vx != null && vy != null && vw != null && vh != null) {\n\t                attr.viewBox = [vx, vy, vw, vh];\n\t            } else {\n\t                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n\t            }\n\t        }\n\t        return this.el(\"pattern\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.use\n\t     [ method ]\n\t     **\n\t     * Creates a <use> element.\n\t     - id (string) @optional id of element to link\n\t     * or\n\t     - id (Element) @optional element to link\n\t     **\n\t     = (object) the `use` element\n\t     **\n\t    \\*/\n\t    proto.use = function (id) {\n\t        if (id != null) {\n\t            if (id instanceof Element) {\n\t                if (!id.attr(\"id\")) {\n\t                    id.attr({id: Snap._.id(id)});\n\t                }\n\t                id = id.attr(\"id\");\n\t            }\n\t            if (String(id).charAt() == \"#\") {\n\t                id = id.substring(1);\n\t            }\n\t            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n\t        } else {\n\t            return Element.prototype.use.call(this);\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.symbol\n\t     [ method ]\n\t     **\n\t     * Creates a <symbol> element.\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     = (object) the `symbol` element\n\t     **\n\t    \\*/\n\t    proto.symbol = function (vx, vy, vw, vh) {\n\t        var attr = {};\n\t        if (vx != null && vy != null && vw != null && vh != null) {\n\t            attr.viewBox = [vx, vy, vw, vh];\n\t        }\n\t\n\t        return this.el(\"symbol\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n\t     = (object) the `text` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.text(50, 50, \"Snap\");\n\t     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n\t     | // Text path usage\n\t     | t1.attr({textpath: \"M10,10L100,100\"});\n\t     | // or\n\t     | var pth = paper.path(\"M10,10L100,100\");\n\t     | t1.attr({textpath: pth});\n\t    \\*/\n\t    proto.text = function (x, y, text) {\n\t        var attr = {};\n\t        if (is(x, \"object\")) {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                text: text || \"\"\n\t            };\n\t        }\n\t        return this.el(\"text\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.line\n\t     [ method ]\n\t     **\n\t     * Draws a line\n\t     **\n\t     - x1 (number) x coordinate position of the start\n\t     - y1 (number) y coordinate position of the start\n\t     - x2 (number) x coordinate position of the end\n\t     - y2 (number) y coordinate position of the end\n\t     = (object) the `line` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.line(50, 50, 100, 100);\n\t    \\*/\n\t    proto.line = function (x1, y1, x2, y2) {\n\t        var attr = {};\n\t        if (is(x1, \"object\")) {\n\t            attr = x1;\n\t        } else if (x1 != null) {\n\t            attr = {\n\t                x1: x1,\n\t                x2: x2,\n\t                y1: y1,\n\t                y2: y2\n\t            };\n\t        }\n\t        return this.el(\"line\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polyline\n\t     [ method ]\n\t     **\n\t     * Draws a polyline\n\t     **\n\t     - points (array) array of points\n\t     * or\n\t     - varargs (…) points\n\t     = (object) the `polyline` element\n\t     **\n\t     > Usage\n\t     | var p1 = paper.polyline([10, 10, 100, 100]);\n\t     | var p2 = paper.polyline(10, 10, 100, 100);\n\t    \\*/\n\t    proto.polyline = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polyline\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polygon\n\t     [ method ]\n\t     **\n\t     * Draws a polygon. See @Paper.polyline\n\t    \\*/\n\t    proto.polygon = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polygon\", attr);\n\t    };\n\t    // gradients\n\t    (function () {\n\t        var $ = Snap._.$;\n\t        // gradients' helpers\n\t        /*\\\n\t         * Element.stops\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Returns array of gradient stops elements.\n\t         = (array) the stops array.\n\t        \\*/\n\t        function Gstops() {\n\t            return this.selectAll(\"stop\");\n\t        }\n\t        /*\\\n\t         * Element.addStop\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Adds another stop to the gradient.\n\t         - color (string) stops color\n\t         - offset (number) stops offset 0..100\n\t         = (object) gradient element\n\t        \\*/\n\t        function GaddStop(color, offset) {\n\t            var stop = $(\"stop\"),\n\t                attr = {\n\t                    offset: +offset + \"%\"\n\t                };\n\t            color = Snap.color(color);\n\t            attr[\"stop-color\"] = color.hex;\n\t            if (color.opacity < 1) {\n\t                attr[\"stop-opacity\"] = color.opacity;\n\t            }\n\t            $(stop, attr);\n\t            var stops = this.stops(),\n\t                inserted;\n\t            for (var i = 0; i < stops.length; i++) {\n\t                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\t                if (stopOffset > offset) {\n\t                    this.node.insertBefore(stop, stops[i].node);\n\t                    inserted = true;\n\t                    break;\n\t                }\n\t            }\n\t            if (!inserted) {\n\t                this.node.appendChild(stop);\n\t            }\n\t            return this;\n\t        }\n\t        function GgetBBox() {\n\t            if (this.type == \"linearGradient\") {\n\t                var x1 = $(this.node, \"x1\") || 0,\n\t                    x2 = $(this.node, \"x2\") || 1,\n\t                    y1 = $(this.node, \"y1\") || 0,\n\t                    y2 = $(this.node, \"y2\") || 0;\n\t                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n\t            } else {\n\t                var cx = this.node.cx || .5,\n\t                    cy = this.node.cy || .5,\n\t                    r = this.node.r || 0;\n\t                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n\t            }\n\t        }\n\t        /*\\\n\t         * Element.setStops\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n\t         - str (string) gradient descriptor part after `()`.\n\t         = (object) gradient element\n\t         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n\t         | g.setStops(\"#fff-#000-#f00-#fc0\");\n\t        \\*/\n\t        function GsetStops(str) {\n\t            var grad = str,\n\t                stops = this.stops();\n\t            if (typeof str == \"string\") {\n\t                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n\t            }\n\t            if (!Snap.is(grad, \"array\")) {\n\t                return;\n\t            }\n\t            for (var i = 0; i < stops.length; i++) {\n\t                if (grad[i]) {\n\t                    var color = Snap.color(grad[i].color),\n\t                        attr = {\"offset\": grad[i].offset + \"%\"};\n\t                    attr[\"stop-color\"] = color.hex;\n\t                    if (color.opacity < 1) {\n\t                        attr[\"stop-opacity\"] = color.opacity;\n\t                    }\n\t                    stops[i].attr(attr);\n\t                } else {\n\t                    stops[i].remove();\n\t                }\n\t            }\n\t            for (i = stops.length; i < grad.length; i++) {\n\t                this.addStop(grad[i].color, grad[i].offset);\n\t            }\n\t            return this;\n\t        }\n\t        function gradient(defs, str) {\n\t            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n\t                el;\n\t            if (!grad) {\n\t                return null;\n\t            }\n\t            grad.params.unshift(defs);\n\t            if (grad.type.toLowerCase() == \"l\") {\n\t                el = gradientLinear.apply(0, grad.params);\n\t            } else {\n\t                el = gradientRadial.apply(0, grad.params);\n\t            }\n\t            if (grad.type != grad.type.toLowerCase()) {\n\t                $(el.node, {\n\t                    gradientUnits: \"userSpaceOnUse\"\n\t                });\n\t            }\n\t            var stops = grad.stops,\n\t                len = stops.length;\n\t            for (var i = 0; i < len; i++) {\n\t                var stop = stops[i];\n\t                el.addStop(stop.color, stop.offset);\n\t            }\n\t            return el;\n\t        }\n\t        function gradientLinear(defs, x1, y1, x2, y2) {\n\t            var el = Snap._.make(\"linearGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            el.setStops = GsetStops;\n\t            if (x1 != null) {\n\t                $(el.node, {\n\t                    x1: x1,\n\t                    y1: y1,\n\t                    x2: x2,\n\t                    y2: y2\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        function gradientRadial(defs, cx, cy, r, fx, fy) {\n\t            var el = Snap._.make(\"radialGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            if (cx != null) {\n\t                $(el.node, {\n\t                    cx: cx,\n\t                    cy: cy,\n\t                    r: r\n\t                });\n\t            }\n\t            if (fx != null && fy != null) {\n\t                $(el.node, {\n\t                    fx: fx,\n\t                    fy: fy\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        /*\\\n\t         * Paper.gradient\n\t         [ method ]\n\t         **\n\t         * Creates a gradient element\n\t         **\n\t         - gradient (string) gradient descriptor\n\t         > Gradient Descriptor\n\t         * The gradient descriptor is an expression formatted as\n\t         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n\t         * either linear or radial.  The uppercase `L` or `R` letters\n\t         * indicate absolute coordinates offset from the SVG surface.\n\t         * Lowercase `l` or `r` letters indicate coordinates\n\t         * calculated relative to the element to which the gradient is\n\t         * applied.  Coordinates specify a linear gradient vector as\n\t         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n\t         * `r` and optional `fx`, `fy` specifying a focal point away\n\t         * from the center of the circle. Specify `<colors>` as a list\n\t         * of dash-separated CSS color values.  Each color may be\n\t         * followed by a custom offset value, separated with a colon\n\t         * character.\n\t         > Examples\n\t         * Linear gradient, relative from top-left corner to bottom-right\n\t         * corner, from black through red to white:\n\t         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n\t         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n\t         * through red at 25% to white:\n\t         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n\t         * Radial gradient, relative from the center of the element with radius\n\t         * half the width, from black to white:\n\t         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n\t         * To apply the gradient:\n\t         | paper.circle(50, 50, 40).attr({\n\t         |     fill: g\n\t         | });\n\t         = (object) the `gradient` element\n\t        \\*/\n\t        proto.gradient = function (str) {\n\t            return gradient(this.defs, str);\n\t        };\n\t        proto.gradientLinear = function (x1, y1, x2, y2) {\n\t            return gradientLinear(this.defs, x1, y1, x2, y2);\n\t        };\n\t        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n\t            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n\t        };\n\t        /*\\\n\t         * Paper.toString\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper\n\t         = (string) SVG code for the @Paper\n\t        \\*/\n\t        proto.toString = function () {\n\t            var doc = this.node.ownerDocument,\n\t                f = doc.createDocumentFragment(),\n\t                d = doc.createElement(\"div\"),\n\t                svg = this.node.cloneNode(true),\n\t                res;\n\t            f.appendChild(d);\n\t            d.appendChild(svg);\n\t            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n\t            res = d.innerHTML;\n\t            f.removeChild(f.firstChild);\n\t            return res;\n\t        };\n\t        /*\\\n\t         * Paper.toDataURL\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper as Data URI string.\n\t         = (string) Data URI string\n\t        \\*/\n\t        proto.toDataURL = function () {\n\t            if (window && window.btoa) {\n\t                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n\t            }\n\t        };\n\t        /*\\\n\t         * Paper.clear\n\t         [ method ]\n\t         **\n\t         * Removes all child nodes of the paper, except <defs>.\n\t        \\*/\n\t        proto.clear = function () {\n\t            var node = this.node.firstChild,\n\t                next;\n\t            while (node) {\n\t                next = node.nextSibling;\n\t                if (node.tagName != \"defs\") {\n\t                    node.parentNode.removeChild(node);\n\t                } else {\n\t                    proto.clear.call({node: node});\n\t                }\n\t                node = next;\n\t            }\n\t        };\n\t    }());\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        clone = Snap._.clone,\n\t        has = \"hasOwnProperty\",\n\t        p2s = /,?([a-z]),?/gi,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        PI = math.PI,\n\t        mmin = math.min,\n\t        mmax = math.max,\n\t        pow = math.pow,\n\t        abs = math.abs;\n\t    function paths(ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    }\n\t    function box(x, y, width, height) {\n\t        if (x == null) {\n\t            x = y = width = height = 0;\n\t        }\n\t        if (y == null) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            w: width,\n\t            height: height,\n\t            h: height,\n\t            x2: x + width,\n\t            y2: y + height,\n\t            cx: x + width / 2,\n\t            cy: y + height / 2,\n\t            r1: math.min(width, height) / 2,\n\t            r2: math.max(width, height) / 2,\n\t            r0: math.sqrt(width * width + height * height) / 2,\n\t            path: rectPath(x, y, width, height),\n\t            vb: [x, y, width, height].join(\" \")\n\t        };\n\t    }\n\t    function toString() {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    }\n\t    function pathClone(pathArray) {\n\t        var res = clone(pathArray);\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n\t                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    }\n\t    function getLengthFactory(istotal, subpath) {\n\t        function O(val) {\n\t            return +(+val).toFixed(3);\n\t        }\n\t        return Snap._.cacher(function (path, length, onlystart) {\n\t            if (path instanceof Element) {\n\t                path = path.attr(\"d\");\n\t            }\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\n\t                                \"C\" + O(point.start.x),\n\t                                O(point.start.y),\n\t                                O(point.m.x),\n\t                                O(point.m.y),\n\t                                O(point.x),\n\t                                O(point.y)\n\t                            ];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\n\t                                \"M\" + O(point.x),\n\t                                O(point.y) + \"C\" + O(point.n.x),\n\t                                O(point.n.y),\n\t                                O(point.end.x),\n\t                                O(point.end.y),\n\t                                O(p[5]),\n\t                                O(p[6])\n\t                            ].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return point;\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            return point;\n\t        }, null, Snap._.clone);\n\t    }\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n\t        // (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    }\n\t    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!Snap.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return box(\n\t            bbox.min.x,\n\t            bbox.min.y,\n\t            bbox.max.x - bbox.min.x,\n\t            bbox.max.y - bbox.min.y\n\t        );\n\t    }\n\t    function isPointInsideBBox(bbox, x, y) {\n\t        return  x >= bbox.x &&\n\t                x <= bbox.x + bbox.width &&\n\t                y >= bbox.y &&\n\t                y <= bbox.y + bbox.height;\n\t    }\n\t    function isBBoxIntersect(bbox1, bbox2) {\n\t        bbox1 = box(bbox1);\n\t        bbox2 = box(bbox2);\n\t        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n\t                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n\t                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    }\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\t\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = bezierBBox(bez1),\n\t            bbox2 = bezierBBox(bez2);\n\t        if (!isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = ~~(l1 / 8),\n\t            n2 = ~~(l2 / 8),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: t1,\n\t                                t2: t2\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function pathIntersection(path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    }\n\t    function pathIntersectionNumber(path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    }\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = path2curve(path1);\n\t        path2 = path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function isPointInsidePath(path, x, y) {\n\t        var bbox = pathBBox(path);\n\t        return isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    }\n\t    function pathBBox(path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return box();\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X.concat(dim.min.x, dim.max.x);\n\t                Y = Y.concat(dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin.apply(0, X),\n\t            ymin = mmin.apply(0, Y),\n\t            xmax = mmax.apply(0, X),\n\t            ymax = mmax.apply(0, Y),\n\t            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    }\n\t    function rectPath(x, y, w, h, r) {\n\t        if (r) {\n\t            return [\n\t                [\"M\", +x + +r, y],\n\t                [\"l\", w - r * 2, 0],\n\t                [\"a\", r, r, 0, 0, 1, r, r],\n\t                [\"l\", 0, h - r * 2],\n\t                [\"a\", r, r, 0, 0, 1, -r, r],\n\t                [\"l\", r * 2 - w, 0],\n\t                [\"a\", r, r, 0, 0, 1, -r, -r],\n\t                [\"l\", 0, r * 2 - h],\n\t                [\"a\", r, r, 0, 0, 1, r, -r],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function ellipsePath(x, y, rx, ry, a) {\n\t        if (a == null && ry == null) {\n\t            ry = rx;\n\t        }\n\t        x = +x;\n\t        y = +y;\n\t        rx = +rx;\n\t        ry = +ry;\n\t        if (a != null) {\n\t            var rad = Math.PI / 180,\n\t                x1 = x + rx * Math.cos(-ry * rad),\n\t                x2 = x + rx * Math.cos(-a * rad),\n\t                y1 = y + rx * Math.sin(-ry * rad),\n\t                y2 = y + rx * Math.sin(-a * rad),\n\t                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n\t        } else {\n\t            res = [\n\t                [\"M\", x, y],\n\t                [\"m\", 0, -ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    var unit2px = Snap._unit2px,\n\t        getPath = {\n\t        path: function (el) {\n\t            return el.attr(\"path\");\n\t        },\n\t        circle: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx, attr.cy, attr.r);\n\t        },\n\t        ellipse: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n\t        },\n\t        rect: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n\t        },\n\t        image: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n\t        },\n\t        line: function (el) {\n\t            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n\t        },\n\t        polyline: function (el) {\n\t            return \"M\" + el.attr(\"points\");\n\t        },\n\t        polygon: function (el) {\n\t            return \"M\" + el.attr(\"points\") + \"z\";\n\t        },\n\t        deflt: function (el) {\n\t            var bbox = el.node.getBBox();\n\t            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t        }\n\t    };\n\t    function pathToRelative(pathArray) {\n\t        var pth = paths(pathArray),\n\t            lowerCase = String.prototype.toLowerCase;\n\t        if (pth.rel) {\n\t            return pathClone(pth.rel);\n\t        }\n\t        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = pathArray[0][1];\n\t            y = pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res.push([\"M\", x, y]);\n\t        }\n\t        for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t            var r = res[i] = [],\n\t                pa = pathArray[i];\n\t            if (pa[0] != lowerCase.call(pa[0])) {\n\t                r[0] = lowerCase.call(pa[0]);\n\t                switch (r[0]) {\n\t                    case \"a\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +(pa[6] - x).toFixed(3);\n\t                        r[7] = +(pa[7] - y).toFixed(3);\n\t                        break;\n\t                    case \"v\":\n\t                        r[1] = +(pa[1] - y).toFixed(3);\n\t                        break;\n\t                    case \"m\":\n\t                        mx = pa[1];\n\t                        my = pa[2];\n\t                    default:\n\t                        for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n\t                        }\n\t                }\n\t            } else {\n\t                r = res[i] = [];\n\t                if (pa[0] == \"m\") {\n\t                    mx = pa[1] + x;\n\t                    my = pa[2] + y;\n\t                }\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    res[i][k] = pa[k];\n\t                }\n\t            }\n\t            var len = res[i].length;\n\t            switch (res[i][0]) {\n\t                case \"z\":\n\t                    x = mx;\n\t                    y = my;\n\t                    break;\n\t                case \"h\":\n\t                    x += +res[i][len - 1];\n\t                    break;\n\t                case \"v\":\n\t                    y += +res[i][len - 1];\n\t                    break;\n\t                default:\n\t                    x += +res[i][len - 2];\n\t                    y += +res[i][len - 1];\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.rel = pathClone(res);\n\t        return res;\n\t    }\n\t    function pathToAbsolute(pathArray) {\n\t        var pth = paths(pathArray);\n\t        if (pth.abs) {\n\t            return pathClone(pth.abs);\n\t        }\n\t        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        if (!pathArray || !pathArray.length) {\n\t            return [[\"M\", 0, 0]];\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0,\n\t            pa0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = +pathArray[0][1];\n\t            y = +pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res[0] = [\"M\", x, y];\n\t        }\n\t        var crz = pathArray.length == 3 &&\n\t            pathArray[0][0] == \"M\" &&\n\t            pathArray[1][0].toUpperCase() == \"R\" &&\n\t            pathArray[2][0].toUpperCase() == \"Z\";\n\t        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t            res.push(r = []);\n\t            pa = pathArray[i];\n\t            pa0 = pa[0];\n\t            if (pa0 != pa0.toUpperCase()) {\n\t                r[0] = pa0.toUpperCase();\n\t                switch (r[0]) {\n\t                    case \"A\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +pa[6] + x;\n\t                        r[7] = +pa[7] + y;\n\t                        break;\n\t                    case \"V\":\n\t                        r[1] = +pa[1] + y;\n\t                        break;\n\t                    case \"H\":\n\t                        r[1] = +pa[1] + x;\n\t                        break;\n\t                    case \"R\":\n\t                        var dots = [x, y].concat(pa.slice(1));\n\t                        for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                            dots[j] = +dots[j] + x;\n\t                            dots[++j] = +dots[j] + y;\n\t                        }\n\t                        res.pop();\n\t                        res = res.concat(catmullRom2bezier(dots, crz));\n\t                        break;\n\t                    case \"O\":\n\t                        res.pop();\n\t                        dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                        dots.push(dots[0]);\n\t                        res = res.concat(dots);\n\t                        break;\n\t                    case \"U\":\n\t                        res.pop();\n\t                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t                        break;\n\t                    case \"M\":\n\t                        mx = +pa[1] + x;\n\t                        my = +pa[2] + y;\n\t                    default:\n\t                        for (j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +pa[j] + (j % 2 ? x : y);\n\t                        }\n\t                }\n\t            } else if (pa0 == \"R\") {\n\t                dots = [x, y].concat(pa.slice(1));\n\t                res.pop();\n\t                res = res.concat(catmullRom2bezier(dots, crz));\n\t                r = [\"R\"].concat(pa.slice(-2));\n\t            } else if (pa0 == \"O\") {\n\t                res.pop();\n\t                dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                dots.push(dots[0]);\n\t                res = res.concat(dots);\n\t            } else if (pa0 == \"U\") {\n\t                res.pop();\n\t                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t            } else {\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    r[k] = pa[k];\n\t                }\n\t            }\n\t            pa0 = pa0.toUpperCase();\n\t            if (pa0 != \"O\") {\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = +mx;\n\t                        y = +my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.abs = pathClone(res);\n\t        return res;\n\t    }\n\t    function l2c(x1, y1, x2, y2) {\n\t        return [x1, y1, x2, y2, x2, y2];\n\t    }\n\t    function q2c(x1, y1, ax, ay, x2, y2) {\n\t        var _13 = 1 / 3,\n\t            _23 = 2 / 3;\n\t        return [\n\t                _13 * x1 + _23 * ax,\n\t                _13 * y1 + _23 * ay,\n\t                _13 * x2 + _23 * ax,\n\t                _13 * y2 + _23 * ay,\n\t                x2,\n\t                y2\n\t            ];\n\t    }\n\t    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t        // for more information of where this math came from visit:\n\t        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t        var _120 = PI * 120 / 180,\n\t            rad = PI / 180 * (+angle || 0),\n\t            res = [],\n\t            xy,\n\t            rotate = Snap._.cacher(function (x, y, rad) {\n\t                var X = x * math.cos(rad) - y * math.sin(rad),\n\t                    Y = x * math.sin(rad) + y * math.cos(rad);\n\t                return {x: X, y: Y};\n\t            });\n\t        if (!rx || !ry) {\n\t            return [x1, y1, x2, y2, x2, y2];\n\t        }\n\t        if (!recursive) {\n\t            xy = rotate(x1, y1, -rad);\n\t            x1 = xy.x;\n\t            y1 = xy.y;\n\t            xy = rotate(x2, y2, -rad);\n\t            x2 = xy.x;\n\t            y2 = xy.y;\n\t            var cos = math.cos(PI / 180 * angle),\n\t                sin = math.sin(PI / 180 * angle),\n\t                x = (x1 - x2) / 2,\n\t                y = (y1 - y2) / 2;\n\t            var h = x * x / (rx * rx) + y * y / (ry * ry);\n\t            if (h > 1) {\n\t                h = math.sqrt(h);\n\t                rx = h * rx;\n\t                ry = h * ry;\n\t            }\n\t            var rx2 = rx * rx,\n\t                ry2 = ry * ry,\n\t                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t            f1 = x1 < cx ? PI - f1 : f1;\n\t            f2 = x2 < cx ? PI - f2 : f2;\n\t            f1 < 0 && (f1 = PI * 2 + f1);\n\t            f2 < 0 && (f2 = PI * 2 + f2);\n\t            if (sweep_flag && f1 > f2) {\n\t                f1 = f1 - PI * 2;\n\t            }\n\t            if (!sweep_flag && f2 > f1) {\n\t                f2 = f2 - PI * 2;\n\t            }\n\t        } else {\n\t            f1 = recursive[0];\n\t            f2 = recursive[1];\n\t            cx = recursive[2];\n\t            cy = recursive[3];\n\t        }\n\t        var df = f2 - f1;\n\t        if (abs(df) > _120) {\n\t            var f2old = f2,\n\t                x2old = x2,\n\t                y2old = y2;\n\t            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t            x2 = cx + rx * math.cos(f2);\n\t            y2 = cy + ry * math.sin(f2);\n\t            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t        }\n\t        df = f2 - f1;\n\t        var c1 = math.cos(f1),\n\t            s1 = math.sin(f1),\n\t            c2 = math.cos(f2),\n\t            s2 = math.sin(f2),\n\t            t = math.tan(df / 4),\n\t            hx = 4 / 3 * rx * t,\n\t            hy = 4 / 3 * ry * t,\n\t            m1 = [x1, y1],\n\t            m2 = [x1 + hx * s1, y1 - hy * c1],\n\t            m3 = [x2 + hx * s2, y2 - hy * c2],\n\t            m4 = [x2, y2];\n\t        m2[0] = 2 * m1[0] - m2[0];\n\t        m2[1] = 2 * m1[1] - m2[1];\n\t        if (recursive) {\n\t            return [m2, m3, m4].concat(res);\n\t        } else {\n\t            res = [m2, m3, m4].concat(res).join().split(\",\");\n\t            var newres = [];\n\t            for (var i = 0, ii = res.length; i < ii; i++) {\n\t                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t            }\n\t            return newres;\n\t        }\n\t    }\n\t    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t;\n\t        return {\n\t            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t        };\n\t    }\n\t\n\t    // Returns bounding box of cubic bezier curve.\n\t    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t    // Original version: NISHIO Hirokazu\n\t    // Modifications: https://github.com/timo22345\n\t    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t        var tvalues = [],\n\t            bounds = [[], []],\n\t            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t        for (var i = 0; i < 2; ++i) {\n\t            if (i == 0) {\n\t                b = 6 * x0 - 12 * x1 + 6 * x2;\n\t                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t                c = 3 * x1 - 3 * x0;\n\t            } else {\n\t                b = 6 * y0 - 12 * y1 + 6 * y2;\n\t                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t                c = 3 * y1 - 3 * y0;\n\t            }\n\t            if (abs(a) < 1e-12) {\n\t                if (abs(b) < 1e-12) {\n\t                    continue;\n\t                }\n\t                t = -c / b;\n\t                if (0 < t && t < 1) {\n\t                    tvalues.push(t);\n\t                }\n\t                continue;\n\t            }\n\t            b2ac = b * b - 4 * c * a;\n\t            sqrtb2ac = math.sqrt(b2ac);\n\t            if (b2ac < 0) {\n\t                continue;\n\t            }\n\t            t1 = (-b + sqrtb2ac) / (2 * a);\n\t            if (0 < t1 && t1 < 1) {\n\t                tvalues.push(t1);\n\t            }\n\t            t2 = (-b - sqrtb2ac) / (2 * a);\n\t            if (0 < t2 && t2 < 1) {\n\t                tvalues.push(t2);\n\t            }\n\t        }\n\t\n\t        var x, y, j = tvalues.length,\n\t            jlen = j,\n\t            mt;\n\t        while (j--) {\n\t            t = tvalues[j];\n\t            mt = 1 - t;\n\t            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n\t            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n\t        }\n\t\n\t        bounds[0][jlen] = x0;\n\t        bounds[1][jlen] = y0;\n\t        bounds[0][jlen + 1] = x3;\n\t        bounds[1][jlen + 1] = y3;\n\t        bounds[0].length = bounds[1].length = jlen + 2;\n\t\n\t\n\t        return {\n\t          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n\t          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n\t        };\n\t    }\n\t\n\t    function path2curve(path, path2) {\n\t        var pth = !path2 && paths(path);\n\t        if (!path2 && pth.curve) {\n\t            return pathClone(pth.curve);\n\t        }\n\t        var p = pathToAbsolute(path),\n\t            p2 = path2 && pathToAbsolute(path2),\n\t            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            processPath = function (path, d, pcom) {\n\t                var nx, ny;\n\t                if (!path) {\n\t                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                }\n\t                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n\t                switch (path[0]) {\n\t                    case \"M\":\n\t                        d.X = path[1];\n\t                        d.Y = path[2];\n\t                        break;\n\t                    case \"A\":\n\t                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t                        break;\n\t                    case \"S\":\n\t                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                            nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                        }\n\t                        else {                            // or some else or nothing\n\t                            nx = d.x;\n\t                            ny = d.y;\n\t                        }\n\t                        path = [\"C\", nx, ny].concat(path.slice(1));\n\t                        break;\n\t                    case \"T\":\n\t                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                        }\n\t                        else {                            // or something else or nothing\n\t                            d.qx = d.x;\n\t                            d.qy = d.y;\n\t                        }\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                        break;\n\t                    case \"Q\":\n\t                        d.qx = path[1];\n\t                        d.qy = path[2];\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                        break;\n\t                    case \"L\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n\t                        break;\n\t                    case \"H\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n\t                        break;\n\t                    case \"V\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n\t                        break;\n\t                    case \"Z\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n\t                        break;\n\t                }\n\t                return path;\n\t            },\n\t            fixArc = function (pp, i) {\n\t                if (pp[i].length > 7) {\n\t                    pp[i].shift();\n\t                    var pi = pp[i];\n\t                    while (pi.length) {\n\t                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\t                        p2 && (pcoms2[i] = \"A\"); // the same as above\n\t                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n\t                    }\n\t                    pp.splice(i, 1);\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            fixM = function (path1, path2, a1, a2, i) {\n\t                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                    a1.bx = 0;\n\t                    a1.by = 0;\n\t                    a1.x = path1[i][1];\n\t                    a1.y = path1[i][2];\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            pcoms1 = [], // path commands of original path p\n\t            pcoms2 = [], // path commands of original path p2\n\t            pfirst = \"\", // temporary holder for original path command\n\t            pcom = \"\"; // holder for previous path command of original path\n\t        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t            p[i] && (pfirst = p[i][0]); // save current path command\n\t\n\t            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t            {\n\t                pcoms1[i] = pfirst; // Save current path command\n\t                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n\t            }\n\t            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\t\n\t            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t            // which may produce multiple C:s\n\t            // so we have to make sure that C is also C in original path\n\t\n\t            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t            if (p2) { // the same procedures is done to p2\n\t                p2[i] && (pfirst = p2[i][0]);\n\t                if (pfirst != \"C\") {\n\t                    pcoms2[i] = pfirst;\n\t                    i && (pcom = pcoms2[i - 1]);\n\t                }\n\t                p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n\t                    pcoms2[i] = \"C\";\n\t                }\n\t\n\t                fixArc(p2, i);\n\t            }\n\t            fixM(p, p2, attrs, attrs2, i);\n\t            fixM(p2, p, attrs2, attrs, i);\n\t            var seg = p[i],\n\t                seg2 = p2 && p2[i],\n\t                seglen = seg.length,\n\t                seg2len = p2 && seg2.length;\n\t            attrs.x = seg[seglen - 2];\n\t            attrs.y = seg[seglen - 1];\n\t            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t            attrs2.x = p2 && seg2[seg2len - 2];\n\t            attrs2.y = p2 && seg2[seg2len - 1];\n\t        }\n\t        if (!p2) {\n\t            pth.curve = pathClone(p);\n\t        }\n\t        return p2 ? [p, p2] : p;\n\t    }\n\t    function mapPath(path, matrix) {\n\t        if (!matrix) {\n\t            return path;\n\t        }\n\t        var x, y, i, j, ii, jj, pathi;\n\t        path = path2curve(path);\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            pathi = path[i];\n\t            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                x = matrix.x(pathi[j], pathi[j + 1]);\n\t                y = matrix.y(pathi[j], pathi[j + 1]);\n\t                pathi[j] = x;\n\t                pathi[j + 1] = y;\n\t            }\n\t        }\n\t        return path;\n\t    }\n\t\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\t\n\t        return d;\n\t    }\n\t\n\t    // export\n\t    Snap.path = paths;\n\t\n\t    /*\\\n\t     * Snap.path.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the given path in pixels\n\t     **\n\t     - path (string) SVG path string\n\t     **\n\t     = (number) length\n\t    \\*/\n\t    Snap.path.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Snap.path.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns the coordinates of the point located at the given length along the given path\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    Snap.path.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Snap.path.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns the subpath of a given path between given start and end lengths\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    Snap.path.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the path in pixels (only works for `path` elements)\n\t     = (number) length\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\t    };\n\t    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n\t     **\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        return getPointAtLength(this.attr(\"d\"), length);\n\t    };\n\t    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n\t     **\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n\t    };\n\t    Snap._.box = box;\n\t    /*\\\n\t     * Snap.path.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds dot coordinates on the given cubic beziér curve at the given t\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point,\n\t     o     y: (number) y coordinate of the point,\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor,\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     },\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor,\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     },\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve,\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     },\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve,\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     },\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    Snap.path.findDotsAtSegment = findDotsAtSegment;\n\t    /*\\\n\t     * Snap.path.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given cubic beziér curve\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for beziér curve\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.bezierBBox = bezierBBox;\n\t    /*\\\n\t     * Snap.path.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding box\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point is inside\n\t    \\*/\n\t    Snap.path.isPointInsideBBox = isPointInsideBBox;\n\t    Snap.closest = function (x, y, X, Y) {\n\t        var r = 100,\n\t            b = box(x - r / 2, y - r / 2, r, r),\n\t            inside = [],\n\t            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n\t                return {\n\t                    x: X[i].x,\n\t                    y: X[i].y\n\t                };\n\t            } : function (i) {\n\t                return {\n\t                    x: X[i],\n\t                    y: Y[i]\n\t                };\n\t            },\n\t            found = 0;\n\t        while (r <= 1e6 && !found) {\n\t            for (var i = 0, ii = X.length; i < ii; i++) {\n\t                var xy = getter(i);\n\t                if (isPointInsideBBox(b, xy.x, xy.y)) {\n\t                    found++;\n\t                    inside.push(xy);\n\t                    break;\n\t                }\n\t            }\n\t            if (!found) {\n\t                r *= 2;\n\t                b = box(x - r / 2, y - r / 2, r, r)\n\t            }\n\t        }\n\t        if (r == 1e6) {\n\t            return;\n\t        }\n\t        var len = Infinity,\n\t            res;\n\t        for (i = 0, ii = inside.length; i < ii; i++) {\n\t            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\t            if (len > l) {\n\t                len = l;\n\t                inside[i].len = l;\n\t                res = inside[i];\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.path.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if bounding boxes intersect\n\t    \\*/\n\t    Snap.path.isBBoxIntersect = isBBoxIntersect;\n\t    /*\\\n\t     * Snap.path.intersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point,\n\t     o         y: (number) y coordinate of the point,\n\t     o         t1: (number) t value for segment of path1,\n\t     o         t2: (number) t value for segment of path2,\n\t     o         segment1: (number) order number for segment of path1,\n\t     o         segment2: (number) order number for segment of path2,\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    Snap.path.intersection = pathIntersection;\n\t    Snap.path.intersectionNumber = pathIntersectionNumber;\n\t    /*\\\n\t     * Snap.path.isPointInside\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     *\n\t     * Note: fill mode doesn’t affect the result of this method.\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) `true` if point is inside the path\n\t    \\*/\n\t    Snap.path.isPointInside = isPointInsidePath;\n\t    /*\\\n\t     * Snap.path.getBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given path\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.getBBox = pathBBox;\n\t    Snap.path.get = getPath;\n\t    /*\\\n\t     * Snap.path.toRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into relative values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toRelative = pathToRelative;\n\t    /*\\\n\t     * Snap.path.toAbsolute\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into absolute values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toAbsolute = pathToAbsolute;\n\t    /*\\\n\t     * Snap.path.toCubic\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic beziér curves\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments\n\t    \\*/\n\t    Snap.path.toCubic = path2curve;\n\t    /*\\\n\t     * Snap.path.map\n\t     [ method ]\n\t     **\n\t     * Transform the path string with the given matrix\n\t     - path (string) path string\n\t     - matrix (object) see @Matrix\n\t     = (string) transformed path string\n\t    \\*/\n\t    Snap.path.map = mapPath;\n\t    Snap.path.toString = toString;\n\t    Snap.path.clone = pathClone;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var mmax = Math.max,\n\t        mmin = Math.min;\n\t\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t\tthis.bindings = {};\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i]) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set\n\t     *\n\t     * If the function returns `false`, the loop stops running.\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.animate\n\t     [ method ]\n\t     **\n\t     * Animates each element in set in sync.\n\t     *\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     * or\n\t     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n\t     > Usage\n\t     | // animate all elements in set to radius 10\n\t     | set.animate({r: 10}, 500, mina.easein);\n\t     | // or\n\t     | // animate first element to radius 10, but second to radius 20 and in different time\n\t     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n\t     = (Element) the current element\n\t    \\*/\n\t    setproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Snap._.Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = easing.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var args = arguments;\n\t        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n\t            var each = true;\n\t        }\n\t        var begin,\n\t            handler = function () {\n\t                if (begin) {\n\t                    this.b = begin;\n\t                } else {\n\t                    begin = this.b;\n\t                }\n\t            },\n\t            cb = 0,\n\t            set = this,\n\t            callbacker = callback && function () {\n\t                if (++cb == set.length) {\n\t                    callback.call(this);\n\t                }\n\t            };\n\t        return this.forEach(function (el, i) {\n\t            eve.once(\"snap.animcreated.\" + el.id, handler);\n\t            if (each) {\n\t                args[i] && el.animate.apply(el, args[i]);\n\t            } else {\n\t                el.animate(attrs, ms, easing, callbacker);\n\t            }\n\t        });\n\t    };\n\t    /*\\\n\t     * Set.remove\n\t     [ method ]\n\t     **\n\t     * Removes all children of the set.\n\t     *\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.remove = function () {\n\t        while (this.length) {\n\t            this.pop().remove();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.bind\n\t     [ method ]\n\t     **\n\t     * Specifies how to handle a specific attribute when applied\n\t     * to a set.\n\t     *\n\t     **\n\t     - attr (string) attribute name\n\t     - callback (function) function to run\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     - eattr (string) attribute on the element to bind the attribute to\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.bind = function (attr, a, b) {\n\t        var data = {};\n\t        if (typeof a == \"function\") {\n\t            this.bindings[attr] = a;\n\t        } else {\n\t            var aname = b || attr;\n\t            this.bindings[attr] = function (v) {\n\t                data[aname] = v;\n\t                a.attr(data);\n\t            };\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.attr\n\t     [ method ]\n\t     **\n\t     * Equivalent of @Element.attr.\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.attr = function (value) {\n\t        var unbound = {};\n\t        for (var k in value) {\n\t            if (this.bindings[k]) {\n\t                this.bindings[k](value[k]);\n\t            } else {\n\t                unbound[k] = value[k];\n\t            }\n\t        }\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            this.items[i].attr(unbound);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes range of elements from the set\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found and removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    /*\\\n\t     * Set.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts set elements after given element.\n\t     **\n\t     - element (object) set will be inserted after this element\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.getBBox\n\t     [ method ]\n\t     **\n\t     * Union of all bboxes of the set. See @Element.getBBox.\n\t     = (object) bounding box descriptor. See @Element.getBBox.\n\t    \\*/\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin.apply(0, x);\n\t        y = mmin.apply(0, y);\n\t        x2 = mmax.apply(0, x2);\n\t        y2 = mmax.apply(0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y,\n\t            cx: x + (x2 - x) / 2,\n\t            cy: y + (y2 - y) / 2\n\t        };\n\t    };\n\t    /*\\\n\t     * Set.insertAfter\n\t     [ method ]\n\t     **\n\t     * Creates a clone of the set.\n\t     **\n\t     = (object) New Set object\n\t    \\*/\n\t    setproto.clone = function (s) {\n\t        s = new Set;\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Snap\\u2018s set\";\n\t    };\n\t    setproto.type = \"set\";\n\t    // export\n\t    /*\\\n\t     * Snap.Set\n\t     [ property ]\n\t     **\n\t     * Set constructor.\n\t    \\*/\n\t    Snap.Set = Set;\n\t    /*\\\n\t     * Snap.set\n\t     [ method ]\n\t     **\n\t     * Creates a set and fills it with list of arguments.\n\t     **\n\t     = (object) New Set object\n\t     | var r = paper.rect(0, 0, 10, 10),\n\t     |     s1 = Snap.set(), // empty set\n\t     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n\t    \\*/\n\t    Snap.set = function () {\n\t        var set = new Set;\n\t        if (arguments.length) {\n\t            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return set;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var names = {},\n\t        reUnit = /[%a-z]+$/i,\n\t        Str = String;\n\t    names.stroke = names.fill = \"colour\";\n\t    function getEmpty(item) {\n\t        var l = item[0];\n\t        switch (l.toLowerCase()) {\n\t            case \"t\": return [l, 0, 0];\n\t            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t            case \"r\": if (item.length == 4) {\n\t                return [l, 0, item[2], item[3]];\n\t            } else {\n\t                return [l, 0];\n\t            }\n\t            case \"s\": if (item.length == 5) {\n\t                return [l, 1, 1, item[3], item[4]];\n\t            } else if (item.length == 3) {\n\t                return [l, 1, 1];\n\t            } else {\n\t                return [l, 1];\n\t            }\n\t        }\n\t    }\n\t    function equaliseTransform(t1, t2, getBBox) {\n\t        t1 = t1 || new Snap.Matrix;\n\t        t2 = t2 || new Snap.Matrix;\n\t        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n\t        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n\t        var maxlength = Math.max(t1.length, t2.length),\n\t            from = [],\n\t            to = [],\n\t            i = 0, j, jj,\n\t            tt1, tt2;\n\t        for (; i < maxlength; i++) {\n\t            tt1 = t1[i] || getEmpty(t2[i]);\n\t            tt2 = t2[i] || getEmpty(tt1);\n\t            if (tt1[0] != tt2[0] ||\n\t                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n\t                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n\t                ) {\n\t                    t1 = Snap._.transform2matrix(t1, getBBox());\n\t                    t2 = Snap._.transform2matrix(t2, getBBox());\n\t                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n\t                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n\t                    break;\n\t            }\n\t            from[i] = [];\n\t            to[i] = [];\n\t            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n\t                j in tt1 && (from[i][j] = tt1[j]);\n\t                j in tt2 && (to[i][j] = tt2[j]);\n\t            }\n\t        }\n\t        return {\n\t            from: path2array(from),\n\t            to: path2array(to),\n\t            f: getPath(from)\n\t        };\n\t    }\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    function getViewBox(val) {\n\t        return val.join(\" \");\n\t    }\n\t    function getColour(clr) {\n\t        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n\t    }\n\t    function getPath(path) {\n\t        var k = 0, i, ii, j, jj, out, a, b = [];\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            out = \"[\";\n\t            a = ['\"' + path[i][0] + '\"'];\n\t            for (j = 1, jj = path[i].length; j < jj; j++) {\n\t                a[j] = \"val[\" + k++ + \"]\";\n\t            }\n\t            out += a + \"]\";\n\t            b[i] = out;\n\t        }\n\t        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n\t    }\n\t    function path2array(path) {\n\t        var out = [];\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            for (var j = 1, jj = path[i].length; j < jj; j++) {\n\t                out.push(path[i][j]);\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    function isNumeric(obj) {\n\t        return isFinite(obj);\n\t    }\n\t    function arrayEqual(arr1, arr2) {\n\t        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n\t            return false;\n\t        }\n\t        return arr1.toString() == arr2.toString();\n\t    }\n\t    Element.prototype.equal = function (name, b) {\n\t        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n\t    };\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this;\n\t        if (names[name] == \"colour\") {\n\t            A = Snap.color(a);\n\t            B = Snap.color(b);\n\t            return {\n\t                from: [A.r, A.g, A.b, A.opacity],\n\t                to: [B.r, B.g, B.b, B.opacity],\n\t                f: getColour\n\t            };\n\t        }\n\t        if (name == \"viewBox\") {\n\t            A = this.attr(name).vb.split(\" \").map(Number);\n\t            B = b.split(\" \").map(Number);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: getViewBox\n\t            };\n\t        }\n\t        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n\t            if (typeof b == \"string\") {\n\t                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n\t            }\n\t            a = this.matrix;\n\t            if (!Snap._.rgTransform.test(b)) {\n\t                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n\t            } else {\n\t                b = Snap._.transform2matrix(b, this.getBBox());\n\t            }\n\t            return equaliseTransform(a, b, function () {\n\t                return el.getBBox(1);\n\t            });\n\t        }\n\t        if (name == \"d\" || name == \"path\") {\n\t            A = Snap.path.toCubic(a, b);\n\t            return {\n\t                from: path2array(A[0]),\n\t                to: path2array(A[1]),\n\t                f: getPath(A[0])\n\t            };\n\t        }\n\t        if (name == \"points\") {\n\t            A = Str(a).split(Snap._.separator);\n\t            B = Str(b).split(Snap._.separator);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: function (val) { return val; }\n\t            };\n\t        }\n\t        if (isNumeric(a) && isNumeric(b)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getNumber\n\t            };\n\t        }\n\t        var aUnit = a.match(reUnit),\n\t            bUnit = Str(b).match(reUnit);\n\t        if (aUnit && arrayEqual(aUnit, bUnit)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getUnit(aUnit)\n\t            };\n\t        } else {\n\t            return {\n\t                from: this.asPX(name),\n\t                to: this.asPX(name, b),\n\t                f: getNumber\n\t            };\n\t        }\n\t    });\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t    has = \"hasOwnProperty\",\n\t    supportsTouch = \"createTouch\" in glob.doc,\n\t    events = [\n\t        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n\t        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n\t        \"touchcancel\"\n\t    ],\n\t    touchMap = {\n\t        mousedown: \"touchstart\",\n\t        mousemove: \"touchmove\",\n\t        mouseup: \"touchend\"\n\t    },\n\t    getScroll = function (xy, el) {\n\t        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n\t            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n\t        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n\t    },\n\t    preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    addEvent = function (obj, type, fn, element) {\n\t        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n\t            f = function (e) {\n\t                var scrollY = getScroll(\"y\", element),\n\t                    scrollX = getScroll(\"x\", element);\n\t                if (supportsTouch && touchMap[has](type)) {\n\t                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n\t                            var olde = e;\n\t                            e = e.targetTouches[i];\n\t                            e.originalEvent = olde;\n\t                            e.preventDefault = preventTouch;\n\t                            e.stopPropagation = stopTouch;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var x = e.clientX + scrollX,\n\t                    y = e.clientY + scrollY;\n\t                return fn.call(element, e, x, y);\n\t            };\n\t\n\t        if (type !== realName) {\n\t            obj.addEventListener(type, f, false);\n\t        }\n\t\n\t        obj.addEventListener(realName, f, false);\n\t\n\t        return function () {\n\t            if (type !== realName) {\n\t                obj.removeEventListener(type, f, false);\n\t            }\n\t\n\t            obj.removeEventListener(realName, f, false);\n\t            return true;\n\t        };\n\t    },\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = getScroll(\"y\"),\n\t            scrollX = getScroll(\"x\"),\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch) {\n\t                var i = e.touches && e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            // glob.win.opera && parent.removeChild(node);\n\t            // node.style.display = \"none\";\n\t            // o = dragi.el.paper.getElementByPoint(x, y);\n\t            // node.style.display = display;\n\t            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t            eve.off(\"snap.drag.*.\" + dragi.el.id);\n\t        }\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds a click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes a click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds a double click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes a double click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds a mousedown event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes a mousedown event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds a mousemove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes a mousemove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds a mouseout event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes a mouseout event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds a mouseover event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes a mouseover event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds a mouseup event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes a mouseup event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds a touchstart event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes a touchstart event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds a touchmove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes a touchmove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds a touchend event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes a touchend event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds a touchcancel event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes a touchcancel event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (Snap.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({\n\t                        name: eventName,\n\t                        f: fn,\n\t                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n\t                    });\n\t                } else {\n\t                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n\t                        try {\n\t                            this.events[i].f.call(this);\n\t                        } catch (e) {}\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Snap[\"un\" + eventName] =\n\t            elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--) if (events[l].name == eventName &&\n\t                               (events[l].f == fn || !fn)) {\n\t                    events[l].unbind();\n\t                    events.splice(l, 1);\n\t                    !events.length && delete this.events;\n\t                    return this;\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds hover event handlers to the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes hover event handlers from the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n\t    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n\t    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n\t    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for an element's drag gesture\n\t     **\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n\t     * `drag.over.<id>` fires as well.\n\t     *\n\t     * Start event and start handler are called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler are called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler are called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        var el = this;\n\t        if (!arguments.length) {\n\t            var origTransform;\n\t            return el.drag(function (dx, dy) {\n\t                this.attr({\n\t                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n\t                });\n\t            }, function () {\n\t                origTransform = this.transform().local;\n\t            });\n\t        }\n\t        function start(e, x, y) {\n\t            (e.originalEvent || e).preventDefault();\n\t            el._drag.x = x;\n\t            el._drag.y = y;\n\t            el._drag.id = e.identifier;\n\t            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n\t            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n\t            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n\t            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n\t        }\n\t        function init(e, x, y) {\n\t            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n\t        }\n\t        eve.on(\"snap.draginit.\" + el.id, start);\n\t        el._drag = {};\n\t        draggable.push({el: el, start: start, init: init});\n\t        el.mousedown(init);\n\t        return el;\n\t    };\n\t    /*\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    // elproto.onDragOver = function (f) {\n\t    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n\t    // };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from the given element\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].init);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"snap.drag.*.\" + this.id);\n\t            eve.unbind(\"snap.draginit.\" + this.id);\n\t        }\n\t        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        pproto = Paper.prototype,\n\t        rgurl = /^\\s*url\\((.+)\\)/,\n\t        Str = String,\n\t        $ = Snap._.$;\n\t    Snap.filter = {};\n\t    /*\\\n\t     * Paper.filter\n\t     [ method ]\n\t     **\n\t     * Creates a `<filter>` element\n\t     **\n\t     - filstr (string) SVG fragment of filter provided as a string\n\t     = (object) @Element\n\t     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n\t     > Usage\n\t     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    pproto.filter = function (filstr) {\n\t        var paper = this;\n\t        if (paper.type != \"svg\") {\n\t            paper = paper.paper;\n\t        }\n\t        var f = Snap.parse(Str(filstr)),\n\t            id = Snap._.id(),\n\t            width = paper.node.offsetWidth,\n\t            height = paper.node.offsetHeight,\n\t            filter = $(\"filter\");\n\t        $(filter, {\n\t            id: id,\n\t            filterUnits: \"userSpaceOnUse\"\n\t        });\n\t        filter.appendChild(f.node);\n\t        paper.defs.appendChild(filter);\n\t        return new Element(filter);\n\t    };\n\t\n\t    eve.on(\"snap.util.getattr.filter\", function () {\n\t        eve.stop();\n\t        var p = $(this.node, \"filter\");\n\t        if (p) {\n\t            var match = Str(p).match(rgurl);\n\t            return match && Snap.select(match[1]);\n\t        }\n\t    });\n\t    eve.on(\"snap.util.attr.filter\", function (value) {\n\t        if (value instanceof Element && value.type == \"filter\") {\n\t            eve.stop();\n\t            var id = value.node.id;\n\t            if (!id) {\n\t                $(value.node, {id: value.id});\n\t                id = value.id;\n\t            }\n\t            $(this.node, {\n\t                filter: Snap.url(id)\n\t            });\n\t        }\n\t        if (!value || value == \"none\") {\n\t            eve.stop();\n\t            this.node.removeAttribute(\"filter\");\n\t        }\n\t    });\n\t    /*\\\n\t     * Snap.filter.blur\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the blur filter\n\t     **\n\t     - x (number) amount of horizontal blur, in pixels\n\t     - y (number) #optional amount of vertical blur, in pixels\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.blur(5, 10)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.blur = function (x, y) {\n\t        if (x == null) {\n\t            x = 2;\n\t        }\n\t        var def = y == null ? x : [x, y];\n\t        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n\t            def: def\n\t        });\n\t    };\n\t    Snap.filter.blur.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.shadow\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the shadow filter\n\t     **\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - blur (number) #optional amount of blur\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * which makes blur default to `4`. Or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n\t        if (opacity == null) {\n\t            if (color == null) {\n\t                opacity = blur;\n\t                blur = 4;\n\t                color = \"#000\";\n\t            } else {\n\t                opacity = color;\n\t                color = blur;\n\t                blur = 4;\n\t            }\n\t        }\n\t        if (blur == null) {\n\t            blur = 4;\n\t        }\n\t        if (opacity == null) {\n\t            opacity = 1;\n\t        }\n\t        if (dx == null) {\n\t            dx = 0;\n\t            dy = 2;\n\t        }\n\t        if (dy == null) {\n\t            dy = dx;\n\t        }\n\t        color = Snap.color(color);\n\t        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n\t            color: color,\n\t            dx: dx,\n\t            dy: dy,\n\t            blur: blur,\n\t            opacity: opacity\n\t        });\n\t    };\n\t    Snap.filter.shadow.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.grayscale\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the grayscale filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.grayscale = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.2126 + 0.7874 * (1 - amount),\n\t            b: 0.7152 - 0.7152 * (1 - amount),\n\t            c: 0.0722 - 0.0722 * (1 - amount),\n\t            d: 0.2126 - 0.2126 * (1 - amount),\n\t            e: 0.7152 + 0.2848 * (1 - amount),\n\t            f: 0.0722 - 0.0722 * (1 - amount),\n\t            g: 0.2126 - 0.2126 * (1 - amount),\n\t            h: 0.0722 + 0.9278 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.grayscale.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.sepia\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the sepia filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.sepia = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.393 + 0.607 * (1 - amount),\n\t            b: 0.769 - 0.769 * (1 - amount),\n\t            c: 0.189 - 0.189 * (1 - amount),\n\t            d: 0.349 - 0.349 * (1 - amount),\n\t            e: 0.686 + 0.314 * (1 - amount),\n\t            f: 0.168 - 0.168 * (1 - amount),\n\t            g: 0.272 - 0.272 * (1 - amount),\n\t            h: 0.534 - 0.534 * (1 - amount),\n\t            i: 0.131 + 0.869 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.sepia.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.saturate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the saturate filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.saturate = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n\t            amount: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.saturate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.hueRotate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the hue-rotate filter\n\t     **\n\t     - angle (number) angle of rotation\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.hueRotate = function (angle) {\n\t        angle = angle || 0;\n\t        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n\t            angle: angle\n\t        });\n\t    };\n\t    Snap.filter.hueRotate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.invert\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the invert filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.invert = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.invert.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.brightness\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the brightness filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.brightness = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n\t            amount: amount\n\t        });\n\t    };\n\t    Snap.filter.brightness.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.contrast\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the contrast filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.contrast = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: .5 - amount / 2\n\t        });\n\t    };\n\t    Snap.filter.contrast.toString = function () {\n\t        return this();\n\t    };\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var box = Snap._.box,\n\t        is = Snap.is,\n\t        firstLetter = /^[^a-z]*([tbmlrc])/i,\n\t        toString = function () {\n\t            return \"T\" + this.dx + \",\" + this.dy;\n\t        };\n\t    /*\\\n\t     * Element.getAlign\n\t     [ method ]\n\t     **\n\t     * Returns shift needed to align the element relatively to given element.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n\t     > Usage\n\t     | el.transform(el.getAlign(el2, \"top\"));\n\t     * or\n\t     | var dy = el.getAlign(el2, \"top\").dy;\n\t    \\*/\n\t    Element.prototype.getAlign = function (el, way) {\n\t        if (way == null && is(el, \"string\")) {\n\t            way = el;\n\t            el = null;\n\t        }\n\t        el = el || this.paper;\n\t        var bx = el.getBBox ? el.getBBox() : box(el),\n\t            bb = this.getBBox(),\n\t            out = {};\n\t        way = way && way.match(firstLetter);\n\t        way = way ? way[1].toLowerCase() : \"c\";\n\t        switch (way) {\n\t            case \"t\":\n\t                out.dx = 0;\n\t                out.dy = bx.y - bb.y;\n\t            break;\n\t            case \"b\":\n\t                out.dx = 0;\n\t                out.dy = bx.y2 - bb.y2;\n\t            break;\n\t            case \"m\":\n\t                out.dx = 0;\n\t                out.dy = bx.cy - bb.cy;\n\t            break;\n\t            case \"l\":\n\t                out.dx = bx.x - bb.x;\n\t                out.dy = 0;\n\t            break;\n\t            case \"r\":\n\t                out.dx = bx.x2 - bb.x2;\n\t                out.dy = 0;\n\t            break;\n\t            default:\n\t                out.dx = bx.cx - bb.cx;\n\t                out.dy = 0;\n\t            break;\n\t        }\n\t        out.toString = toString;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.align\n\t     [ method ]\n\t     **\n\t     * Aligns the element relatively to given one via transformation.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object) this element\n\t     > Usage\n\t     | el.align(el2, \"top\");\n\t     * or\n\t     | el.align(\"middle\");\n\t    \\*/\n\t    Element.prototype.align = function (el, way) {\n\t        return this.transform(\"...\" + this.getAlign(el, way));\n\t    };\n\t});\n\t\n\t// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        Str = String,\n\t        has = \"hasOwnProperty\";\n\t    function slice(from, to, f) {\n\t        return function (arr) {\n\t            var res = arr.slice(from, to);\n\t            if (res.length == 1) {\n\t                res = res[0];\n\t            }\n\t            return f ? f(res) : res;\n\t        };\n\t    }\n\t    var Animation = function (attr, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        this.attr = attr;\n\t        this.dur = ms;\n\t        easing && (this.easing = easing);\n\t        callback && (this.callback = callback);\n\t    };\n\t    Snap._.Animation = Animation;\n\t    /*\\\n\t     * Snap.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object\n\t     **\n\t     - attr (object) attributes of final destination\n\t     - duration (number) duration of the animation, in milliseconds\n\t     - easing (function) #optional one of easing functions of @mina or custom one\n\t     - callback (function) #optional callback function that fires when animation ends\n\t     = (object) animation object\n\t    \\*/\n\t    Snap.animation = function (attr, ms, easing, callback) {\n\t        return new Animation(attr, ms, easing, callback);\n\t    };\n\t    /*\\\n\t     * Element.inAnim\n\t     [ method ]\n\t     **\n\t     * Returns a set of animations that may be able to manipulate the current element\n\t     **\n\t     = (object) in format:\n\t     o {\n\t     o     anim (object) animation object,\n\t     o     mina (object) @mina object,\n\t     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t    \\*/\n\t    elproto.inAnim = function () {\n\t        var el = this,\n\t            res = [];\n\t        for (var id in el.anims) if (el.anims[has](id)) {\n\t            (function (a) {\n\t                res.push({\n\t                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n\t                    mina: a,\n\t                    curStatus: a.status(),\n\t                    status: function (val) {\n\t                        return a.status(val);\n\t                    },\n\t                    stop: function () {\n\t                        a.stop();\n\t                    }\n\t                });\n\t            }(el.anims[id]));\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.animate\n\t     [ method ]\n\t     **\n\t     * Runs generic animation of one number into another with a caring function\n\t     **\n\t     - from (number|array) number or array of numbers\n\t     - to (number|array) number or array of numbers\n\t     - setter (function) caring function that accepts one number argument\n\t     - duration (number) duration, in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function to execute when animation ends\n\t     = (object) animation object in @mina format\n\t     o {\n\t     o     id (string) animation id, consider it read-only,\n\t     o     duration (function) gets or sets the duration of the animation,\n\t     o     easing (function) easing,\n\t     o     speed (function) gets or sets the speed of the animation,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t     | var rect = Snap().rect(0, 0, 10, 10);\n\t     | Snap.animate(0, 10, function (val) {\n\t     |     rect.attr({\n\t     |         x: val\n\t     |     });\n\t     | }, 1000);\n\t     | // in given context is equivalent to\n\t     | rect.animate({x: 10}, 1000);\n\t    \\*/\n\t    Snap.animate = function (from, to, setter, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n\t        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops all the animations for the current element\n\t     **\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.stop = function () {\n\t        var anims = this.inAnim();\n\t        for (var i = 0, ii = anims.length; i < ii; i++) {\n\t            anims[i].stop();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Animates the given attributes of the element\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = attrs.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n\t            el = this;\n\t        for (var key in attrs) if (attrs[has](key)) {\n\t            if (el.equal) {\n\t                eq = el.equal(key, Str(attrs[key]));\n\t                from = eq.from;\n\t                to = eq.to;\n\t                f = eq.f;\n\t            } else {\n\t                from = +el.attr(key);\n\t                to = +attrs[key];\n\t            }\n\t            var len = is(from, \"array\") ? from.length : 1;\n\t            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n\t            fkeys = fkeys.concat(from);\n\t            tkeys = tkeys.concat(to);\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n\t                var attr = {};\n\t                for (var key in keys) if (keys[has](key)) {\n\t                    attr[key] = keys[key](val);\n\t                }\n\t                el.attr(attr);\n\t            }, easing);\n\t        el.anims[anim.id] = anim;\n\t        anim._attrs = attrs;\n\t        anim._callback = callback;\n\t        eve(\"snap.animcreated.\" + el.id, anim);\n\t        eve.once(\"mina.finish.\" + anim.id, function () {\n\t            eve.off(\"mina.*.\" + anim.id);\n\t            delete el.anims[anim.id];\n\t            callback && callback.call(el);\n\t        });\n\t        eve.once(\"mina.stop.\" + anim.id, function () {\n\t            eve.off(\"mina.*.\" + anim.id);\n\t            delete el.anims[anim.id];\n\t        });\n\t        return el;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    // Colours are from https://www.materialui.co\n\t    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n\t        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n\t        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n\t        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n\t        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n\t        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n\t        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n\t        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n\t        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n\t        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n\t        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n\t        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n\t        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n\t        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n\t        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n\t        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n\t        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n\t        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n\t        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n\t    /*\\\n\t     * Snap.mui\n\t     [ property ]\n\t     **\n\t     * Contain Material UI colours.\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.mui = {};\n\t    /*\\\n\t     * Snap.flat\n\t     [ property ]\n\t     **\n\t     * Contain Flat UI colours.\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.flat = {};\n\t    function saveColor(colors) {\n\t        colors = colors.split(/(?=#)/);\n\t        var color = new String(colors[5]);\n\t        color[50] = colors[0];\n\t        color[100] = colors[1];\n\t        color[200] = colors[2];\n\t        color[300] = colors[3];\n\t        color[400] = colors[4];\n\t        color[500] = colors[5];\n\t        color[600] = colors[6];\n\t        color[700] = colors[7];\n\t        color[800] = colors[8];\n\t        color[900] = colors[9];\n\t        if (colors[10]) {\n\t            color.A100 = colors[10];\n\t            color.A200 = colors[11];\n\t            color.A400 = colors[12];\n\t            color.A700 = colors[13];\n\t        }\n\t        return color;\n\t    }\n\t    Snap.mui.red = saveColor(red);\n\t    Snap.mui.pink = saveColor(pink);\n\t    Snap.mui.purple = saveColor(purple);\n\t    Snap.mui.deeppurple = saveColor(deeppurple);\n\t    Snap.mui.indigo = saveColor(indigo);\n\t    Snap.mui.blue = saveColor(blue);\n\t    Snap.mui.lightblue = saveColor(lightblue);\n\t    Snap.mui.cyan = saveColor(cyan);\n\t    Snap.mui.teal = saveColor(teal);\n\t    Snap.mui.green = saveColor(green);\n\t    Snap.mui.lightgreen = saveColor(lightgreen);\n\t    Snap.mui.lime = saveColor(lime);\n\t    Snap.mui.yellow = saveColor(yellow);\n\t    Snap.mui.amber = saveColor(amber);\n\t    Snap.mui.orange = saveColor(orange);\n\t    Snap.mui.deeporange = saveColor(deeporange);\n\t    Snap.mui.brown = saveColor(brown);\n\t    Snap.mui.grey = saveColor(grey);\n\t    Snap.mui.bluegrey = saveColor(bluegrey);\n\t    Snap.flat.turquoise = \"#1abc9c\";\n\t    Snap.flat.greensea = \"#16a085\";\n\t    Snap.flat.sunflower = \"#f1c40f\";\n\t    Snap.flat.orange = \"#f39c12\";\n\t    Snap.flat.emerland = \"#2ecc71\";\n\t    Snap.flat.nephritis = \"#27ae60\";\n\t    Snap.flat.carrot = \"#e67e22\";\n\t    Snap.flat.pumpkin = \"#d35400\";\n\t    Snap.flat.peterriver = \"#3498db\";\n\t    Snap.flat.belizehole = \"#2980b9\";\n\t    Snap.flat.alizarin = \"#e74c3c\";\n\t    Snap.flat.pomegranate = \"#c0392b\";\n\t    Snap.flat.amethyst = \"#9b59b6\";\n\t    Snap.flat.wisteria = \"#8e44ad\";\n\t    Snap.flat.clouds = \"#ecf0f1\";\n\t    Snap.flat.silver = \"#bdc3c7\";\n\t    Snap.flat.wetasphalt = \"#34495e\";\n\t    Snap.flat.midnightblue = \"#2c3e50\";\n\t    Snap.flat.concrete = \"#95a5a6\";\n\t    Snap.flat.asbestos = \"#7f8c8d\";\n\t    /*\\\n\t     * Snap.importMUIColors\n\t     [ method ]\n\t     **\n\t     * Imports Material UI colours into global object.\n\t     | Snap.importMUIColors();\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.importMUIColors = function () {\n\t        for (var color in Snap.mui) {\n\t            if (Snap.mui.hasOwnProperty(color)) {\n\t                window[color] = Snap.mui[color];\n\t            }\n\t        }\n\t    };\n\t});\n\t\n\tmodule.exports = Snap\n\n\n/***/ }),\n\n/***/ 251:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/logo.9c0ade52.png\";\n\n/***/ }),\n\n/***/ 620:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(59);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactHeadroom = __webpack_require__(642);\n\t\n\tvar _reactHeadroom2 = _interopRequireDefault(_reactHeadroom);\n\t\n\tvar _reactBurgerMenu = __webpack_require__(629);\n\t\n\tvar _SiteConfig = __webpack_require__(7);\n\t\n\tvar _SiteConfig2 = _interopRequireDefault(_SiteConfig);\n\t\n\tvar _NavigationModule = __webpack_require__(428);\n\t\n\tvar _NavigationModule2 = _interopRequireDefault(_NavigationModule);\n\t\n\t__webpack_require__(620);\n\t\n\tvar _logo = __webpack_require__(251);\n\t\n\tvar _logo2 = _interopRequireDefault(_logo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Navigation = function (_Component) {\n\t  _inherits(Navigation, _Component);\n\t\n\t  function Navigation(props) {\n\t    _classCallCheck(this, Navigation);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\t\n\t    _this.state = {\n\t      menuOpen: false\n\t    };\n\t    _this.handleStateChange = _this.handleStateChange.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  Navigation.prototype.handleStateChange = function handleStateChange(state) {\n\t    this.setState({ menuOpen: state.isOpen });\n\t  };\n\t\n\t  Navigation.prototype.closeMenu = function closeMenu() {\n\t    this.setState({ menuOpen: false });\n\t  };\n\t\n\t  Navigation.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    return _react2.default.createElement(\n\t      \"header\",\n\t      { className: _NavigationModule2.default.header },\n\t      _react2.default.createElement(\n\t        _reactHeadroom2.default,\n\t        { calcHeightOnResize: true, disableInlineStyles: true },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: _NavigationModule2.default.wrapper },\n\t          _react2.default.createElement(\n\t            \"div\",\n\t            { className: _NavigationModule2.default.name },\n\t            _react2.default.createElement(\n\t              \"span\",\n\t              null,\n\t              _react2.default.createElement(\n\t                _gatsbyLink2.default,\n\t                { to: \"/\" },\n\t                _react2.default.createElement(\"img\", {\n\t                  className: _NavigationModule2.default.logo,\n\t                  width: \"80px\",\n\t                  src: _logo2.default,\n\t                  alt: _SiteConfig2.default.siteTitle\n\t                })\n\t              )\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            \"nav\",\n\t            { className: _NavigationModule2.default.navigation },\n\t            _react2.default.createElement(\n\t              \"span\",\n\t              null,\n\t              _react2.default.createElement(\n\t                _gatsbyLink2.default,\n\t                { to: \"/\", activeClassName: \"active\" },\n\t                \"sua bolha\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _gatsbyLink2.default,\n\t                { to: \"/team\", activeClassName: \"active\" },\n\t                \"equipe\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _gatsbyLink2.default,\n\t                { to: \"/contact\", activeClassName: \"active\" },\n\t                \"contato\"\n\t              )\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        \"div\",\n\t        { className: _NavigationModule2.default.mobileNav },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: _NavigationModule2.default.mobileNavName },\n\t          _react2.default.createElement(\"img\", {\n\t            className: _NavigationModule2.default.logo,\n\t            width: \"80px\",\n\t            src: _logo2.default,\n\t            alt: _SiteConfig2.default.siteTitle\n\t          })\n\t        ),\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: _NavigationModule2.default.menu },\n\t          _react2.default.createElement(\n\t            _reactBurgerMenu.slide,\n\t            {\n\t              isOpen: this.state.menuOpen,\n\t              onStateChange: this.handleStateChange,\n\t              width: \"100%\" },\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              { to: \"/\", onClick: function onClick() {\n\t                  return _this2.closeMenu();\n\t                } },\n\t              _react2.default.createElement(\n\t                \"h1\",\n\t                null,\n\t                _SiteConfig2.default.siteTitle\n\t              )\n\t            ),\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              {\n\t                to: \"/team\",\n\t                activeClassName: \"active\",\n\t                onClick: function onClick() {\n\t                  return _this2.closeMenu();\n\t                } },\n\t              \"equipe\"\n\t            ),\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              {\n\t                to: \"/contact\",\n\t                activeClassName: \"active\",\n\t                onClick: function onClick() {\n\t                  return _this2.closeMenu();\n\t                } },\n\t              \"contato\"\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return Navigation;\n\t}(_react.Component);\n\t\n\texports.default = Navigation;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\tmodule.exports = {\"wrapper\":\"src-components-Navigation----Navigation-module---wrapper---2NOzV\",\"navigation\":\"src-components-Navigation----Navigation-module---navigation---h-7dk\",\"name\":\"src-components-Navigation----Navigation-module---name---1_d8J\",\"socialMedia\":\"src-components-Navigation----Navigation-module---socialMedia---OSaNT\",\"mobileNav\":\"src-components-Navigation----Navigation-module---mobileNav---UW4Y3\",\"mobileNavName\":\"src-components-Navigation----Navigation-module---mobileNavName---1j6FO\",\"logo\":\"src-components-Navigation----Navigation-module---logo---2UUIY\"};\n\n/***/ }),\n\n/***/ 314:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(59);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _SiteConfig = __webpack_require__(7);\n\t\n\tvar _SiteConfig2 = _interopRequireDefault(_SiteConfig);\n\t\n\tvar _NavigationResultsModule = __webpack_require__(429);\n\t\n\tvar _NavigationResultsModule2 = _interopRequireDefault(_NavigationResultsModule);\n\t\n\tvar _logo = __webpack_require__(251);\n\t\n\tvar _logo2 = _interopRequireDefault(_logo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar NavigationResults = function (_Component) {\n\t  _inherits(NavigationResults, _Component);\n\t\n\t  function NavigationResults(props) {\n\t    _classCallCheck(this, NavigationResults);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\t\n\t    _this.state = {\n\t      menuOpen: false\n\t    };\n\t    _this.handleStateChange = _this.handleStateChange.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  NavigationResults.prototype.handleStateChange = function handleStateChange(state) {\n\t    this.setState({ menuOpen: state.isOpen });\n\t  };\n\t\n\t  NavigationResults.prototype.closeMenu = function closeMenu() {\n\t    this.setState({ menuOpen: false });\n\t  };\n\t\n\t  NavigationResults.prototype.render = function render() {\n\t    return _react2.default.createElement(\n\t      \"header\",\n\t      { className: _NavigationResultsModule2.default.header },\n\t      _react2.default.createElement(\n\t        \"div\",\n\t        { className: _NavigationResultsModule2.default.wrapper },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: _NavigationResultsModule2.default.name },\n\t          _react2.default.createElement(\n\t            \"span\",\n\t            null,\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              { to: \"/\" },\n\t              _react2.default.createElement(\"img\", {\n\t                className: _NavigationResultsModule2.default.logo,\n\t                width: \"80px\",\n\t                src: _logo2.default,\n\t                alt: _SiteConfig2.default.siteTitle\n\t              })\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return NavigationResults;\n\t}(_react.Component);\n\t\n\texports.default = NavigationResults;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\tmodule.exports = {\"wrapper\":\"src-components-NavigationResults----NavigationResults-module---wrapper---27y3W\",\"navigation\":\"src-components-NavigationResults----NavigationResults-module---navigation---L52Z0\",\"name\":\"src-components-NavigationResults----NavigationResults-module---name---2M85Q\",\"socialMedia\":\"src-components-NavigationResults----NavigationResults-module---socialMedia---1guyN\",\"mobileNav\":\"src-components-NavigationResults----NavigationResults-module---mobileNav---1uWgg\",\"mobileNavName\":\"src-components-NavigationResults----NavigationResults-module---mobileNavName---2NxZa\",\"logo\":\"src-components-NavigationResults----NavigationResults-module---logo---3uq-W\"};\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactHelmet = __webpack_require__(20);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _SiteConfig = __webpack_require__(7);\n\t\n\tvar _SiteConfig2 = _interopRequireDefault(_SiteConfig);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SEO = function SEO(props) {\n\t  var postNode = props.postNode,\n\t      postPath = props.postPath,\n\t      postSEO = props.postSEO;\n\t\n\t  var title = void 0;\n\t  var description = void 0;\n\t  var image = void 0;\n\t  var postURL = void 0;\n\t  var realPrefix = _SiteConfig2.default.pathPrefix === '/' ? '' : _SiteConfig2.default.pathPrefix;\n\t  if (postSEO) {\n\t    var postMeta = postNode.frontmatter;\n\t    title = postMeta.title; // eslint-disable-line prefer-destructuring\n\t    description = postNode.excerpt;\n\t    image = postMeta.cover.childImageSharp.resize.src;\n\t    postURL = _SiteConfig2.default.siteUrl + realPrefix + postPath;\n\t  } else {\n\t    title = _SiteConfig2.default.siteTitleAlt;\n\t    description = _SiteConfig2.default.siteDescription;\n\t    image = _SiteConfig2.default.siteLogo;\n\t  }\n\t  image = _SiteConfig2.default.siteUrl + realPrefix + image;\n\t  var blogURL = _SiteConfig2.default.siteUrl + _SiteConfig2.default.pathPrefix;\n\t  var schemaOrgJSONLD = [{\n\t    '@context': 'http://schema.org',\n\t    '@type': 'WebSite',\n\t    url: blogURL,\n\t    name: title,\n\t    alternateName: _SiteConfig2.default.siteTitleAlt ? _SiteConfig2.default.siteTitleAlt : ''\n\t  }];\n\t  if (postSEO) {\n\t    schemaOrgJSONLD.push({\n\t      '@context': 'http://schema.org',\n\t      '@type': 'BreadcrumbList',\n\t      itemListElement: [{\n\t        '@type': 'ListItem',\n\t        position: 1,\n\t        item: {\n\t          '@id': postURL,\n\t          name: title,\n\t          image: image\n\t        }\n\t      }]\n\t    }, {\n\t      '@context': 'http://schema.org',\n\t      '@type': 'BlogPosting',\n\t      url: blogURL,\n\t      name: title,\n\t      alternateName: _SiteConfig2.default.siteTitleAlt ? _SiteConfig2.default.siteTitleAlt : '',\n\t      headline: title,\n\t      image: {\n\t        '@type': 'ImageObject',\n\t        url: image\n\t      },\n\t      description: description\n\t    });\n\t  }\n\t  return _react2.default.createElement(\n\t    _reactHelmet2.default,\n\t    null,\n\t    _react2.default.createElement('html', { lang: _SiteConfig2.default.siteLanguage }),\n\t    _react2.default.createElement(\n\t      'title',\n\t      null,\n\t      title\n\t    ),\n\t    _react2.default.createElement('meta', { charSet: 'utf-8' }),\n\t    _react2.default.createElement('meta', { httpEquiv: 'X-UA-Compatible', content: 'IE=edge,chrome=1' }),\n\t    _react2.default.createElement('meta', { name: 'viewport', content: 'width=device-width, initial-scale = 1.0, maximum-scale=1.0' }),\n\t    _react2.default.createElement('meta', { name: 'description', content: description }),\n\t    _react2.default.createElement('meta', { name: 'image', content: image }),\n\t    _react2.default.createElement(\n\t      'script',\n\t      { type: 'application/ld+json' },\n\t      JSON.stringify(schemaOrgJSONLD)\n\t    ),\n\t    _react2.default.createElement('meta', { property: 'og:locale', content: _SiteConfig2.default.ogLanguage }),\n\t    _react2.default.createElement('meta', { property: 'og:site_name', content: _SiteConfig2.default.ogSiteName }),\n\t    _react2.default.createElement('meta', { property: 'og:url', content: postSEO ? postURL : blogURL }),\n\t    postSEO ? _react2.default.createElement('meta', { property: 'og:type', content: 'article' }) : null,\n\t    _react2.default.createElement('meta', { property: 'og:title', content: title }),\n\t    _react2.default.createElement('meta', { property: 'og:description', content: description }),\n\t    _react2.default.createElement('meta', { property: 'og:image', content: image }),\n\t    _react2.default.createElement('meta', { property: 'fb:app_id', content: _SiteConfig2.default.siteFBAppID ? _SiteConfig2.default.siteFBAppID : '' }),\n\t    _react2.default.createElement('meta', { name: 'twitter:card', content: 'summary_large_image' }),\n\t    _react2.default.createElement('meta', { name: 'twitter:creator', content: _SiteConfig2.default.userTwitter ? _SiteConfig2.default.userTwitter : '' }),\n\t    _react2.default.createElement('meta', { name: 'twitter:title', content: title }),\n\t    _react2.default.createElement('meta', { name: 'twitter:url', content: _SiteConfig2.default.siteUrl }),\n\t    _react2.default.createElement('meta', { name: 'twitter:description', content: description }),\n\t    _react2.default.createElement('meta', { name: 'twitter:image', content: image })\n\t  );\n\t};\n\t\n\texports.default = SEO;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 687:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/apple-touch-icon.a69e8661.png\";\n\n/***/ }),\n\n/***/ 688:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/favicon.a69e8661.png\";\n\n/***/ }),\n\n/***/ 320:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactHelmet = __webpack_require__(20);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _Navigation = __webpack_require__(313);\n\t\n\tvar _Navigation2 = _interopRequireDefault(_Navigation);\n\t\n\tvar _NavigationResults = __webpack_require__(314);\n\t\n\tvar _NavigationResults2 = _interopRequireDefault(_NavigationResults);\n\t\n\tvar _SEO = __webpack_require__(114);\n\t\n\tvar _SEO2 = _interopRequireDefault(_SEO);\n\t\n\t__webpack_require__(621);\n\t\n\tvar _favicon = __webpack_require__(688);\n\t\n\tvar _favicon2 = _interopRequireDefault(_favicon);\n\t\n\tvar _appleTouchIcon = __webpack_require__(687);\n\t\n\tvar _appleTouchIcon2 = _interopRequireDefault(_appleTouchIcon);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MainLayout = function (_Component) {\n\t  _inherits(MainLayout, _Component);\n\t\n\t  function MainLayout() {\n\t    _classCallCheck(this, MainLayout);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this));\n\t\n\t    _this.state = {\n\t      isResults: typeof window !== \"undefined\" && window.location.pathname === \"/results/\"\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  MainLayout.prototype.componentDidMount = function componentDidMount() {\n\t    var _this2 = this;\n\t\n\t    window.onhashchange = function () {\n\t      _this2.setState({\n\t        isResults: typeof window !== \"undefined\" && window.location.pathname === \"/results/\"\n\t      });\n\t    };\n\t  };\n\t\n\t  MainLayout.prototype.render = function render() {\n\t    var children = this.props.children;\n\t    var isResults = this.state.isResults;\n\t\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactHelmet2.default,\n\t        null,\n\t        _react2.default.createElement(\"link\", { rel: \"shortcut icon\", href: _favicon2.default }),\n\t        _react2.default.createElement(\"link\", { rel: \"apple-touch-icon\", href: _appleTouchIcon2.default })\n\t      ),\n\t      _react2.default.createElement(_SEO2.default, null),\n\t      typeof window !== \"undefined\" && window.location.pathname === \"/results/\" ? _react2.default.createElement(_NavigationResults2.default, null) : _react2.default.createElement(_Navigation2.default, null),\n\t      children()\n\t    );\n\t  };\n\t\n\t  return MainLayout;\n\t}(_react.Component);\n\t\n\texports.default = MainLayout;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 621:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-layouts-index-jsx-b5fa068d63beef03de12.js","module.exports = {\"layoutContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/layout-index.json\n// module id = 145\n// module chunks = 60335399758886 79611799117203","\n  import React from \"react\"\n  import Component from \"/Users/fernandodealmeidacoelho/Code/bolha-social-website/src/layouts/index.jsx\"\n  import data from \"/Users/fernandodealmeidacoelho/Code/bolha-social-website/.cache/json/layout-index.json\"\n\n  export default (props) => <Component {...props} {...data} />\n  \n\n\n// WEBPACK FOOTER //\n// ./.cache/layouts/index.js","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eve/eve.js\n// module id = 423\n// module chunks = 79611799117203","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/performance-now/lib/performance-now.js\n// module id = 624\n// module chunks = 79611799117203","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raf/index.js\n// module id = 627\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerIcon.js\n// module id = 628\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerMenu.js\n// module id = 629\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/CrossIcon.js\n// module id = 630\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/baseStyles.js\n// module id = 631\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menuFactory.js\n// module id = 19\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/bubble.js\n// module id = 632\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/elastic.js\n// module id = 633\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/fallDown.js\n// module id = 634\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/push.js\n// module id = 635\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/pushRotate.js\n// module id = 636\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/reveal.js\n// module id = 637\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleDown.js\n// module id = 638\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleRotate.js\n// module id = 639\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/slide.js\n// module id = 640\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/stack.js\n// module id = 641\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/snapsvgImporter.js\n// module id = 244\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldUpdate2 = require('./shouldUpdate');\n\nvar _shouldUpdate3 = _interopRequireDefault(_shouldUpdate2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line import/no-unresolved\n\n\nvar noop = function noop() {};\n\nvar Headroom = function (_Component) {\n  _inherits(Headroom, _Component);\n\n  function Headroom(props) {\n    _classCallCheck(this, Headroom);\n\n    // Class variables.\n    var _this = _possibleConstructorReturn(this, (Headroom.__proto__ || Object.getPrototypeOf(Headroom)).call(this, props));\n\n    _this.setRef = function (ref) {\n      return _this.inner = ref;\n    };\n\n    _this.setHeightOffset = function () {\n      _this.setState({\n        height: _this.inner.offsetHeight\n      });\n      _this.resizeTicking = false;\n    };\n\n    _this.getScrollY = function () {\n      if (_this.props.parent().pageYOffset !== void 0) {\n        return _this.props.parent().pageYOffset;\n      } else if (_this.props.parent().scrollTop !== void 0) {\n        return _this.props.parent().scrollTop;\n      } else {\n        return (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      }\n    };\n\n    _this.getViewportHeight = function () {\n      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n\n    _this.getDocumentHeight = function () {\n      var body = document.body;\n      var documentElement = document.documentElement;\n\n      return Math.max(body.scrollHeight, documentElement.scrollHeight, body.offsetHeight, documentElement.offsetHeight, body.clientHeight, documentElement.clientHeight);\n    };\n\n    _this.getElementPhysicalHeight = function (elm) {\n      return Math.max(elm.offsetHeight, elm.clientHeight);\n    };\n\n    _this.getElementHeight = function (elm) {\n      return Math.max(elm.scrollHeight, elm.offsetHeight, elm.clientHeight);\n    };\n\n    _this.getScrollerPhysicalHeight = function () {\n      var parent = _this.props.parent();\n\n      return parent === window || parent === document.body ? _this.getViewportHeight() : _this.getElementPhysicalHeight(parent);\n    };\n\n    _this.getScrollerHeight = function () {\n      var parent = _this.props.parent();\n\n      return parent === window || parent === document.body ? _this.getDocumentHeight() : _this.getElementHeight(parent);\n    };\n\n    _this.isOutOfBound = function (currentScrollY) {\n      var pastTop = currentScrollY < 0;\n\n      var scrollerPhysicalHeight = _this.getScrollerPhysicalHeight();\n      var scrollerHeight = _this.getScrollerHeight();\n\n      var pastBottom = currentScrollY + scrollerPhysicalHeight > scrollerHeight;\n\n      return pastTop || pastBottom;\n    };\n\n    _this.handleScroll = function () {\n      if (!_this.scrollTicking) {\n        _this.scrollTicking = true;\n        (0, _raf2.default)(_this.update);\n      }\n    };\n\n    _this.handleResize = function () {\n      if (!_this.resizeTicking) {\n        _this.resizeTicking = true;\n        (0, _raf2.default)(_this.setHeightOffset);\n      }\n    };\n\n    _this.unpin = function () {\n      _this.props.onUnpin();\n\n      _this.setState({\n        translateY: '-100%',\n        className: 'headroom headroom--unpinned'\n      }, function () {\n        setTimeout(function () {\n          _this.setState({ state: 'unpinned' });\n        }, 0);\n      });\n    };\n\n    _this.pin = function () {\n      _this.props.onPin();\n\n      _this.setState({\n        translateY: 0,\n        className: 'headroom headroom--pinned',\n        state: 'pinned'\n      });\n    };\n\n    _this.unfix = function () {\n      _this.props.onUnfix();\n\n      _this.setState({\n        translateY: 0,\n        className: 'headroom headroom--unfixed',\n        state: 'unfixed'\n      });\n    };\n\n    _this.update = function () {\n      _this.currentScrollY = _this.getScrollY();\n\n      if (!_this.isOutOfBound(_this.currentScrollY)) {\n        var _shouldUpdate = (0, _shouldUpdate3.default)(_this.lastKnownScrollY, _this.currentScrollY, _this.props, _this.state),\n            action = _shouldUpdate.action;\n\n        if (action === 'pin') {\n          _this.pin();\n        } else if (action === 'unpin') {\n          _this.unpin();\n        } else if (action === 'unfix') {\n          _this.unfix();\n        }\n      }\n\n      _this.lastKnownScrollY = _this.currentScrollY;\n      _this.scrollTicking = false;\n    };\n\n    _this.currentScrollY = 0;\n    _this.lastKnownScrollY = 0;\n    _this.scrollTicking = false;\n    _this.resizeTicking = false;\n    _this.state = {\n      state: 'unfixed',\n      translateY: 0,\n      className: 'headroom headroom--unfixed'\n    };\n    return _this;\n  }\n\n  _createClass(Headroom, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setHeightOffset();\n      if (!this.props.disable) {\n        this.props.parent().addEventListener('scroll', this.handleScroll);\n\n        if (this.props.calcHeightOnResize) {\n          this.props.parent().addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.disable && !this.props.disable) {\n        this.unfix();\n        this.props.parent().removeEventListener('scroll', this.handleScroll);\n        this.props.parent().removeEventListener('resize', this.handleResize);\n      } else if (!nextProps.disable && this.props.disable) {\n        this.props.parent().addEventListener('scroll', this.handleScroll);\n\n        if (this.props.calcHeightOnResize) {\n          this.props.parent().addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowequal2.default)(this.props, nextProps) || !(0, _shallowequal2.default)(this.state, nextState);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // If children have changed, remeasure height.\n      if (prevProps.children !== this.props.children) {\n        this.setHeightOffset();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.parent().removeEventListener('scroll', this.handleScroll);\n      window.removeEventListener('scroll', this.handleScroll);\n      this.props.parent().removeEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          userClassName = _props.className,\n          divProps = _objectWithoutProperties(_props, ['className']);\n\n      delete divProps.onUnpin;\n      delete divProps.onPin;\n      delete divProps.onUnfix;\n      delete divProps.disableInlineStyles;\n      delete divProps.disable;\n      delete divProps.parent;\n      delete divProps.children;\n      delete divProps.upTolerance;\n      delete divProps.downTolerance;\n      delete divProps.pinStart;\n      delete divProps.calcHeightOnResize;\n\n      var style = divProps.style,\n          wrapperStyle = divProps.wrapperStyle,\n          rest = _objectWithoutProperties(divProps, ['style', 'wrapperStyle']);\n\n      var innerStyle = {\n        position: this.props.disable || this.state.state === 'unfixed' ? 'relative' : 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1,\n        WebkitTransform: 'translateY(' + this.state.translateY + ')',\n        MsTransform: 'translateY(' + this.state.translateY + ')',\n        transform: 'translateY(' + this.state.translateY + ')'\n      };\n\n      var className = this.state.className;\n\n      // Don't add css transitions until after we've done the initial\n      // negative transform when transitioning from 'unfixed' to 'unpinned'.\n      // If we don't do this, the header will flash into view temporarily\n      // while it transitions from 0 — -100%.\n      if (this.state.state !== 'unfixed') {\n        innerStyle = _extends({}, innerStyle, {\n          WebkitTransition: 'all .2s ease-in-out',\n          MozTransition: 'all .2s ease-in-out',\n          OTransition: 'all .2s ease-in-out',\n          transition: 'all .2s ease-in-out'\n        });\n        className += ' headroom--scrolled';\n      }\n\n      if (!this.props.disableInlineStyles) {\n        innerStyle = _extends({}, innerStyle, style);\n      } else {\n        innerStyle = style;\n      }\n\n      var wrapperStyles = _extends({}, wrapperStyle, {\n        height: this.state.height ? this.state.height : null\n      });\n\n      var wrapperClassName = userClassName ? userClassName + ' headroom-wrapper' : 'headroom-wrapper';\n\n      return _react2.default.createElement(\n        'div',\n        { style: wrapperStyles, className: wrapperClassName },\n        _react2.default.createElement(\n          'div',\n          _extends({\n            ref: this.setRef\n          }, rest, {\n            style: innerStyle,\n            className: className\n          }),\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return Headroom;\n}(_react.Component);\n\nHeadroom.propTypes = {\n  className: _propTypes2.default.string,\n  parent: _propTypes2.default.func,\n  children: _propTypes2.default.any.isRequired,\n  disableInlineStyles: _propTypes2.default.bool,\n  disable: _propTypes2.default.bool,\n  upTolerance: _propTypes2.default.number,\n  downTolerance: _propTypes2.default.number,\n  onPin: _propTypes2.default.func,\n  onUnpin: _propTypes2.default.func,\n  onUnfix: _propTypes2.default.func,\n  wrapperStyle: _propTypes2.default.object,\n  pinStart: _propTypes2.default.number,\n  style: _propTypes2.default.object,\n  calcHeightOnResize: _propTypes2.default.bool\n};\nHeadroom.defaultProps = {\n  parent: function parent() {\n    return window;\n  },\n  disableInlineStyles: false,\n  disable: false,\n  upTolerance: 5,\n  downTolerance: 0,\n  onPin: noop,\n  onUnpin: noop,\n  onUnfix: noop,\n  wrapperStyle: {},\n  pinStart: 0,\n  calcHeightOnResize: true\n};\nexports.default = Headroom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-headroom/dist/index.js\n// module id = 642\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  var lastKnownScrollY = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;\n  var currentScrollY = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n  var props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  var state = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n\n  var scrollDirection = currentScrollY >= lastKnownScrollY ? 'down' : 'up';\n  var distanceScrolled = Math.abs(currentScrollY - lastKnownScrollY);\n\n  // We're disabled\n  if (props.disable) {\n    return {\n      action: 'none',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n    // We're at the top and not fixed yet.\n  } else if (currentScrollY <= props.pinStart && state.state !== 'unfixed') {\n    return {\n      action: 'unfix',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n    // We're unfixed and headed down. Carry on.\n  } else if (currentScrollY <= state.height && scrollDirection === 'down' && state.state === 'unfixed') {\n    return {\n      action: 'none',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n    // We're past the header and scrolling down.\n    // We transition to \"unpinned\" if necessary.\n  } else if (scrollDirection === 'down' && ['pinned', 'unfixed'].indexOf(state.state) >= 0 && currentScrollY > state.height + props.pinStart && distanceScrolled > props.downTolerance) {\n    return {\n      action: 'unpin',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n    // We're scrolling up, we transition to \"pinned\"\n  } else if (scrollDirection === 'up' && distanceScrolled > props.upTolerance && ['pinned', 'unfixed'].indexOf(state.state) < 0) {\n    return {\n      action: 'pin',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n    // We're scrolling up, and inside the header.\n    // We transition to pin regardless of upTolerance\n  } else if (scrollDirection === 'up' && currentScrollY <= state.height && ['pinned', 'unfixed'].indexOf(state.state) < 0) {\n    return {\n      action: 'pin',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n  } else {\n    return {\n      action: 'none',\n      scrollDirection: scrollDirection,\n      distanceScrolled: distanceScrolled\n    };\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-headroom/dist/shouldUpdate.js\n// module id = 643\n// module chunks = 79611799117203","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/snapsvg-cjs/dist/snap.svg-cjs.js\n// module id = 673\n// module chunks = 79611799117203","module.exports = __webpack_public_path__ + \"static/logo.9c0ade52.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/logo.png\n// module id = 251\n// module chunks = 79611799117203","import React, { Component } from \"react\";\nimport Link from \"gatsby-link\";\nimport Headroom from \"react-headroom\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport config from \"../../../config/SiteConfig\";\nimport styles from \"./Navigation.module.scss\";\nimport \"./Headroom.scss\";\nimport logo from \"../../assets/images/logo.png\";\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n  }\n\n  handleStateChange(state) {\n    this.setState({ menuOpen: state.isOpen });\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false });\n  }\n  render() {\n    return (\n      <header className={styles.header}>\n        <Headroom calcHeightOnResize disableInlineStyles>\n          <div className={styles.wrapper}>\n            <div className={styles.name}>\n              <span>\n                <Link to=\"/\">\n                  <img\n                    className={styles.logo}\n                    width=\"80px\"\n                    src={logo}\n                    alt={config.siteTitle}\n                  />\n                </Link>\n              </span>\n            </div>\n\n            <nav className={styles.navigation}>\n              <span>\n                <Link to=\"/\" activeClassName=\"active\">\n                  sua bolha\n                </Link>\n                <Link to=\"/team\" activeClassName=\"active\">\n                  equipe\n                </Link>\n                <Link to=\"/contact\" activeClassName=\"active\">\n                  contato\n                </Link>\n                {/*<Link to=\"/what\" activeClassName=\"active\">\n                  o que é\n                </Link>\n                <Link to=\"/share\" activeClassName=\"active\">\n                  compartilhe\n                </Link> */}\n              </span>\n            </nav>\n          </div>\n        </Headroom>\n        <div className={styles.mobileNav}>\n          <div className={styles.mobileNavName}>\n            <img\n              className={styles.logo}\n              width=\"80px\"\n              src={logo}\n              alt={config.siteTitle}\n            />\n          </div>\n          <div className={styles.menu}>\n            <Menu\n              isOpen={this.state.menuOpen}\n              onStateChange={this.handleStateChange}\n              width=\"100%\">\n              <Link to=\"/\" onClick={() => this.closeMenu()}>\n                <h1>{config.siteTitle}</h1>\n              </Link>\n              <Link\n                to=\"/team\"\n                activeClassName=\"active\"\n                onClick={() => this.closeMenu()}>\n                equipe\n              </Link>\n              <Link\n                to=\"/contact\"\n                activeClassName=\"active\"\n                onClick={() => this.closeMenu()}>\n                contato\n              </Link>\n              {/*<Link\n                to=\"/\"\n                activeClassName=\"active\"\n                onClick={() => this.closeMenu()}\n              >\n                sua bolha\n              </Link>\n              <Link\n                to=\"/what\"\n                activeClassName=\"active\"\n                onClick={() => this.closeMenu()}\n              >\n                o que é\n              </Link>\n              <Link\n                to=\"/share\"\n                activeClassName=\"active\"\n                onClick={() => this.closeMenu()}\n              >\n                compartilhe\n              </Link>\n            */}\n            </Menu>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Navigation/Navigation.jsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"wrapper\":\"src-components-Navigation----Navigation-module---wrapper---2NOzV\",\"navigation\":\"src-components-Navigation----Navigation-module---navigation---h-7dk\",\"name\":\"src-components-Navigation----Navigation-module---name---1_d8J\",\"socialMedia\":\"src-components-Navigation----Navigation-module---socialMedia---OSaNT\",\"mobileNav\":\"src-components-Navigation----Navigation-module---mobileNav---UW4Y3\",\"mobileNavName\":\"src-components-Navigation----Navigation-module---mobileNavName---1j6FO\",\"logo\":\"src-components-Navigation----Navigation-module---logo---2UUIY\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Navigation/Navigation.module.scss\n// module id = 428\n// module chunks = 79611799117203","import React, { Component } from \"react\";\nimport Link from \"gatsby-link\";\nimport config from \"../../../config/SiteConfig\";\nimport styles from \"./NavigationResults.module.scss\";\nimport logo from \"../../assets/images/logo.png\";\n\nexport default class NavigationResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n  }\n\n  handleStateChange(state) {\n    this.setState({ menuOpen: state.isOpen });\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false });\n  }\n  render() {\n    return (\n      <header className={styles.header}>\n        <div className={styles.wrapper}>\n          <div className={styles.name}>\n            <span>\n              <Link to=\"/\">\n                <img\n                  className={styles.logo}\n                  width=\"80px\"\n                  src={logo}\n                  alt={config.siteTitle}\n                />\n              </Link>\n            </span>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/NavigationResults/NavigationResults.jsx","// removed by extract-text-webpack-plugin\nmodule.exports = {\"wrapper\":\"src-components-NavigationResults----NavigationResults-module---wrapper---27y3W\",\"navigation\":\"src-components-NavigationResults----NavigationResults-module---navigation---L52Z0\",\"name\":\"src-components-NavigationResults----NavigationResults-module---name---2M85Q\",\"socialMedia\":\"src-components-NavigationResults----NavigationResults-module---socialMedia---1guyN\",\"mobileNav\":\"src-components-NavigationResults----NavigationResults-module---mobileNav---1uWgg\",\"mobileNavName\":\"src-components-NavigationResults----NavigationResults-module---mobileNavName---2NxZa\",\"logo\":\"src-components-NavigationResults----NavigationResults-module---logo---3uq-W\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/NavigationResults/NavigationResults.module.scss\n// module id = 429\n// module chunks = 79611799117203","import React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = postMeta.cover.childImageSharp.resize.src;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitleAlt;\n    description = config.siteDescription;\n    image = config.siteLogo;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    );\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{title}</title>\n      <meta charSet=\"utf-8\" />\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale = 1.0, maximum-scale=1.0\" />\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/SEO/SEO.jsx","module.exports = __webpack_public_path__ + \"static/apple-touch-icon.a69e8661.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layouts/apple-touch-icon.png\n// module id = 687\n// module chunks = 79611799117203","module.exports = __webpack_public_path__ + \"static/favicon.a69e8661.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layouts/favicon.png\n// module id = 688\n// module chunks = 79611799117203","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport NavigationResults from \"../components/NavigationResults/NavigationResults\";\nimport SEO from \"../components/SEO/SEO\";\nimport \"../utils/emma.scss\";\n\nimport favicon from \"./favicon.png\";\nimport appleTouchIcon from \"./apple-touch-icon.png\";\n\nclass MainLayout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isResults:\n        typeof window !== \"undefined\" &&\n        window.location.pathname === \"/results/\"\n    };\n  }\n\n  componentDidMount() {\n    window.onhashchange = () => {\n      this.setState({\n        isResults:\n          typeof window !== \"undefined\" &&\n          window.location.pathname === \"/results/\"\n      });\n    };\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isResults } = this.state;\n\n    return (\n      <React.Fragment>\n        <Helmet>\n          <link rel=\"shortcut icon\" href={favicon} />\n          <link rel=\"apple-touch-icon\" href={appleTouchIcon} />\n        </Helmet>\n        <SEO />\n        {typeof window !== \"undefined\" &&\n        window.location.pathname === \"/results/\" ? (\n          <NavigationResults />\n        ) : (\n          <Navigation />\n        )}\n        {children()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainLayout;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layouts/index.jsx"],"sourceRoot":""}